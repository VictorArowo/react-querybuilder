{"version":3,"file":"BulmaValueEditor-legacy.05bcf8af.js","sources":["../../../bulma/src/BulmaActionElement.tsx","../../../bulma/src/BulmaNotToggle.tsx","../../../bulma/src/utils.tsx","../../../bulma/src/BulmaValueSelector.tsx","../../../bulma/src/BulmaValueEditor.tsx"],"sourcesContent":["import type { ActionProps } from 'react-querybuilder';\n\nexport const BulmaActionElement = ({\n  className,\n  handleOnClick,\n  label,\n  title,\n  disabled,\n  disabledTranslation,\n}: ActionProps) => (\n  <button\n    type=\"button\"\n    className={`button is-small ${className}`}\n    title={disabledTranslation && disabled ? disabledTranslation.title : title}\n    onClick={e => handleOnClick(e)}\n    disabled={disabled && !disabledTranslation}>\n    {disabledTranslation && disabled ? disabledTranslation.label : label}\n  </button>\n);\n\nBulmaActionElement.displayName = 'BulmaActionElement';\n","import type { NotToggleProps } from 'react-querybuilder';\n\nexport const BulmaNotToggle = ({\n  className,\n  handleOnChange,\n  label,\n  checked,\n  title,\n  disabled,\n}: NotToggleProps) => (\n  <label className={`${className} checkbox`} title={title}>\n    <input\n      type=\"checkbox\"\n      disabled={disabled}\n      checked={checked}\n      onChange={e => handleOnChange(e.target.checked)}\n    />\n    {label}\n  </label>\n);\n\nBulmaNotToggle.displayName = 'BulmaNotToggle';\n","import type { Field, NameLabelPair, OptionGroup } from 'react-querybuilder';\n\nexport const isOptionGroupArray = (arr: Field['values']): arr is OptionGroup[] =>\n  Array.isArray(arr) && arr.length > 0 && 'options' in arr[0];\n\nexport const toOptions = (arr?: NameLabelPair[] | OptionGroup[]) =>\n  isOptionGroupArray(arr)\n    ? arr.map(og => (\n        <optgroup key={og.label} label={og.label}>\n          {og.options.map(opt => (\n            <option key={opt.name} value={opt.name}>\n              {opt.label}\n            </option>\n          ))}\n        </optgroup>\n      ))\n    : Array.isArray(arr)\n    ? arr.map(opt => (\n        <option key={opt.name} value={opt.name}>\n          {opt.label}\n        </option>\n      ))\n    : /* istanbul ignore next */ null;\n","import { useMemo, type ChangeEvent } from 'react';\nimport type { ValueSelectorProps } from 'react-querybuilder';\nimport { toOptions } from './utils';\n\nexport const BulmaValueSelector = ({\n  className,\n  handleOnChange,\n  options,\n  value,\n  title,\n  disabled,\n  multiple,\n}: ValueSelectorProps) => {\n  const onChange = useMemo(() => {\n    if (multiple) {\n      return (e: ChangeEvent<HTMLSelectElement>) =>\n        handleOnChange(\n          [...e.target.options]\n            .filter(o => o.selected)\n            .map(o => o.value)\n            .join(',')\n        );\n    }\n    return (e: ChangeEvent<HTMLSelectElement>) => handleOnChange(e.target.value);\n  }, [handleOnChange, multiple]);\n\n  return (\n    <div title={title} className={`${className} select is-small`}>\n      <select\n        value={multiple && value ? value.split(',') : value}\n        multiple={!!multiple}\n        disabled={disabled}\n        onChange={onChange}>\n        {toOptions(options)}\n      </select>\n    </div>\n  );\n};\n\nBulmaValueSelector.displayName = 'BulmaValueSelector';\n","import { useEffect } from 'react';\nimport type { ValueEditorProps } from 'react-querybuilder';\nimport { BulmaValueSelector } from './BulmaValueSelector';\n\nexport const BulmaValueEditor = ({\n  fieldData,\n  operator,\n  value,\n  handleOnChange,\n  title,\n  className,\n  type,\n  inputType,\n  values,\n  disabled,\n  ...props\n}: ValueEditorProps) => {\n  useEffect(() => {\n    if (\n      inputType === 'number' &&\n      !['between', 'notBetween', 'in', 'notIn'].includes(operator) &&\n      typeof value === 'string' &&\n      value.includes(',')\n    ) {\n      handleOnChange('');\n    }\n  }, [inputType, operator, value, handleOnChange]);\n\n  if (operator === 'null' || operator === 'notNull') {\n    return null;\n  }\n\n  const placeHolderText = fieldData?.placeholder ?? '';\n  const inputTypeCoerced = ['between', 'notBetween', 'in', 'notIn'].includes(operator)\n    ? 'text'\n    : inputType || 'text';\n\n  switch (type) {\n    case 'select':\n    case 'multiselect':\n      return (\n        <BulmaValueSelector\n          {...props}\n          title={title}\n          className={className}\n          handleOnChange={handleOnChange}\n          options={values!}\n          value={value}\n          disabled={disabled}\n          multiple={type === 'multiselect'}\n        />\n      );\n\n    case 'textarea':\n      return (\n        <div className={`${className} control`}>\n          <textarea\n            value={value}\n            title={title}\n            disabled={disabled}\n            className=\"textarea\"\n            placeholder={placeHolderText}\n            onChange={e => handleOnChange(e.target.value)}\n          />\n        </div>\n      );\n\n    case 'switch':\n    case 'checkbox':\n      return (\n        <label title={title} className={`${className} checkbox`}>\n          <input\n            type=\"checkbox\"\n            checked={!!value}\n            disabled={disabled}\n            onChange={e => handleOnChange(e.target.checked)}\n          />\n        </label>\n      );\n\n    case 'radio':\n      return (\n        <div className={`${className} control`} title={title}>\n          {values!.map(v => (\n            <label key={v.name} className=\"radio\">\n              <input\n                type=\"radio\"\n                value={v.name}\n                checked={value === v.name}\n                onChange={() => handleOnChange(v.name)}\n                disabled={disabled}\n              />\n              {v.label}\n            </label>\n          ))}\n        </div>\n      );\n  }\n\n  return (\n    <div className={`${className} control`}>\n      <input\n        type={inputTypeCoerced}\n        value={value}\n        title={title}\n        disabled={disabled}\n        className=\"input is-small\"\n        placeholder={placeHolderText}\n        onChange={e => handleOnChange(e.target.value)}\n      />\n    </div>\n  );\n};\n\nBulmaValueEditor.displayName = 'BulmaValueEditor';\n"],"names":["_ref","className","handleOnClick","label","title","disabled","disabledTranslation","type","onClick","e","children","displayName","handleOnChange","_ref2","checked","_jsx","onChange","target","isOptionGroupArray","toOptions","arr","Array","isArray","length","map","og","options","opt","value","name","_ref3","multiple","useMemo","_toConsumableArray","filter","o","selected","join","split","BulmaValueSelector","_ref4","fieldData","operator","inputType","values","props","_objectWithoutProperties","_excluded","useEffect","includes","placeHolderText","placeholder","inputTypeCoerced","v"],"mappings":"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"}