{"version":3,"file":"constants.ce3eb4df.js","sources":["../../vite/modulepreload-polyfill","../../../react-querybuilder/src/utils/c.ts","../../../react-querybuilder/src/utils/isRuleGroup.ts","../../../react-querybuilder/src/utils/convertQuery.ts","../../../react-querybuilder/src/utils/defaultValidator.ts","../../../react-querybuilder/src/utils/optGroupUtils.tsx","../../../react-querybuilder/src/utils/filterFieldsByComparator.ts","../../../react-querybuilder/src/utils/isRuleOrGroupValid.ts","../../../react-querybuilder/src/utils/uniq.ts","../../../react-querybuilder/src/utils/formatQuery.ts","../../../react-querybuilder/src/utils/generateID.ts","../../../react-querybuilder/src/utils/getValidationClassNames.ts","../../../react-querybuilder/src/utils/getValueSourcesUtil.ts","../../../react-querybuilder/src/utils/parseSQL/sqlParser.js","../../../react-querybuilder/src/utils/pathUtils.ts","../../../react-querybuilder/src/utils/prepareQueryObjects.ts","../../../react-querybuilder/src/utils/regenerateIDs.ts","../../../react-querybuilder/src/utils/queryTools.ts","../../../react-querybuilder/src/controls/ValueSelector.tsx","../../../react-querybuilder/src/controls/ValueEditor.tsx","../../../react-querybuilder/src/controls/ActionElement.tsx","../../../react-querybuilder/src/controls/NotToggle.tsx","../../../react-querybuilder/src/controls/DragHandle.tsx","../../../react-querybuilder/src/Rule.tsx","../../../react-querybuilder/src/InlineCombinator.tsx","../../../react-querybuilder/src/RuleGroup.tsx","../../../react-querybuilder/src/defaults.ts","../../../react-querybuilder/src/QueryBuilder.tsx","../../../react-querybuilder/dev/musicalInstruments.ts","../../../react-querybuilder/dev/constants.ts","../../../react-querybuilder/dev/utils.ts","../../src/constants.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","export const c = (...classNames: string[]) => classNames.filter(Boolean).join(' ');\n","import type { RuleType, RuleGroupTypeAny, RuleGroupTypeIC, RuleGroupType } from '../types';\n\n/**\n * Determines if this is a RuleGroupType or RuleGroupTypeIC.\n *\n * May be removed in a future major version.\n *\n * (Use `'rules' in query` instead.)\n *\n * @deprecated\n */\nexport const isRuleGroup = (rg: RuleType | RuleGroupTypeAny): rg is RuleGroupTypeAny =>\n  typeof rg === 'object' && 'rules' in rg && Array.isArray(rg.rules);\n\nexport const isRuleGroupType = (rg: RuleGroupTypeAny): rg is RuleGroupType =>\n  isRuleGroup(rg) && 'combinator' in rg;\n\nexport const isRuleGroupTypeIC = (rg: RuleGroupTypeAny): rg is RuleGroupTypeIC =>\n  isRuleGroup(rg) && !('combinator' in rg);\n","import type {\n  RuleGroupArray,\n  RuleGroupICArray,\n  RuleGroupType,\n  RuleGroupTypeIC,\n  RuleType,\n} from '../types';\nimport { isRuleGroupTypeIC } from './isRuleGroup';\n\nconst processRuleOrStringOrRuleGroupIC = (r: string | RuleType | RuleGroupTypeIC) =>\n  typeof r === 'object' && 'rules' in r ? generateRuleGroupICWithConsistentCombinators(r) : r;\n\nconst generateRuleGroupICWithConsistentCombinators = (rg: RuleGroupTypeIC): RuleGroupTypeIC => {\n  const returnArray: RuleGroupICArray = [];\n  const push = (r: any) =>\n    returnArray.push(processRuleOrStringOrRuleGroupIC(r) as RuleType | RuleGroupTypeIC);\n  let startIndex = 0;\n  for (let i = 0; i < rg.rules.length; i += 2) {\n    if (rg.rules.length === 1) {\n      push(rg.rules[0]);\n    } else if (rg.rules[i + 1] === 'and') {\n      startIndex = i;\n      let j = 1;\n      while (rg.rules[startIndex + j] === 'and') {\n        i += 2;\n        j += 2;\n      }\n      returnArray.push({\n        rules: rg.rules.slice(startIndex, i + 1).map(processRuleOrStringOrRuleGroupIC) as any,\n      });\n      i -= 2;\n    } else if (rg.rules[i + 1] === 'or') {\n      if (i === 0 || i === rg.rules.length - 3) {\n        if (i === 0 || rg.rules[i - 1] === 'or') {\n          push(rg.rules[i]);\n        }\n        push(rg.rules[i + 1]);\n        if (i === rg.rules.length - 3) {\n          push(rg.rules[i + 2]);\n        }\n      } else {\n        if (rg.rules[i - 1] === 'and') {\n          push(rg.rules[i + 1]);\n        } else {\n          push(rg.rules[i]);\n          push(rg.rules[i + 1]);\n        }\n      }\n    }\n  }\n  if (\n    (returnArray as any[]).length === 1 &&\n    typeof returnArray[0] === 'object' &&\n    'rules' in returnArray[0]\n  ) {\n    return { ...rg, ...returnArray[0] };\n  }\n  return { ...rg, rules: returnArray };\n};\n\nexport const convertFromIC = (rg: RuleGroupTypeIC): RuleGroupType => {\n  const processedRG = generateRuleGroupICWithConsistentCombinators(rg);\n  const rulesAsMixedList = processedRG.rules.map(r =>\n    typeof r === 'string' || !('rules' in r) ? r : convertFromIC(r)\n  );\n  const combinator = rulesAsMixedList.length < 2 ? 'and' : (rulesAsMixedList[1] as string);\n  const rules = rulesAsMixedList.filter(r => typeof r !== 'string') as RuleGroupArray;\n  return { ...processedRG, combinator, rules };\n};\n\nexport const convertToIC = (rg: RuleGroupType): RuleGroupTypeIC => {\n  const { combinator, ...queryWithoutCombinator } = rg;\n  const rules: (RuleGroupTypeIC | RuleType | string)[] = [];\n  rg.rules.forEach((r, idx, arr) => {\n    if ('rules' in r) {\n      rules.push(convertToIC(r));\n    } else {\n      rules.push(r);\n    }\n    if (idx < arr.length - 1) {\n      rules.push(combinator);\n    }\n  });\n  return { ...queryWithoutCombinator, rules: rules as RuleGroupICArray };\n};\n\nfunction convertQuery(query: RuleGroupType): RuleGroupTypeIC;\nfunction convertQuery(query: RuleGroupTypeIC): RuleGroupType;\nfunction convertQuery(query: RuleGroupType | RuleGroupTypeIC): RuleGroupType | RuleGroupTypeIC {\n  return isRuleGroupTypeIC(query) ? convertFromIC(query) : convertToIC(query);\n}\n\nexport { convertQuery };\n","import { defaultCombinators, groupInvalidReasons } from '../defaults';\nimport type { QueryValidator, RuleGroupTypeAny, RuleType, ValidationMap } from '../types';\n\n/**\n * This is an example validation function you can pass to QueryBuilder in the\n * `validator` prop. It assumes that you want to validate groups, and has a no-op\n * for validating rules which you should replace with your own implementation.\n */\nexport const defaultValidator: QueryValidator = query => {\n  const result: ValidationMap = {};\n\n  const validateRule = (_rule: RuleType) => {\n    // Replace this with your custom implementation.\n    // Inside this function, set `result[_rule.id] = true` for a valid\n    // rule, or `{ valid: false, reasons: ['your', 'reasons', 'here'] }`\n    // for an invalid rule.\n  };\n\n  const validateGroup = (rg: RuleGroupTypeAny) => {\n    const reasons: any[] = [];\n    if (rg.rules.length === 0) {\n      reasons.push(groupInvalidReasons.empty);\n    } else if (!('combinator' in rg)) {\n      // TODO: check if rules are separated by valid combinators\n      // Odd indexes should be combinators and even indexes should be rules or groups\n      let invalidICs = false;\n      for (let i = 0; i < rg.rules.length && !invalidICs; i++) {\n        if (\n          (i % 2 === 0 && typeof rg.rules[i] === 'string') ||\n          (i % 2 === 1 && typeof rg.rules[i] !== 'string') ||\n          (i % 2 === 1 &&\n            typeof rg.rules[i] === 'string' &&\n            !defaultCombinators.map(c => c.name as string).includes(rg.rules[i] as string))\n        ) {\n          invalidICs = true;\n        }\n      }\n      if (invalidICs) {\n        reasons.push(groupInvalidReasons.invalidIndependentCombinators);\n      }\n    }\n    if (\n      'combinator' in rg &&\n      !defaultCombinators.map(c => c.name as string).includes(rg.combinator) &&\n      rg.rules.length >= 2\n    ) {\n      reasons.push(groupInvalidReasons.invalidCombinator);\n    }\n    /* istanbul ignore else */\n    if (rg.id) {\n      if (reasons.length) {\n        result[rg.id] = { valid: false, reasons };\n      } else {\n        result[rg.id] = true;\n      }\n    }\n    rg.rules.forEach(r => {\n      if (typeof r === 'string') {\n        // no-op\n      } else if ('rules' in r) {\n        validateGroup(r);\n      } else {\n        validateRule(r);\n      }\n    });\n  };\n\n  validateGroup(query);\n\n  return result;\n  // You can return the result object itself like above, or if you just\n  // want the entire query to be marked invalid if _any_ rules/groups are\n  // invalid, return a boolean like this:\n  //   return Object.values(result).map(rv => (typeof rv !== 'boolean')).includes(true);\n  // That will return `true` if no errors were found.\n};\n","import type { Field, NameLabelPair, OptionGroup } from '../types';\n\nexport const isOptionGroupArray = (arr: Field['values']): arr is OptionGroup[] =>\n  Array.isArray(arr) && arr.length > 0 && 'options' in arr[0];\n\nexport const toOptions = (arr?: NameLabelPair[] | OptionGroup[]) =>\n  isOptionGroupArray(arr)\n    ? arr.map(og => (\n        <optgroup key={og.label} label={og.label}>\n          {og.options.map(opt => (\n            <option key={opt.name} value={opt.name}>\n              {opt.label}\n            </option>\n          ))}\n        </optgroup>\n      ))\n    : Array.isArray(arr)\n    ? arr.map(opt => (\n        <option key={opt.name} value={opt.name}>\n          {opt.label}\n        </option>\n      ))\n    : null;\n\nexport const getFirstOption = (arr?: NameLabelPair[] | OptionGroup[]) =>\n  !Array.isArray(arr) || arr.length === 0\n    ? null\n    : isOptionGroupArray(arr)\n    ? arr[0].options[0].name\n    : arr[0].name;\n","import { Field, OptionGroup } from '../types';\nimport { isOptionGroupArray } from './optGroupUtils';\n\nexport const filterFieldsByComparator = (\n  field: Field,\n  fields: Field[] | OptionGroup<Field>[],\n  operator: string\n) => {\n  if (!field.comparator) {\n    const filterOutSameName = (f: Field) => f.name !== field.name;\n    if (isOptionGroupArray(fields)) {\n      return fields.map(og => ({ ...og, options: og.options.filter(filterOutSameName) }));\n    }\n    return fields.filter(filterOutSameName);\n  }\n\n  const filterByComparator = (fieldToCompare: Field) => {\n    if (field.name === fieldToCompare.name) {\n      return false;\n    }\n    if (typeof field.comparator === 'string') {\n      return field[field.comparator] === fieldToCompare[field.comparator];\n    }\n    return field.comparator!(fieldToCompare, operator);\n  };\n\n  if (isOptionGroupArray(fields)) {\n    return fields\n      .map(og => ({ ...og, options: og.options.filter(filterByComparator) }))\n      .filter(og => og.options.length > 0);\n  }\n\n  return fields.filter(filterByComparator);\n};\n","import type { RuleGroupTypeAny, RuleType, RuleValidator, ValidationResult } from '../types';\n\nexport const isValidationResult = (vr?: ValidationResult): vr is ValidationResult =>\n  typeof vr === 'object' && vr !== null && typeof vr.valid === 'boolean';\n\nexport const isRuleOrGroupValid = (\n  rg: RuleType | RuleGroupTypeAny,\n  validationResult?: boolean | ValidationResult,\n  validator?: RuleValidator\n) => {\n  if (typeof validationResult === 'boolean') {\n    return validationResult;\n  }\n  if (isValidationResult(validationResult)) {\n    return validationResult.valid;\n  }\n  if (typeof validator === 'function' && !('rules' in rg)) {\n    const vr = validator(rg);\n    if (typeof vr === 'boolean') {\n      return vr;\n    }\n    // istanbul ignore else\n    if (isValidationResult(vr)) {\n      return vr.valid;\n    }\n  }\n  return true;\n};\n","import { NameLabelPair, OptionGroup } from '../types';\n\nexport const uniqByName = <T extends { name: string }>(originalArray: T[]): T[] => {\n  const names = new Set<string>();\n  const newArray: any[] = [];\n  originalArray.forEach(el => {\n    if (!names.has(el.name)) {\n      names.add(el.name);\n      newArray.push(el);\n    }\n  });\n  return newArray;\n};\n\nexport const uniqOptGroups = <T extends NameLabelPair>(originalArray: OptionGroup<T>[]) => {\n  const labels = new Set<string>();\n  const names = new Set<string>();\n  const newArray: OptionGroup<T>[] = [];\n  originalArray.forEach(el => {\n    if (!labels.has(el.label)) {\n      labels.add(el.label);\n      const optionsForThisGroup: T[] = [];\n      el.options.forEach(opt => {\n        if (!names.has(opt.name)) {\n          names.add(opt.name);\n          optionsForThisGroup.push(opt);\n        }\n      });\n      el.options = optionsForThisGroup;\n      newArray.push(el);\n    }\n  });\n  return newArray;\n};\n","import type {\n  DefaultCombinatorName,\n  ExportFormat,\n  FormatQueryOptions,\n  ParameterizedNamedSQL,\n  ParameterizedSQL,\n  QueryValidator,\n  RuleGroupType,\n  RuleGroupTypeAny,\n  RuleType,\n  RuleValidator,\n  ValidationMap,\n  ValidationResult,\n  ValueProcessor,\n  ValueProcessorInternal,\n} from '../types';\nimport { isRuleOrGroupValid } from './isRuleOrGroupValid';\nimport { uniqByName } from './uniq';\n\nconst numericRegex = /^\\s*[+-]?(\\d+|\\d*\\.\\d+|\\d+\\.\\d*)([Ee][+-]?\\d+)?\\s*$/;\n\nconst trimIfString = (val: any) => (typeof val === 'string' ? val.trim() : val);\n\nconst toArray = (v: any) =>\n  (Array.isArray(v)\n    ? v\n    : typeof v === 'string'\n    ? v.split(',').filter(s => !/^\\s*$/.test(s))\n    : []\n  ).map(trimIfString);\n\nconst mapOperator = (op: string) => {\n  switch (op.toLowerCase()) {\n    case 'null':\n      return 'is null';\n    case 'notnull':\n      return 'is not null';\n    case 'notin':\n      return 'not in';\n    case 'notbetween':\n      return 'not between';\n    case 'contains':\n    case 'beginswith':\n    case 'endswith':\n      return 'like';\n    case 'doesnotcontain':\n    case 'doesnotbeginwith':\n    case 'doesnotendwith':\n      return 'not like';\n    default:\n      return op;\n  }\n};\n\nconst mongoOperators: { [op: string]: string } = {\n  '=': '$eq',\n  '!=': '$ne',\n  '<': '$lt',\n  '<=': '$lte',\n  '>': '$gt',\n  '>=': '$gte',\n  in: '$in',\n  notIn: '$nin',\n};\n\nconst celCombinatorMap: Record<DefaultCombinatorName, '&&' | '||'> = {\n  and: '&&',\n  or: '||',\n};\n\nconst numerifyValues = (rg: RuleGroupTypeAny): RuleGroupTypeAny => ({\n  ...rg,\n  rules: rg.rules.map(r => {\n    if (typeof r === 'string') {\n      return r;\n    } else if ('rules' in r) {\n      return numerifyValues(r);\n    }\n    let { value } = r;\n    if (typeof value === 'string' && numericRegex.test(value)) {\n      value = parseFloat(value);\n    }\n    // if (toArray(value).length > 1) {\n    //   return { ...r, value };\n    // }\n    // if (typeof value === 'number' && !isNaN(value)) {\n    //   return { ...r, value };\n    // }\n    return { ...r, value };\n  }) as any, // TODO: use a better type?\n});\n\nconst isValidValue = (v: any) =>\n  (typeof v === 'string' && v.length > 0) ||\n  (typeof v === 'number' && !isNaN(v)) ||\n  (typeof v !== 'string' && typeof v !== 'number');\n\nconst shouldRenderAsNumber = (v: any, parseNumbers?: boolean) =>\n  !!parseNumbers &&\n  (typeof v === 'number' ||\n    typeof v === 'bigint' ||\n    (typeof v === 'string' && numericRegex.test(v)));\n\nexport const defaultValueProcessor: ValueProcessor = (field, operator, value, valueSource) =>\n  defaultValueProcessorInternal({ field, operator, value, valueSource }, { parseNumbers: false });\n\nconst defaultValueProcessorInternal: ValueProcessorInternal = (\n  { operator, value, valueSource },\n  { parseNumbers }\n) => {\n  const valueIsField = valueSource === 'field';\n  const operatorLowerCase = operator.toLowerCase();\n  if (operatorLowerCase === 'null' || operatorLowerCase === 'notnull') {\n    return '';\n  } else if (operatorLowerCase === 'in' || operatorLowerCase === 'notin') {\n    const valArray = toArray(value);\n    if (valArray.length > 0) {\n      return `(${valArray\n        .map(v =>\n          valueIsField || shouldRenderAsNumber(v, parseNumbers) ? `${trimIfString(v)}` : `'${v}'`\n        )\n        .join(', ')})`;\n    } else {\n      return '';\n    }\n  } else if (operatorLowerCase === 'between' || operatorLowerCase === 'notbetween') {\n    const valArray = toArray(value);\n    if (valArray.length >= 2 && isValidValue(valArray[0]) && isValidValue(valArray[1])) {\n      const [first, second] = valArray;\n      return valueIsField ||\n        (shouldRenderAsNumber(first, parseNumbers) && shouldRenderAsNumber(second, parseNumbers))\n        ? `${trimIfString(first)} and ${trimIfString(second)}`\n        : `'${first}' and '${second}'`;\n    } else {\n      return '';\n    }\n  } else if (operatorLowerCase === 'contains' || operatorLowerCase === 'doesnotcontain') {\n    return valueIsField ? `'%' || ${value} || '%'` : `'%${value}%'`;\n  } else if (operatorLowerCase === 'beginswith' || operatorLowerCase === 'doesnotbeginwith') {\n    return valueIsField ? `${value} || '%'` : `'${value}%'`;\n  } else if (operatorLowerCase === 'endswith' || operatorLowerCase === 'doesnotendwith') {\n    return valueIsField ? `'%' || ${value}` : `'%${value}'`;\n  } else if (typeof value === 'boolean') {\n    return `${value}`.toUpperCase();\n  }\n  return valueIsField || shouldRenderAsNumber(value, parseNumbers)\n    ? `${trimIfString(value)}`\n    : `'${value}'`;\n};\n\nexport const defaultMongoDBValueProcessor: ValueProcessor = (field, operator, value, valueSource) =>\n  defaultMongoDBValueProcessorInternal(\n    { field, operator, value, valueSource },\n    { parseNumbers: false }\n  );\n\nconst defaultMongoDBValueProcessorInternal: ValueProcessorInternal = (\n  { field, operator, value, valueSource },\n  { parseNumbers }\n) => {\n  const valueIsField = valueSource === 'field';\n  const useBareValue =\n    ['number', 'boolean', 'bigint'].includes(typeof value) ||\n    shouldRenderAsNumber(value, parseNumbers);\n  const mongoOperator = mongoOperators[operator];\n  if (['<', '<=', '=', '!=', '>', '>='].includes(operator)) {\n    return valueIsField\n      ? `{\"$expr\":{\"${mongoOperator}\":[\"$${field}\",\"$${value}\"]}}`\n      : `{\"${field}\":{\"${mongoOperator}\":${useBareValue ? trimIfString(value) : `\"${value}\"`}}}`;\n  } else if (operator === 'contains') {\n    return valueIsField\n      ? `{\"$where\":\"this.${field}.includes(this.${value})\"}`\n      : `{\"${field}\":{\"$regex\":\"${value}\"}}`;\n  } else if (operator === 'beginsWith') {\n    return valueIsField\n      ? `{\"$where\":\"this.${field}.startsWith(this.${value})\"}`\n      : `{\"${field}\":{\"$regex\":\"^${value}\"}}`;\n  } else if (operator === 'endsWith') {\n    return valueIsField\n      ? `{\"$where\":\"this.${field}.endsWith(this.${value})\"}`\n      : `{\"${field}\":{\"$regex\":\"${value}$\"}}`;\n  } else if (operator === 'doesNotContain') {\n    return valueIsField\n      ? `{\"$where\":\"!this.${field}.includes(this.${value})\"}`\n      : `{\"${field}\":{\"$not\":{\"$regex\":\"${value}\"}}}`;\n  } else if (operator === 'doesNotBeginWith') {\n    return valueIsField\n      ? `{\"$where\":\"!this.${field}.startsWith(this.${value})\"}`\n      : `{\"${field}\":{\"$not\":{\"$regex\":\"^${value}\"}}}`;\n  } else if (operator === 'doesNotEndWith') {\n    return valueIsField\n      ? `{\"$where\":\"!this.${field}.endsWith(this.${value})\"}`\n      : `{\"${field}\":{\"$not\":{\"$regex\":\"${value}$\"}}}`;\n  } else if (operator === 'null') {\n    return `{\"${field}\":null}`;\n  } else if (operator === 'notNull') {\n    return `{\"${field}\":{\"$ne\":null}}`;\n  } else if (operator === 'in' || operator === 'notIn') {\n    const valArray = toArray(value);\n    if (valArray.length > 0) {\n      return valueIsField\n        ? `{\"$where\":\"${operator === 'notIn' ? '!' : ''}[${valArray\n            .map(val => `this.${val}`)\n            .join(',')}].includes(this.${field})\"}`\n        : `{\"${field}\":{\"${mongoOperator}\":[${valArray\n            .map(val =>\n              shouldRenderAsNumber(val, parseNumbers) ? `${trimIfString(val)}` : `\"${val}\"`\n            )\n            .join(',')}]}}`;\n    } else {\n      return '';\n    }\n  } else if (operator === 'between' || operator === 'notBetween') {\n    const valArray = toArray(value);\n    if (valArray.length >= 2 && isValidValue(valArray[0]) && isValidValue(valArray[1])) {\n      const [first, second] = valArray;\n      const firstNum = parseFloat(first);\n      const secondNum = parseFloat(second);\n      const firstValue = valueIsField || !isNaN(firstNum) ? `${first}` : `\"${first}\"`;\n      const secondValue = valueIsField || !isNaN(secondNum) ? `${second}` : `\"${second}\"`;\n      if (operator === 'between') {\n        return valueIsField\n          ? `{\"$and\":[{\"$expr\":{\"$gte\":[\"$${field}\",\"$${firstValue}\"]}},{\"$expr\":{\"$lte\":[\"$${field}\",\"$${secondValue}\"]}}]}`\n          : `{\"$and\":[{\"${field}\":{\"$gte\":${firstValue}}},{\"${field}\":{\"$lte\":${secondValue}}}]}`;\n      } else {\n        return valueIsField\n          ? `{\"$or\":[{\"$expr\":{\"$lt\":[\"$${field}\",\"$${firstValue}\"]}},{\"$expr\":{\"$gt\":[\"$${field}\",\"$${secondValue}\"]}}]}`\n          : `{\"$or\":[{\"${field}\":{\"$lt\":${firstValue}}},{\"${field}\":{\"$gt\":${secondValue}}}]}`;\n      }\n    } else {\n      return '';\n    }\n  }\n  return '';\n};\n\nexport const defaultCELValueProcessor: ValueProcessor = (field, operator, value, valueSource) =>\n  defaultCELValueProcessorInternal(\n    { field, operator, value, valueSource },\n    { parseNumbers: false }\n  );\n\nconst defaultCELValueProcessorInternal: ValueProcessorInternal = (\n  { field, operator, value, valueSource },\n  { parseNumbers }\n) => {\n  const valueIsField = valueSource === 'field';\n  const operatorLowerCase = operator.toLowerCase().replace(/^=$/, '==');\n  const useBareValue =\n    ['number', 'boolean', 'bigint'].includes(typeof value) ||\n    shouldRenderAsNumber(value, parseNumbers);\n  if (['<', '<=', '==', '!=', '>', '>='].includes(operatorLowerCase)) {\n    return `${field} ${operatorLowerCase} ${\n      valueIsField || useBareValue ? trimIfString(value) : `\"${value}\"`\n    }`;\n  } else if (operatorLowerCase === 'contains' || operatorLowerCase === 'doesnotcontain') {\n    const negate = operatorLowerCase === 'doesnotcontain' ? '!' : '';\n    return `${negate}${field}.contains(${\n      valueIsField || useBareValue ? trimIfString(value) : `\"${value}\"`\n    })`;\n  } else if (operatorLowerCase === 'beginswith' || operatorLowerCase === 'doesnotbeginwith') {\n    const negate = operatorLowerCase === 'doesnotbeginwith' ? '!' : '';\n    return `${negate}${field}.startsWith(${\n      valueIsField || useBareValue ? trimIfString(value) : `\"${value}\"`\n    })`;\n  } else if (operatorLowerCase === 'endswith' || operatorLowerCase === 'doesnotendwith') {\n    const negate = operatorLowerCase === 'doesnotendwith' ? '!' : '';\n    return `${negate}${field}.endsWith(${\n      valueIsField || useBareValue ? trimIfString(value) : `\"${value}\"`\n    })`;\n  } else if (operatorLowerCase === 'null') {\n    return `${field} == null`;\n  } else if (operatorLowerCase === 'notnull') {\n    return `${field} != null`;\n  } else if (operatorLowerCase === 'in' || operatorLowerCase === 'notin') {\n    const negate = operatorLowerCase === 'notin';\n    const valArray = toArray(value);\n    if (valArray.length > 0) {\n      return `${negate ? '!(' : ''}${field} in [${valArray\n        .map(val =>\n          valueIsField || shouldRenderAsNumber(val, parseNumbers)\n            ? `${trimIfString(val)}`\n            : `\"${val}\"`\n        )\n        .join(', ')}]${negate ? ')' : ''}`;\n    } else {\n      return '';\n    }\n  } else if (operatorLowerCase === 'between' || operatorLowerCase === 'notbetween') {\n    const valArray = toArray(value);\n    if (valArray.length >= 2 && !!valArray[0] && !!valArray[1]) {\n      const [first, second] = valArray;\n      const firstNum = parseFloat(first);\n      const secondNum = parseFloat(second);\n      let firstValue = isNaN(firstNum) ? (valueIsField ? `${first}` : `\"${first}\"`) : firstNum;\n      let secondValue = isNaN(secondNum) ? (valueIsField ? `${second}` : `\"${second}\"`) : secondNum;\n      if (firstValue === firstNum && secondValue === secondNum && secondNum < firstNum) {\n        const tempNum = secondNum;\n        secondValue = firstNum;\n        firstValue = tempNum;\n      }\n      if (operator === 'between') {\n        return `(${field} >= ${firstValue} && ${field} <= ${secondValue})`;\n      } else {\n        return `(${field} < ${firstValue} || ${field} > ${secondValue})`;\n      }\n    } else {\n      return '';\n    }\n  }\n  return '';\n};\n\n/**\n * Formats a query in the requested output format.\n */\nfunction formatQuery(ruleGroup: RuleGroupTypeAny): string;\nfunction formatQuery(\n  ruleGroup: RuleGroupTypeAny,\n  options: 'parameterized' | (Omit<FormatQueryOptions, 'format'> & { format: 'parameterized' })\n): ParameterizedSQL;\nfunction formatQuery(\n  ruleGroup: RuleGroupTypeAny,\n  options:\n    | 'parameterized_named'\n    | (Omit<FormatQueryOptions, 'format'> & { format: 'parameterized_named' })\n): ParameterizedNamedSQL;\nfunction formatQuery(\n  ruleGroup: RuleGroupTypeAny,\n  options: Omit<FormatQueryOptions, 'format'>\n): string;\nfunction formatQuery(\n  ruleGroup: RuleGroupTypeAny,\n  options: Exclude<ExportFormat, 'parameterized' | 'parameterized_named'>\n): string;\nfunction formatQuery(\n  ruleGroup: RuleGroupTypeAny,\n  options: Omit<FormatQueryOptions, 'format'> & {\n    format: Exclude<ExportFormat, 'parameterized' | 'parameterized_named'>;\n  }\n): string;\nfunction formatQuery(ruleGroup: RuleGroupTypeAny, options: FormatQueryOptions | ExportFormat = {}) {\n  let format: ExportFormat = 'json';\n  let valueProcessorInternal = defaultValueProcessorInternal;\n  let quoteFieldNamesWith = '';\n  let validator: QueryValidator = () => true;\n  let fields: { name: string; validator?: RuleValidator; [k: string]: any }[] = [];\n  let validationMap: ValidationMap = {};\n  let fallbackExpression = '';\n  let paramPrefix = ':';\n  let parseNumbers = false;\n\n  if (typeof options === 'string') {\n    format = options.toLowerCase() as ExportFormat;\n    if (format === 'mongodb') {\n      valueProcessorInternal = defaultMongoDBValueProcessorInternal;\n    } else if (format === 'cel') {\n      valueProcessorInternal = defaultCELValueProcessorInternal;\n    }\n  } else {\n    format = (options.format ?? 'json').toLowerCase() as ExportFormat;\n    const { valueProcessor = null } = options;\n    valueProcessorInternal =\n      typeof valueProcessor === 'function'\n        ? r => valueProcessor(r.field, r.operator, r.value, r.valueSource)\n        : format === 'mongodb'\n        ? defaultMongoDBValueProcessorInternal\n        : format === 'cel'\n        ? defaultCELValueProcessorInternal\n        : defaultValueProcessorInternal;\n    quoteFieldNamesWith = options.quoteFieldNamesWith ?? '';\n    validator = options.validator ?? (() => true);\n    fields = options.fields ?? [];\n    fallbackExpression = options.fallbackExpression ?? '';\n    paramPrefix = options.paramPrefix ?? ':';\n    parseNumbers = !!options.parseNumbers;\n  }\n  if (!fallbackExpression) {\n    fallbackExpression =\n      format === 'mongodb' ? '\"$and\":[{\"$expr\":true}]' : format === 'cel' ? '1 == 1' : '(1 = 1)';\n  }\n\n  if (format === 'json' || format === 'json_without_ids') {\n    const rg = parseNumbers ? numerifyValues(ruleGroup) : ruleGroup;\n    if (format === 'json') {\n      return JSON.stringify(rg, null, 2);\n    } else {\n      return JSON.stringify(rg, [\n        'rules',\n        'field',\n        'value',\n        'operator',\n        'combinator',\n        'not',\n        'valueSource',\n      ]);\n    }\n  } else {\n    // istanbul ignore else\n    if (typeof validator === 'function') {\n      const validationResult = validator(ruleGroup);\n      if (typeof validationResult === 'boolean') {\n        if (validationResult === false) {\n          return format === 'parameterized'\n            ? { sql: fallbackExpression, params: [] }\n            : format === 'parameterized_named'\n            ? { sql: fallbackExpression, params: {} }\n            : format === 'mongodb'\n            ? `{${fallbackExpression}}`\n            : fallbackExpression;\n        }\n      } else {\n        validationMap = validationResult;\n      }\n    }\n\n    const validatorMap: { [f: string]: RuleValidator } = {};\n    const uniqueFields = uniqByName(fields);\n    uniqueFields.forEach(f => {\n      // istanbul ignore else\n      if (typeof f.validator === 'function') {\n        validatorMap[f.name] = f.validator;\n      }\n    });\n\n    const validateRule = (rule: RuleType) => {\n      let validationResult: boolean | ValidationResult | undefined = undefined;\n      let fieldValidator: RuleValidator | undefined = undefined;\n      if (rule.id) {\n        validationResult = validationMap[rule.id];\n      }\n      if (fields.length) {\n        const fieldArr = fields.filter(f => f.name === rule.field);\n        if (fieldArr.length) {\n          const field = fieldArr[0];\n          // istanbul ignore else\n          if (typeof field.validator === 'function') {\n            fieldValidator = field.validator;\n          }\n        }\n      }\n      return [validationResult, fieldValidator] as const;\n    };\n\n    if (format === 'sql' || format === 'parameterized' || format === 'parameterized_named') {\n      const parameterized = format === 'parameterized';\n      const parameterized_named = format === 'parameterized_named';\n      const params: any[] = [];\n      const params_named: { [p: string]: any } = {};\n      const fieldParamIndexes: { [f: string]: number } = {};\n\n      const getNextNamedParam = (field: string) => {\n        fieldParamIndexes[field] = (fieldParamIndexes[field] ?? 0) + 1;\n        return `${field}_${fieldParamIndexes[field]}`;\n      };\n\n      const processRule = (rule: RuleType) => {\n        const [validationResult, fieldValidator] = validateRule(rule);\n        if (!isRuleOrGroupValid(rule, validationResult, fieldValidator)) {\n          return '';\n        }\n\n        const value = valueProcessorInternal(rule, { parseNumbers });\n        const operator = mapOperator(rule.operator);\n\n        if ((parameterized || parameterized_named) && (rule.valueSource ?? 'value') === 'value') {\n          if (operator.toLowerCase() === 'is null' || operator.toLowerCase() === 'is not null') {\n            return `${quoteFieldNamesWith}${rule.field}${quoteFieldNamesWith} ${operator}`;\n          } else if (operator.toLowerCase() === 'in' || operator.toLowerCase() === 'not in') {\n            if (value) {\n              const splitValue = toArray(rule.value);\n              if (parameterized) {\n                splitValue.forEach(v =>\n                  params.push(shouldRenderAsNumber(v, parseNumbers) ? parseFloat(v) : v)\n                );\n                return `${quoteFieldNamesWith}${\n                  rule.field\n                }${quoteFieldNamesWith} ${operator} (${splitValue.map(() => '?').join(', ')})`;\n              }\n              const inParams: string[] = [];\n              splitValue.forEach(v => {\n                const thisParamName = getNextNamedParam(rule.field);\n                inParams.push(`${paramPrefix}${thisParamName}`);\n                params_named[thisParamName] = shouldRenderAsNumber(v, parseNumbers)\n                  ? parseFloat(v)\n                  : v;\n              });\n              return `${quoteFieldNamesWith}${\n                rule.field\n              }${quoteFieldNamesWith} ${operator} (${inParams.join(', ')})`;\n            } else {\n              return '';\n            }\n          } else if (\n            operator.toLowerCase() === 'between' ||\n            operator.toLowerCase() === 'not between'\n          ) {\n            if (value) {\n              const valArray = toArray(rule.value);\n              const [first, second] = valArray\n                .slice(0, 2)\n                .map(v => (shouldRenderAsNumber(v, parseNumbers) ? parseFloat(v) : v));\n              if (parameterized) {\n                params.push(first);\n                params.push(second);\n                return `${quoteFieldNamesWith}${rule.field}${quoteFieldNamesWith} ${operator} ? and ?`;\n              }\n              const firstParamName = getNextNamedParam(rule.field);\n              const secondParamName = getNextNamedParam(rule.field);\n              params_named[firstParamName] = first;\n              params_named[secondParamName] = second;\n              return `${quoteFieldNamesWith}${rule.field}${quoteFieldNamesWith} ${operator} ${paramPrefix}${firstParamName} and ${paramPrefix}${secondParamName}`;\n            } else {\n              return '';\n            }\n          }\n          let paramValue = rule.value;\n          if (typeof rule.value === 'string') {\n            if (shouldRenderAsNumber(rule.value, parseNumbers)) {\n              paramValue = parseFloat(rule.value);\n            } else {\n              // Note that we're using `value` here, which has been processed through\n              // a `valueProcessor`, as opposed to `rule.value` which has not\n              paramValue = value.match(/^('?)([^']*?)(\\1)$/)?.[2] ?? /* istanbul ignore next */ '';\n            }\n          }\n          let paramName = '';\n          if (parameterized) {\n            params.push(paramValue);\n          } else {\n            paramName = getNextNamedParam(rule.field);\n            params_named[paramName] = paramValue;\n          }\n          return `${quoteFieldNamesWith}${rule.field}${quoteFieldNamesWith} ${operator} ${\n            parameterized ? '?' : `${paramPrefix}${paramName}`\n          }`.trim();\n        } else {\n          if (\n            ['in', 'not in', 'between', 'not between'].includes(operator.toLowerCase()) &&\n            !value\n          ) {\n            return '';\n          }\n        }\n        return `${quoteFieldNamesWith}${rule.field}${quoteFieldNamesWith} ${operator} ${value}`.trim();\n      };\n\n      const processRuleGroup = (rg: RuleGroupTypeAny, outermost?: boolean): string => {\n        if (!isRuleOrGroupValid(rg, validationMap[rg.id ?? /* istanbul ignore next */ ''])) {\n          return outermost ? fallbackExpression : '';\n        }\n\n        const processedRules = rg.rules.map(rule => {\n          if (typeof rule === 'string') {\n            return rule;\n          }\n          if ('rules' in rule) {\n            return processRuleGroup(rule);\n          }\n          return processRule(rule);\n        });\n\n        if (processedRules.length === 0) {\n          return fallbackExpression;\n        }\n\n        return `${rg.not ? 'NOT ' : ''}(${processedRules\n          .filter(Boolean)\n          .join('combinator' in rg ? ` ${rg.combinator} ` : ' ')})`;\n      };\n\n      if (parameterized) {\n        return { sql: processRuleGroup(ruleGroup, true), params };\n      } else if (parameterized_named) {\n        return { sql: processRuleGroup(ruleGroup, true), params: params_named };\n      } else {\n        return processRuleGroup(ruleGroup, true);\n      }\n    } else if (format === 'mongodb') {\n      const processRuleGroup = (rg: RuleGroupType, outermost?: boolean) => {\n        if (!isRuleOrGroupValid(rg, validationMap[rg.id ?? /* istanbul ignore next */ ''])) {\n          return outermost ? fallbackExpression : '';\n        }\n\n        const combinator = `\"$${rg.combinator}\"`;\n\n        const expression: string = rg.rules\n          .map(rule => {\n            if ('rules' in rule) {\n              const processedRuleGroup = processRuleGroup(rule);\n              return processedRuleGroup ? `{${processedRuleGroup}}` : '';\n            }\n            const [validationResult, fieldValidator] = validateRule(rule);\n            if (!isRuleOrGroupValid(rule, validationResult, fieldValidator)) {\n              return '';\n            }\n            return valueProcessorInternal(rule, { parseNumbers });\n          })\n          .filter(Boolean)\n          .join(',');\n\n        return expression ? `${combinator}:[${expression}]` : fallbackExpression;\n      };\n\n      // \"mongodb\" export type does not currently support independent combinators\n      if ('combinator' in ruleGroup) {\n        return `{${processRuleGroup(ruleGroup, true)}}`;\n      }\n      return `{${fallbackExpression}}`;\n    } else if (format === 'cel') {\n      const processRuleGroup = (rg: RuleGroupTypeAny, outermost?: boolean) => {\n        if (!isRuleOrGroupValid(rg, validationMap[rg.id ?? /* istanbul ignore next */ ''])) {\n          return outermost ? fallbackExpression : '';\n        }\n\n        const expression: string = rg.rules\n          .map(rule => {\n            if (typeof rule === 'string') {\n              return celCombinatorMap[rule as DefaultCombinatorName];\n            }\n            if ('rules' in rule) {\n              return processRuleGroup(rule);\n            }\n            const [validationResult, fieldValidator] = validateRule(rule);\n            if (!isRuleOrGroupValid(rule, validationResult, fieldValidator)) {\n              return '';\n            }\n            return valueProcessorInternal(rule, { parseNumbers });\n          })\n          .filter(Boolean)\n          .join(\n            'combinator' in rg\n              ? ` ${celCombinatorMap[rg.combinator as DefaultCombinatorName]} `\n              : ' '\n          );\n\n        const wrap =\n          rg.not || !outermost ? { pre: `${rg.not ? '!' : ''}(`, suf: ')' } : { pre: '', suf: '' };\n\n        return expression ? `${wrap.pre}${expression}${wrap.suf}` : fallbackExpression;\n      };\n\n      return processRuleGroup(ruleGroup, true);\n    } else {\n      return '';\n    }\n  }\n}\n\nexport { formatQuery };\n","export const generateID = () => Math.random().toString();\n","import { standardClassnames } from '../defaults';\nimport type { ValidationResult } from '../types';\n\nexport const getValidationClassNames = (validationResult: boolean | ValidationResult) => {\n  const valid =\n    typeof validationResult === 'boolean'\n      ? validationResult\n      : typeof validationResult === 'object' && validationResult !== null\n      ? validationResult.valid\n      : null;\n  return typeof valid === 'boolean'\n    ? valid\n      ? standardClassnames.valid\n      : standardClassnames.invalid\n    : '';\n};\n","import { Field, QueryBuilderProps, ValueSources } from '../types';\n\nexport const getValueSourcesUtil = (\n  fieldData: Field,\n  operator: string,\n  getValueSources?: QueryBuilderProps['getValueSources']\n): ValueSources => {\n  if (fieldData?.valueSources) {\n    if (typeof fieldData.valueSources === 'function') {\n      return fieldData.valueSources(operator);\n    }\n    return fieldData.valueSources;\n  }\n  if (getValueSources) {\n    const vals = getValueSources(fieldData.name, operator);\n    /* istanbul ignore else */\n    if (vals) return vals;\n  }\n\n  return ['value'];\n};\n","/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar sqlParser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,8],$V1=[1,4],$V2=[2,4],$V3=[1,11],$V4=[1,10],$V5=[2,16],$V6=[1,14],$V7=[1,15],$V8=[1,16],$V9=[6,8],$Va=[2,146],$Vb=[1,19],$Vc=[1,20],$Vd=[16,33,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Ve=[16,18,32,33,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vf=[2,160],$Vg=[1,29],$Vh=[6,8,14,17,146,150,152,154],$Vi=[1,42],$Vj=[1,60],$Vk=[1,52],$Vl=[1,59],$Vm=[1,61],$Vn=[1,62],$Vo=[1,63],$Vp=[1,64],$Vq=[1,65],$Vr=[1,58],$Vs=[1,53],$Vt=[1,54],$Vu=[1,55],$Vv=[1,56],$Vw=[1,57],$Vx=[1,43],$Vy=[1,44],$Vz=[1,45],$VA=[1,34],$VB=[1,66],$VC=[16,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$VD=[6,8,14,17,150,152,154],$VE=[2,143],$VF=[1,75],$VG=[1,76],$VH=[6,8,14,17,43,133,138,144,146,150,152,154],$VI=[1,81],$VJ=[1,78],$VK=[1,79],$VL=[1,80],$VM=[1,82],$VN=[6,8,14,17,36,43,49,50,51,71,72,74,77,89,107,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$VO=[6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,107,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$VP=[1,103],$VQ=[1,101],$VR=[1,102],$VS=[1,97],$VT=[1,98],$VU=[1,99],$VV=[1,100],$VW=[1,104],$VX=[1,105],$VY=[1,106],$VZ=[1,107],$V_=[1,108],$V$=[1,109],$V01=[2,103],$V11=[6,8,14,17,34,36,43,45,49,50,51,71,72,74,77,79,81,89,91,92,93,94,95,96,97,98,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$V21=[6,8,14,17,34,36,43,45,49,50,51,71,72,74,77,79,81,89,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$V31=[1,110],$V41=[1,117],$V51=[2,64],$V61=[1,118],$V71=[16,35,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$V81=[16,29,35,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,119,195],$V91=[1,164],$Va1=[17,43],$Vb1=[2,59],$Vc1=[1,173],$Vd1=[1,171],$Ve1=[1,172],$Vf1=[6,8,138,146],$Vg1=[16,35,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vh1=[6,8,14,17,138,144,146,150,152,154],$Vi1=[6,8,14,17,36,43,49,50,51,71,72,74,77,89,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$Vj1=[6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,92,93,94,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$Vk1=[6,8,14,17,34,36,43,49,50,51,71,72,74,77,79,81,89,91,92,93,94,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$Vl1=[16,35,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vm1=[16,35,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vn1=[16,35,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vo1=[71,74,77],$Vp1=[16,35,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$Vq1=[1,233],$Vr1=[1,234],$Vs1=[6,8,14,17],$Vt1=[6,8,14,17,43,157],$Vu1=[1,251],$Vv1=[1,247],$Vw1=[2,197],$Vx1=[1,255],$Vy1=[1,256],$Vz1=[6,8,14,17,43,129,135,138,144,146,150,152,154,182],$VA1=[1,258],$VB1=[1,261],$VC1=[1,262],$VD1=[1,263],$VE1=[1,264],$VF1=[2,174],$VG1=[1,260],$VH1=[6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182],$VI1=[6,8,14,17,135,138,144,146,150,152,154],$VJ1=[1,276],$VK1=[2,179],$VL1=[170,173],$VM1=[6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194],$VN1=[2,199],$VO1=[1,281],$VP1=[1,293],$VQ1=[1,301],$VR1=[1,302],$VS1=[1,303],$VT1=[6,8,14,17,138,146,150,152,154],$VU1=[1,313],$VV1=[1,319],$VW1=[1,320],$VX1=[2,204],$VY1=[1,331],$VZ1=[16,152],$V_1=[6,8,14,17,152,154],$V$1=[1,347];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"main\":3,\"selectClause\":4,\"semicolonOpt\":5,\"EOF\":6,\"unionClause\":7,\";\":8,\"unionClauseNotParenthesized\":9,\"unionClauseParenthesized\":10,\"order_by_opt\":11,\"limit_opt\":12,\"selectClauseParenthesized\":13,\"UNION\":14,\"distinctOpt\":15,\"(\":16,\")\":17,\"SELECT\":18,\"highPriorityOpt\":19,\"maxStateMentTimeOpt\":20,\"straightJoinOpt\":21,\"sqlSmallResultOpt\":22,\"sqlBigResultOpt\":23,\"sqlBufferResultOpt\":24,\"sqlCacheOpt\":25,\"sqlCalcFoundRowsOpt\":26,\"selectExprList\":27,\"selectDataSetOpt\":28,\"ALL\":29,\"DISTINCT\":30,\"DISTINCTROW\":31,\"HIGH_PRIORITY\":32,\"MAX_STATEMENT_TIME\":33,\"=\":34,\"NUMERIC\":35,\"STRAIGHT_JOIN\":36,\"SQL_SMALL_RESULT\":37,\"SQL_BIG_RESULT\":38,\"SQL_BUFFER_RESULT\":39,\"SQL_CACHE\":40,\"SQL_NO_CACHE\":41,\"SQL_CALC_FOUND_ROWS\":42,\",\":43,\"selectExpr\":44,\"*\":45,\"SELECT_EXPR_STAR\":46,\"expr\":47,\"selectExprAliasOpt\":48,\"AS\":49,\"IDENTIFIER\":50,\"STRING\":51,\"string\":52,\"number\":53,\"EXPONENT_NUMERIC\":54,\"HEX_NUMERIC\":55,\"boolean\":56,\"TRUE\":57,\"FALSE\":58,\"null\":59,\"NULL\":60,\"literal\":61,\"place_holder\":62,\"function_call\":63,\"function_call_param_list\":64,\"function_call_param\":65,\"identifier\":66,\"DOT\":67,\"identifier_list\":68,\"case_expr_opt\":69,\"when_then_list\":70,\"WHEN\":71,\"THEN\":72,\"case_when_else\":73,\"ELSE\":74,\"case_when\":75,\"CASE\":76,\"END\":77,\"simple_expr_prefix\":78,\"+\":79,\"simple_expr\":80,\"-\":81,\"~\":82,\"!\":83,\"BINARY\":84,\"expr_list\":85,\"ROW\":86,\"EXISTS\":87,\"{\":88,\"}\":89,\"bit_expr\":90,\"|\":91,\"&\":92,\"<<\":93,\">>\":94,\"/\":95,\"DIV\":96,\"MOD\":97,\"%\":98,\"^\":99,\"not_opt\":100,\"NOT\":101,\"escape_opt\":102,\"ESCAPE\":103,\"predicate\":104,\"IN\":105,\"BETWEEN\":106,\"AND\":107,\"SOUNDS\":108,\"LIKE\":109,\"REGEXP\":110,\"comparison_operator\":111,\">=\":112,\">\":113,\"<=\":114,\"<\":115,\"<>\":116,\"!=\":117,\"sub_query_data_set_opt\":118,\"ANY\":119,\"boolean_primary\":120,\"IS\":121,\"boolean_extra\":122,\"UNKNOWN\":123,\"&&\":124,\"||\":125,\"OR\":126,\"XOR\":127,\"where_opt\":128,\"WHERE\":129,\"group_by_opt\":130,\"group_by\":131,\"roll_up_opt\":132,\"WITH\":133,\"ROLLUP\":134,\"GROUP_BY\":135,\"group_by_order_by_item_list\":136,\"order_by\":137,\"ORDER_BY\":138,\"group_by_order_by_item\":139,\"sort_opt\":140,\"ASC\":141,\"DESC\":142,\"having_opt\":143,\"HAVING\":144,\"limit\":145,\"LIMIT\":146,\"OFFSET\":147,\"procedure_opt\":148,\"procedure\":149,\"PROCEDURE\":150,\"for_update_lock_in_share_mode_opt\":151,\"FOR\":152,\"UPDATE\":153,\"LOCK\":154,\"SHARE\":155,\"MODE\":156,\"FROM\":157,\"table_references\":158,\"partitionOpt\":159,\"escaped_table_reference\":160,\"table_reference\":161,\"OJ\":162,\"join_inner_cross\":163,\"INNER\":164,\"CROSS\":165,\"left_right\":166,\"LEFT\":167,\"RIGHT\":168,\"out_opt\":169,\"OUTER\":170,\"left_right_out_opt\":171,\"join_table\":172,\"JOIN\":173,\"table_factor\":174,\"join_condition\":175,\"on_join_condition\":176,\"NATURAL\":177,\"join_condition_opt\":178,\"ON\":179,\"USING\":180,\"partition_names\":181,\"PARTITION\":182,\"aliasOpt\":183,\"index_or_key\":184,\"INDEX\":185,\"KEY\":186,\"for_opt\":187,\"identifier_list_opt\":188,\"index_hint_list_opt\":189,\"index_hint_list\":190,\"index_hint\":191,\"USE\":192,\"IGNORE\":193,\"FORCE\":194,\"PLACE_HOLDER\":195,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",6:\"EOF\",8:\";\",14:\"UNION\",16:\"(\",17:\")\",18:\"SELECT\",29:\"ALL\",30:\"DISTINCT\",31:\"DISTINCTROW\",32:\"HIGH_PRIORITY\",33:\"MAX_STATEMENT_TIME\",34:\"=\",35:\"NUMERIC\",36:\"STRAIGHT_JOIN\",37:\"SQL_SMALL_RESULT\",38:\"SQL_BIG_RESULT\",39:\"SQL_BUFFER_RESULT\",40:\"SQL_CACHE\",41:\"SQL_NO_CACHE\",42:\"SQL_CALC_FOUND_ROWS\",43:\",\",45:\"*\",46:\"SELECT_EXPR_STAR\",49:\"AS\",50:\"IDENTIFIER\",51:\"STRING\",54:\"EXPONENT_NUMERIC\",55:\"HEX_NUMERIC\",57:\"TRUE\",58:\"FALSE\",60:\"NULL\",67:\"DOT\",71:\"WHEN\",72:\"THEN\",74:\"ELSE\",76:\"CASE\",77:\"END\",79:\"+\",81:\"-\",82:\"~\",83:\"!\",84:\"BINARY\",86:\"ROW\",87:\"EXISTS\",88:\"{\",89:\"}\",91:\"|\",92:\"&\",93:\"<<\",94:\">>\",95:\"/\",96:\"DIV\",97:\"MOD\",98:\"%\",99:\"^\",101:\"NOT\",103:\"ESCAPE\",105:\"IN\",106:\"BETWEEN\",107:\"AND\",108:\"SOUNDS\",109:\"LIKE\",110:\"REGEXP\",112:\">=\",113:\">\",114:\"<=\",115:\"<\",116:\"<>\",117:\"!=\",119:\"ANY\",121:\"IS\",123:\"UNKNOWN\",124:\"&&\",125:\"||\",126:\"OR\",127:\"XOR\",129:\"WHERE\",133:\"WITH\",134:\"ROLLUP\",135:\"GROUP_BY\",138:\"ORDER_BY\",141:\"ASC\",142:\"DESC\",144:\"HAVING\",146:\"LIMIT\",147:\"OFFSET\",150:\"PROCEDURE\",152:\"FOR\",153:\"UPDATE\",154:\"LOCK\",155:\"SHARE\",156:\"MODE\",157:\"FROM\",162:\"OJ\",164:\"INNER\",165:\"CROSS\",167:\"LEFT\",168:\"RIGHT\",170:\"OUTER\",173:\"JOIN\",177:\"NATURAL\",179:\"ON\",180:\"USING\",182:\"PARTITION\",185:\"INDEX\",186:\"KEY\",192:\"USE\",193:\"IGNORE\",194:\"FORCE\",195:\"PLACE_HOLDER\"},\nproductions_: [0,[3,3],[3,3],[5,1],[5,0],[7,1],[7,3],[10,4],[10,4],[13,3],[9,4],[9,4],[4,12],[15,1],[15,1],[15,1],[15,0],[19,1],[19,0],[20,3],[20,0],[21,1],[21,0],[22,1],[22,0],[23,1],[23,0],[24,1],[24,0],[25,0],[25,1],[25,1],[26,1],[26,0],[27,3],[27,1],[44,1],[44,1],[44,2],[48,0],[48,2],[48,1],[48,2],[48,1],[52,1],[53,1],[53,1],[53,1],[56,1],[56,1],[59,1],[61,1],[61,1],[61,1],[61,1],[61,1],[63,4],[64,3],[64,1],[65,0],[65,1],[65,1],[65,2],[65,1],[66,1],[66,3],[68,1],[68,3],[69,0],[69,1],[70,4],[70,5],[73,0],[73,2],[75,5],[78,2],[78,2],[78,2],[78,2],[78,2],[80,1],[80,1],[80,1],[80,1],[80,3],[80,4],[80,3],[80,4],[80,4],[80,1],[90,1],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[90,3],[100,0],[100,1],[102,0],[102,2],[104,1],[104,6],[104,6],[104,6],[104,4],[104,5],[104,4],[111,1],[111,1],[111,1],[111,1],[111,1],[111,1],[111,1],[118,1],[118,1],[120,1],[120,4],[120,3],[120,6],[122,1],[122,1],[47,1],[47,4],[47,2],[47,3],[47,3],[47,3],[47,3],[47,3],[85,1],[85,3],[128,0],[128,2],[130,0],[130,1],[132,0],[132,2],[131,3],[11,0],[11,1],[137,3],[136,1],[136,3],[139,2],[140,0],[140,1],[140,1],[143,0],[143,2],[145,2],[145,4],[145,4],[12,0],[12,1],[148,0],[148,1],[149,2],[151,0],[151,2],[151,4],[28,0],[28,10],[158,1],[158,3],[160,1],[160,4],[163,0],[163,1],[163,1],[166,1],[166,1],[169,0],[169,1],[171,0],[171,2],[172,4],[172,5],[172,4],[172,6],[172,5],[178,0],[178,1],[176,2],[175,1],[175,4],[161,1],[161,1],[181,1],[181,3],[159,0],[159,4],[183,0],[183,2],[183,1],[184,1],[184,1],[187,0],[187,2],[187,2],[187,2],[188,0],[188,1],[189,0],[189,1],[190,1],[190,3],[191,6],[191,6],[191,6],[174,4],[174,4],[174,3],[62,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: case 2:\n return {nodeType: 'Main', value: $$[$0-2], hasSemicolon: $$[$0-1]}; \nbreak;\ncase 3: case 144:\n this.$ = true \nbreak;\ncase 4:\n this.$ = false \nbreak;\ncase 5: case 13: case 14: case 15: case 17: case 19: case 21: case 23: case 25: case 27: case 30: case 31: case 32: case 51: case 52: case 53: case 54: case 55: case 60: case 61: case 63: case 69: case 73: case 80: case 81: case 82: case 83: case 89: case 90: case 104: case 106: case 107: case 114: case 115: case 116: case 117: case 118: case 119: case 120: case 121: case 122: case 123: case 127: case 129: case 140: case 142: case 147: case 153: case 154: case 156: case 161: case 163: case 164: case 175: case 176: case 177: case 178: case 180: case 189: case 191: case 193: case 194: case 202: case 203: case 209: case 211:\n this.$ = $$[$0] \nbreak;\ncase 6:\n this.$ = $$[$0-2], this.$.orderBy = $$[$0-1], this.$.limit = $$[$0]; \nbreak;\ncase 7: case 8:\n this.$ = { type: 'Union', left: $$[$0-3], distinctOpt: $$[$0-1], right: $$[$0] }; \nbreak;\ncase 9:\n this.$ = { type: 'SelectParenthesized', value: $$[$0-1] }; \nbreak;\ncase 10: case 11:\n this.$ = { type: 'Union', left: $$[$0-3], distinctOpt: $$[$0-1], right: $$[$0] } \nbreak;\ncase 12:\n\n        this.$ = {\n          type: 'Select',\n          distinctOpt: $$[$0-10],\n          highPriorityOpt: $$[$0-9],\n          maxStateMentTimeOpt: $$[$0-8],\n          straightJoinOpt: $$[$0-7],\n          sqlSmallResultOpt: $$[$0-6],\n          sqlBigResultOpt: $$[$0-5],\n          sqlBufferResultOpt: $$[$0-4],\n          sqlCacheOpt: $$[$0-3],\n          sqlCalcFoundRowsOpt: $$[$0-2],\n          selectItems: $$[$0-1],\n          from: $$[$0].from,\n          partition: $$[$0].partition,\n          where: $$[$0].where,\n          groupBy: $$[$0].groupBy,\n          having: $$[$0].having,\n          orderBy: $$[$0].orderBy,\n          limit: $$[$0].limit,\n          procedure: $$[$0].procedure,\n          updateLockMode: $$[$0].updateLockMode\n        }\n      \nbreak;\ncase 16: case 18: case 20: case 22: case 24: case 26: case 28: case 29: case 33: case 59: case 68: case 72: case 103: case 105: case 139: case 141: case 143: case 146: case 152: case 155: case 160: case 162: case 165: case 174: case 179: case 188: case 197: case 204: case 208: case 210:\n this.$ = null \nbreak;\ncase 34:\n $$[$0-2].value.push($$[$0]); \nbreak;\ncase 35:\n this.$ = { type: 'SelectExpr', value: [ $$[$0] ] } \nbreak;\ncase 36: case 37: case 64:\n this.$ = { type: 'Identifier', value: $$[$0] } \nbreak;\ncase 38:\n this.$ = $$[$0-1]; this.$.alias = $$[$0].alias; this.$.hasAs = $$[$0].hasAs; \nbreak;\ncase 39: case 199:\n this.$ = {alias: null, hasAs: null} \nbreak;\ncase 40: case 42:\n this.$ = {alias: $$[$0], hasAs: true} \nbreak;\ncase 41:\n this.$ = {alias: $$[$0], hasAs: false} \nbreak;\ncase 43:\n this.$ = {alias: $$[$01], hasAs: false} \nbreak;\ncase 44:\n this.$ = { type: 'String', value: $$[$0] } \nbreak;\ncase 45: case 46: case 47:\n this.$ = { type: 'Number', value: $$[$0] } \nbreak;\ncase 48:\n this.$ = { type: 'Boolean', value: 'TRUE' } \nbreak;\ncase 49:\n this.$ = { type: 'Boolean', value: 'FALSE' } \nbreak;\ncase 50:\n this.$ = { type: 'Null', value: 'null' } \nbreak;\ncase 56:\n this.$ = {type: 'FunctionCall', name: $$[$0-3], params: $$[$0-1]} \nbreak;\ncase 57:\n $$[$0-2].push($$[$0]); this.$ = $$[$0-2]; \nbreak;\ncase 58:\n this.$ = [$$[$0]]; \nbreak;\ncase 62:\n this.$ = { type: 'FunctionCallParam', distinctOpt: $$[$0-1], value: $$[$0] } \nbreak;\ncase 65:\n this.$ = $$[$0-2]; $$[$0-2].value += '.' + $$[$0] \nbreak;\ncase 66:\n this.$ = { type: 'IdentifierList', value: [ $$[$0] ] } \nbreak;\ncase 67: case 171:\n this.$ = $$[$0-2]; $$[$0-2].value.push($$[$0]); \nbreak;\ncase 70:\n this.$ = { type: 'WhenThenList', value: [ { when: $$[$0-2], then: $$[$0] } ] }; \nbreak;\ncase 71:\n this.$ = $$[$0-4]; this.$.value.push({ when: $$[$0-2], then: $$[$0] }); \nbreak;\ncase 74:\n this.$ = { type: 'CaseWhen', caseExprOpt: $$[$0-3], whenThenList: $$[$0-2], else: $$[$0-1] } \nbreak;\ncase 75: case 76: case 77: case 78: case 79:\n this.$ = { type: 'Prefix', prefix: $$[$0-1], value: $$[$0] } \nbreak;\ncase 84:\n this.$ = { type: 'SimpleExprParentheses', value: $$[$0-1] } \nbreak;\ncase 85:\n this.$ = { type: 'SimpleExprParentheses', value: $$[$0-2], hasRow: true } \nbreak;\ncase 86:\n this.$ = { type: 'SubQuery', value: $$[$0-1] } \nbreak;\ncase 87:\n this.$ = { type: 'SubQuery', value: $$[$0-1], hasExists: true } \nbreak;\ncase 88:\n this.$ = { type: 'IdentifierExpr', identifier: $$[$0-2], value: $$[$0-1] } \nbreak;\ncase 91:\n this.$ = { type: 'BitExpression', operator: '|', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 92:\n this.$ = { type: 'BitExpression', operator: '&', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 93:\n this.$ = { type: 'BitExpression', operator: '<<', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 94:\n this.$ = { type: 'BitExpression', operator: '>>', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 95:\n this.$ = { type: 'BitExpression', operator: '+', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 96:\n this.$ = { type: 'BitExpression', operator: '-', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 97:\n this.$ = { type: 'BitExpression', operator: '*', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 98:\n this.$ = { type: 'BitExpression', operator: '/', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 99:\n this.$ = { type: 'BitExpression', operator: 'DIV', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 100:\n this.$ = { type: 'BitExpression', operator: 'MOD', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 101:\n this.$ = { type: 'BitExpression', operator: '%', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 102:\n this.$ = { type: 'BitExpression', operator: '^', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 108:\n this.$ = { type: 'InSubQueryPredicate', hasNot: $$[$0-4], left: $$[$0-5] ,right: $$[$0-1] } \nbreak;\ncase 109:\n this.$ = { type: 'InExpressionListPredicate', hasNot: $$[$0-4], left: $$[$0-5], right: $$[$0-1] } \nbreak;\ncase 110:\n this.$ = { type: 'BetweenPredicate', hasNot: $$[$0-4], left: $$[$0-5], right: { left: $$[$0-2], right: $$[$0] } } \nbreak;\ncase 111:\n this.$ = { type: 'SoundsLikePredicate', hasNot: false, left: $$[$0-3], right: $$[$0] } \nbreak;\ncase 112:\n this.$ = { type: 'LikePredicate', hasNot: $$[$0-3], left: $$[$0-4], right: $$[$0-1], escape: $$[$0] } \nbreak;\ncase 113:\n this.$ = { type: 'RegexpPredicate', hasNot: $$[$0-2], left: $$[$0-3], right: $$[$0] } \nbreak;\ncase 124:\n this.$ = { type: 'IsNullBooleanPrimary', hasNot: $$[$0-1] , value: $$[$0-3] } \nbreak;\ncase 125:\n this.$ = { type: 'ComparisonBooleanPrimary', left: $$[$0-2], operator: $$[$0-1], right: $$[$0] } \nbreak;\ncase 126:\n this.$ = { type: 'ComparisonSubQueryBooleanPrimary', operator: $$[$0-4], subQueryOpt: $$[$0-3], left: $$[$0-5], right: $$[$0-1] } \nbreak;\ncase 128:\n this.$ = { type: 'BooleanExtra', value: $$[$0] } \nbreak;\ncase 130:\n this.$ = { type: 'IsExpression', hasNot: $$[$0-1], left: $$[$0-3], right: $$[$0] } \nbreak;\ncase 131:\n this.$ = { type: 'NotExpression', value: $$[$0] } \nbreak;\ncase 132: case 135:\n this.$ = { type: 'AndExpression', operator: $$[$0-1], left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 133: case 134:\n this.$ = { type: 'OrExpression', operator: $$[$0-1], left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 136:\n this.$ = { type: 'XORExpression', left: $$[$0-2], right: $$[$0] } \nbreak;\ncase 137:\n this.$ = { type: 'ExpressionList', value: [ $$[$0] ] } \nbreak;\ncase 138: case 213:\n this.$ = $$[$0-2]; this.$.value.push($$[$0]); \nbreak;\ncase 145:\n this.$ = { type: 'GroupBy', value: $$[$0-1], rollUp: $$[$0] } \nbreak;\ncase 148:\n this.$ = { type: 'OrderBy', value: $$[$0-1], rollUp: $$[$0] } \nbreak;\ncase 149: case 195:\n this.$ = [ $$[$0] ] \nbreak;\ncase 150:\n this.$ = $$[$0-2]; $$[$0-2].push($$[$0]); \nbreak;\ncase 151:\n this.$ = { type: 'GroupByOrderByItem', value: $$[$0-1], sortOpt: $$[$0] } \nbreak;\ncase 157:\n this.$ = { type: 'Limit', value: [ $$[$0] ] } \nbreak;\ncase 158:\n this.$ = { type: 'Limit', value: [ $$[$0-2], $$[$0] ] } \nbreak;\ncase 159:\n this.$ = { type: 'Limit', value: [ $$[$0], $$[$0-2] ], offsetMode: true } \nbreak;\ncase 166:\n this.$ = $$[$0-1] + ' ' + $$[$0] \nbreak;\ncase 167:\n this.$ = $$[$0-3] + ' ' + $$[$0-2] + ' ' + $$[$0-1] + ' ' + $$[$0] \nbreak;\ncase 168:\n this.$ = {} \nbreak;\ncase 169:\n this.$ = { from: $$[$0-8], partition: $$[$0-7], where: $$[$0-6], groupBy: $$[$0-5], having: $$[$0-4], orderBy: $$[$0-3], limit: $$[$0-2], procedure: $$[$0-1], updateLockMode: $$[$0] } \nbreak;\ncase 170:\n this.$ = { type: 'TableReferences', value: [ $$[$0] ] } \nbreak;\ncase 172:\n this.$ = { type: 'TableReference', value: $$[$0] } \nbreak;\ncase 173:\n this.$ = { type: 'TableReference', hasOj: true, value: $$[$0-1] } \nbreak;\ncase 181:\n this.$ = { leftRight: null, outOpt: null } \nbreak;\ncase 182:\n this.$ = { leftRight: $$[$0-1], outOpt: $$[$0] } \nbreak;\ncase 183:\n this.$ = { type: 'InnerCrossJoinTable', innerCrossOpt: $$[$0-2], left: $$[$0-3], right: $$[$0], condition: null } \nbreak;\ncase 184:\n this.$ = { type: 'InnerCrossJoinTable', innerCrossOpt: $$[$0-3], left: $$[$0-4], right: $$[$0-1], condition: $$[$0] } \nbreak;\ncase 185:\n this.$ = { type: 'StraightJoinTable', left: $$[$0-3], right: $$[$0-1], condition: $$[$0] } \nbreak;\ncase 186:\n this.$ = { type: 'LeftRightJoinTable', leftRight: $$[$0-4], outOpt: $$[$0-3], left: $$[$0-5], right: $$[$0-1], condition: $$[$0] } \nbreak;\ncase 187:\n this.$ = { type: 'NaturalJoinTable', leftRight: $$[$0-2].leftRight, outOpt: $$[$0-2].outOpt, left: $$[$0-4], right: $$[$0] } \nbreak;\ncase 190:\n this.$ = { type: 'OnJoinCondition', value: $$[$0] } \nbreak;\ncase 192:\n this.$ = { type: 'UsingJoinCondition', value: $$[$0-1] } \nbreak;\ncase 196:\n this.$ = $$[$0-2]; $$[$0-2].push($$[$0]) \nbreak;\ncase 198:\n this.$ = { type: 'Partitions', value: $$[$0-1] } \nbreak;\ncase 200:\n this.$ = { hasAs: true, alias: $$[$0] } \nbreak;\ncase 201:\n this.$ = { hasAs: false, alias: $$[$0] } \nbreak;\ncase 205: case 206: case 207:\n this.$ = { type: 'ForOptIndexHint', value: $$[$0] } \nbreak;\ncase 212:\n this.$ = { type: 'IndexHintList', value: [ $$[$0] ] } \nbreak;\ncase 214:\n this.$ = { type: 'UseIndexHint', value: $$[$0-1], forOpt: $$[$0-3], indexOrKey: $$[$0-4] } \nbreak;\ncase 215:\n this.$ = { type: 'IgnoreIndexHint', value: $$[$0-1], forOpt: $$[$0-3], indexOrKey: $$[$0-4] } \nbreak;\ncase 216:\n this.$ = { type: 'ForceIndexHint', value: $$[$0-1], forOpt: $$[$0-3], indexOrKey: $$[$0-4] } \nbreak;\ncase 217:\n this.$ = { type: 'TableFactor', value: $$[$0-3], partition: $$[$0-2], alias: $$[$0-1].alias, hasAs: $$[$0-1].hasAs, indexHintOpt: $$[$0] } \nbreak;\ncase 218:\n this.$ = { type: 'TableFactor', value: { type: 'SubQuery', value: $$[$0-2] }, alias: $$[$0].alias, hasAs: $$[$0].hasAs} \nbreak;\ncase 219:\n this.$ = $$[$0-1]; this.$.hasParentheses = true \nbreak;\ncase 220:\n this.$ = { type: 'PlaceHolder', value: $$[$0], param: $$[$0].slice(2, -1)} \nbreak;\n}\n},\ntable: [{3:1,4:2,7:3,9:5,10:6,13:7,16:$V0,18:$V1},{1:[3]},{5:9,6:$V2,8:$V3,14:$V4},{5:12,6:$V2,8:$V3},o([16,32,33,35,36,37,38,39,40,41,42,45,46,50,51,54,55,57,58,60,76,79,81,82,83,84,86,87,88,101,195],$V5,{15:13,29:$V6,30:$V7,31:$V8}),o($V9,[2,5]),o([6,8,146],$Va,{11:17,137:18,138:$Vb}),{14:$Vc},{4:21,18:$V1},{6:[1,22]},{15:23,18:$V5,29:$V6,30:$V7,31:$V8},{6:[2,3]},{6:[1,24]},o($Vd,[2,18],{19:25,32:[1,26]}),o($Ve,[2,13]),o($Ve,[2,14]),o($Ve,[2,15]),o($V9,$Vf,{12:27,145:28,146:$Vg}),o($Vh,[2,147]),{16:$Vi,35:$Vj,47:32,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,136:30,139:31,195:$VB},{15:67,16:$V5,29:$V6,30:$V7,31:$V8},{17:[1,68]},{1:[2,1]},{4:69,9:70,18:$V1},{1:[2,2]},o($VC,[2,20],{20:71,33:[1,72]}),o($Vd,[2,17]),o($V9,[2,6]),o($VD,[2,161]),{35:[1,73]},o($Vh,$VE,{132:74,43:$VF,133:$VG}),o($VH,[2,149]),o($VH,[2,152],{140:77,107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM,141:[1,83],142:[1,84]}),o($VN,[2,129],{111:86,34:[1,87],112:[1,88],113:[1,89],114:[1,90],115:[1,91],116:[1,92],117:[1,93],121:[1,85]}),{16:$Vi,35:$Vj,47:94,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($VO,[2,123]),o($VO,[2,107],{100:95,45:$VP,79:$VQ,81:$VR,91:$VS,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_,101:$V$,105:$V01,106:$V01,109:$V01,110:$V01,108:[1,96]}),o($V11,[2,90]),o($V21,[2,80]),o($V21,[2,81],{67:$V31}),o($V21,[2,82]),o($V21,[2,83]),{4:112,16:$Vi,18:$V1,35:$Vj,47:113,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,85:111,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:[1,114]},{16:[1,115]},{50:$V41,66:116},o($V21,[2,89]),o($V21,[2,51]),o($V21,[2,52]),o($V21,[2,53]),o($V21,[2,54]),o($V21,[2,55]),o([6,8,14,17,34,36,43,45,49,50,51,67,71,72,74,77,79,81,89,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],$V51,{16:$V61}),{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:119,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:120,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:121,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:122,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:123,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,47:125,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,69:124,71:[2,68],75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($V21,[2,44]),o($V21,[2,45]),o($V21,[2,46]),o($V21,[2,47]),o($V21,[2,48]),o($V21,[2,49]),o($V21,[2,50]),o($V21,[2,220]),{10:127,13:126,16:$V0},o([6,8,14,138,146],[2,9]),o($V9,[2,10],{14:$V4}),o($V9,[2,11]),o($V71,[2,22],{21:128,36:[1,129]}),{34:[1,130]},o($VD,[2,157],{43:[1,131],147:[1,132]}),o($Vh,[2,148]),{16:$Vi,35:$Vj,47:32,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,139:133,195:$VB},{134:[1,134]},o($VH,[2,151]),{16:$Vi,35:$Vj,47:135,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:136,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:137,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:138,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:139,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($VH,[2,153]),o($VH,[2,154]),o([57,58,60,123],$V01,{100:140,101:$V$}),{16:$Vi,29:[1,143],35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,104:141,118:142,119:[1,144],195:$VB},o($V81,[2,114]),o($V81,[2,115]),o($V81,[2,116]),o($V81,[2,117]),o($V81,[2,118]),o($V81,[2,119]),o($V81,[2,120]),o($VN,[2,131]),{105:[1,145],106:[1,146],109:[1,147],110:[1,148]},{109:[1,149]},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:150,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:151,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:152,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:153,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:154,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:155,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:156,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:157,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:158,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:159,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:160,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:161,195:$VB},o([57,58,60,105,106,109,110,123],[2,104]),{50:[1,162]},{17:[1,163],43:$V91},{17:[1,165]},o($Va1,[2,137],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{16:$Vi,35:$Vj,47:113,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,85:166,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{4:167,18:$V1},{16:$Vi,35:$Vj,47:168,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,67:$V31,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o([6,8,14,16,17,35,36,43,49,50,51,54,55,57,58,60,67,76,79,81,82,83,84,86,87,88,89,101,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194,195],$V51),o($Va1,$Vb1,{120:33,104:35,90:36,80:37,61:38,66:39,63:40,78:41,75:46,52:47,53:48,56:49,59:50,62:51,64:169,65:170,47:174,16:$Vi,30:$Vc1,35:$Vj,45:$Vd1,46:$Ve1,50:$Vk,51:$Vl,54:$Vm,55:$Vn,57:$Vo,58:$Vp,60:$Vq,76:$Vr,79:$Vs,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,101:$VA,195:$VB}),o($V21,[2,75]),o($V21,[2,76]),o($V21,[2,77]),o($V21,[2,78]),o($V21,[2,79]),{70:175,71:[1,176]},{71:[2,69],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},o($Vf1,[2,7],{14:$Vc}),o($Vf1,[2,8]),o($Vg1,[2,24],{22:177,37:[1,178]}),o($V71,[2,21]),{35:[1,179]},{35:[1,180]},{35:[1,181]},o($VH,[2,150]),o($Vh1,[2,144]),o($VN,[2,132]),o($Vi1,[2,133],{107:$VI,124:$VJ}),o($Vi1,[2,134],{107:$VI,124:$VJ}),o($VN,[2,135]),o($Vi1,[2,136],{107:$VI,124:$VJ}),{56:184,57:$Vo,58:$Vp,60:[1,183],122:182,123:[1,185]},o($VO,[2,125]),{16:[1,186]},{16:[2,121]},{16:[2,122]},{16:[1,187]},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:188,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:189,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:190,195:$VB},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:191,195:$VB},o([6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,91],{45:$VP,79:$VQ,81:$VR,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_}),o([6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,92,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,92],{45:$VP,79:$VQ,81:$VR,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ}),o($Vj1,[2,93],{45:$VP,79:$VQ,81:$VR,95:$VW,96:$VX,97:$VY,98:$VZ}),o($Vj1,[2,94],{45:$VP,79:$VQ,81:$VR,95:$VW,96:$VX,97:$VY,98:$VZ}),o($Vk1,[2,95],{45:$VP,95:$VW,96:$VX,97:$VY,98:$VZ}),o($Vk1,[2,96],{45:$VP,95:$VW,96:$VX,97:$VY,98:$VZ}),o($V11,[2,97]),o($V11,[2,98]),o($V11,[2,99]),o($V11,[2,100]),o($V11,[2,101]),o([6,8,14,17,34,36,43,49,50,51,71,72,74,77,89,91,99,101,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182],[2,102],{45:$VP,79:$VQ,81:$VR,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ}),o([6,8,14,16,17,34,35,36,43,45,49,50,51,54,55,57,58,60,67,71,72,74,76,77,79,81,82,83,84,86,87,88,89,91,92,93,94,95,96,97,98,99,101,103,105,106,107,108,109,110,112,113,114,115,116,117,121,124,125,126,127,129,133,135,138,141,142,144,146,150,152,154,157,164,165,167,168,173,177,179,180,182,192,193,194,195],[2,65]),o($V21,[2,84]),{16:$Vi,35:$Vj,47:192,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($V21,[2,86]),{17:[1,193],43:$V91},{17:[1,194]},{89:[1,195],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},{17:[1,196],43:[1,197]},o($Va1,[2,58]),o($Va1,[2,60]),o($Va1,[2,61]),{16:$Vi,35:$Vj,47:198,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Va1,[2,63],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{71:[1,200],73:199,74:[1,201],77:[2,72]},{16:$Vi,35:$Vj,47:202,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vl1,[2,26],{23:203,38:[1,204]}),o($Vg1,[2,23]),o($VC,[2,19]),o($VD,[2,158]),o($VD,[2,159]),o($VN,[2,130]),o($VO,[2,124]),o($VN,[2,127]),o($VN,[2,128]),{4:205,18:$V1},{4:206,16:$Vi,18:$V1,35:$Vj,47:113,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,85:207,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{45:$VP,79:$VQ,81:$VR,91:$VS,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_,107:[1,208]},o($VO,[2,105],{102:209,103:[1,210]}),o($VO,[2,113],{45:$VP,79:$VQ,81:$VR,91:$VS,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_}),o($VO,[2,111],{45:$VP,79:$VQ,81:$VR,91:$VS,92:$VT,93:$VU,94:$VV,95:$VW,96:$VX,97:$VY,98:$VZ,99:$V_}),o($Va1,[2,138],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),o($V21,[2,85]),o($V21,[2,87]),o($V21,[2,88]),o($V21,[2,56]),o($Va1,$Vb1,{120:33,104:35,90:36,80:37,61:38,66:39,63:40,78:41,75:46,52:47,53:48,56:49,59:50,62:51,47:174,65:211,16:$Vi,30:$Vc1,35:$Vj,45:$Vd1,46:$Ve1,50:$Vk,51:$Vl,54:$Vm,55:$Vn,57:$Vo,58:$Vp,60:$Vq,76:$Vr,79:$Vs,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,101:$VA,195:$VB}),o($Va1,[2,62],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{77:[1,212]},{16:$Vi,35:$Vj,47:213,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vi,35:$Vj,47:214,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{72:[1,215],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},o($Vm1,[2,28],{24:216,39:[1,217]}),o($Vl1,[2,25]),{17:[1,218]},{17:[1,219]},{17:[1,220],43:$V91},{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,104:221,195:$VB},o($VO,[2,112]),{16:$Vi,35:$Vj,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:222,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,195:$VB},o($Va1,[2,57]),o($V21,[2,74]),{72:[1,223],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},{77:[2,73],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM},{16:$Vi,35:$Vj,47:224,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vn1,[2,29],{25:225,40:[1,226],41:[1,227]}),o($Vm1,[2,27]),o($VO,[2,126]),o($VO,[2,108]),o($VO,[2,109]),o($VO,[2,110]),o($VO,[2,106]),{16:$Vi,35:$Vj,47:228,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vo1,[2,70],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),o($Vp1,[2,33],{26:229,42:[1,230]}),o($Vn1,[2,30]),o($Vn1,[2,31]),o($Vo1,[2,71],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{16:$Vi,27:231,35:$Vj,44:232,45:$Vq1,46:$Vr1,47:235,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vp1,[2,32]),o($Vs1,[2,168],{28:236,43:[1,237],157:[1,238]}),o($Vt1,[2,35]),o($Vt1,[2,36]),o($Vt1,[2,37]),o($Vt1,[2,39],{48:239,49:[1,240],50:[1,241],51:[1,242],107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),o($Vs1,[2,12]),{16:$Vi,35:$Vj,44:243,45:$Vq1,46:$Vr1,47:235,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vu1,50:$V41,66:250,88:$Vv1,158:244,160:245,161:246,172:249,174:248},o($Vt1,[2,38]),{50:[1,252],51:[1,253]},o($Vt1,[2,41]),o($Vt1,[2,43]),o($Vt1,[2,34]),o([6,8,14,17,129,135,138,144,146,150,152,154],$Vw1,{159:254,43:$Vx1,182:$Vy1}),o($Vz1,[2,170]),o($Vz1,[2,172],{163:257,166:259,36:$VA1,164:$VB1,165:$VC1,167:$VD1,168:$VE1,173:$VF1,177:$VG1}),{162:[1,265]},o($VH1,[2,193]),o($VH1,[2,194]),o([6,8,14,17,36,43,49,50,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,192,193,194],$Vw1,{159:266,67:$V31,182:$Vy1}),{4:267,16:$Vu1,18:$V1,50:$V41,66:250,88:$Vv1,158:268,160:245,161:246,172:249,174:248},o($Vt1,[2,40]),o($Vt1,[2,42]),o($VI1,[2,139],{128:269,129:[1,270]}),{16:$Vu1,50:$V41,66:250,88:$Vv1,160:271,161:246,172:249,174:248},{16:[1,272]},{173:[1,273]},{16:$Vu1,50:$V41,66:250,174:274},{169:275,170:$VJ1,173:$VK1},{166:278,167:$VD1,168:$VE1,171:277,173:[2,181]},{173:[2,175]},{173:[2,176]},o($VL1,[2,177]),o($VL1,[2,178]),{16:$Vu1,50:$V41,66:250,161:279,172:249,174:248},o($VM1,$VN1,{183:280,66:282,49:$VO1,50:$V41}),{17:[1,283]},{17:[1,284],43:$Vx1},o($Vh1,[2,141],{130:285,131:286,135:[1,287]}),{16:$Vi,35:$Vj,47:288,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vz1,[2,171]),{50:$V41,66:290,181:289},{16:$Vu1,50:$V41,66:250,174:291},{176:292,179:$VP1},{173:[1,294]},{173:[2,180]},{173:[1,295]},{169:296,170:$VJ1,173:$VK1},{36:$VA1,89:[1,297],163:257,164:$VB1,165:$VC1,166:259,167:$VD1,168:$VE1,173:$VF1,177:$VG1},o($VH1,[2,210],{189:298,190:299,191:300,192:$VQ1,193:$VR1,194:$VS1}),{50:$V41,66:304},o($VM1,[2,201],{67:$V31}),o($VH1,$VN1,{66:282,183:305,49:$VO1,50:$V41}),o($VH1,[2,219]),o($VT1,[2,155],{143:306,144:[1,307]}),o($Vh1,[2,142]),{16:$Vi,35:$Vj,47:32,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,136:308,139:31,195:$VB},o($VI1,[2,140],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{17:[1,309],43:[1,310]},o($Va1,[2,195],{67:$V31}),o([6,8,14,17,36,43,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,182],[2,183],{175:311,176:312,179:$VP1,180:$VU1}),o($VH1,[2,185]),{16:$Vi,35:$Vj,47:314,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},{16:$Vu1,50:$V41,66:250,161:315,172:249,174:248},{16:$Vu1,50:$V41,66:250,174:316},{173:[2,182]},o($Vz1,[2,173]),o($VH1,[2,217]),o($VH1,[2,211]),o($VH1,[2,212]),{184:318,185:$VV1,186:$VW1},{184:321,185:$VV1,186:$VW1},{184:322,185:$VV1,186:$VW1},o($VM1,[2,200],{67:$V31}),o($VH1,[2,218]),o($Vh,$Va,{137:18,11:323,138:$Vb}),{16:$Vi,35:$Vj,47:324,50:$Vk,51:$Vl,52:47,53:48,54:$Vm,55:$Vn,56:49,57:$Vo,58:$Vp,59:50,60:$Vq,61:38,62:51,63:40,66:39,75:46,76:$Vr,78:41,79:$Vs,80:37,81:$Vt,82:$Vu,83:$Vv,84:$Vw,86:$Vx,87:$Vy,88:$Vz,90:36,101:$VA,104:35,120:33,195:$VB},o($Vh1,$VE,{132:325,43:$VF,133:$VG}),o([6,8,14,17,36,43,49,50,89,129,135,138,144,146,150,152,154,164,165,167,168,173,177,179,180,182,192,193,194],[2,198]),{50:$V41,66:326},o($VH1,[2,184]),o($VH1,[2,191]),{16:[1,327]},o($VH1,[2,190],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),{36:$VA1,163:257,164:$VB1,165:$VC1,166:259,167:$VD1,168:$VE1,173:$VF1,175:328,176:312,177:$VG1,179:$VP1,180:$VU1},o($VH1,[2,187]),{191:329,192:$VQ1,193:$VR1,194:$VS1},{16:$VX1,152:$VY1,187:330},o($VZ1,[2,202]),o($VZ1,[2,203]),{16:$VX1,152:$VY1,187:332},{16:$VX1,152:$VY1,187:333},o($VD,$Vf,{145:28,12:334,146:$Vg}),o($VT1,[2,156],{107:$VI,124:$VJ,125:$VK,126:$VL,127:$VM}),o($Vh1,[2,145]),o($Va1,[2,196],{67:$V31}),{50:$V41,66:336,68:335},o($VH1,[2,186]),o($VH1,[2,213]),{16:[1,337]},{135:[1,340],138:[1,339],173:[1,338]},{16:[1,341]},{16:[1,342]},o($V_1,[2,162],{148:343,149:344,150:[1,345]}),{17:[1,346],43:$V$1},o($Va1,[2,66],{67:$V31}),{17:[2,208],50:$V41,66:336,68:349,188:348},{16:[2,205]},{16:[2,206]},{16:[2,207]},{50:$V41,66:336,68:350},{50:$V41,66:336,68:351},o($Vs1,[2,165],{151:352,152:[1,353],154:[1,354]}),o($V_1,[2,163]),{50:[1,356],63:355},o($VH1,[2,192]),{50:$V41,66:357},{17:[1,358]},{17:[2,209],43:$V$1},{17:[1,359],43:$V$1},{17:[1,360],43:$V$1},o($Vs1,[2,169]),{153:[1,361]},{105:[1,362]},o($V_1,[2,164]),{16:$V61},o($Va1,[2,67],{67:$V31}),o($VH1,[2,214]),o($VH1,[2,215]),o($VH1,[2,216]),o($Vs1,[2,166]),{155:[1,363]},{156:[1,364]},o($Vs1,[2,167])],\ndefaultActions: {11:[2,3],22:[2,1],24:[2,2],143:[2,121],144:[2,122],261:[2,175],262:[2,176],276:[2,180],296:[2,182],338:[2,205],339:[2,206],340:[2,207]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"case-insensitive\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip comments */\nbreak;\ncase 1:/* skip sql comments */\nbreak;\ncase 2:/* skip sql comments */\nbreak;\ncase 3:/* skip whitespace */\nbreak;\ncase 4:return 195\nbreak;\ncase 5:return 50\nbreak;\ncase 6:return 50\nbreak;\ncase 7:return 50\nbreak;\ncase 8:return 18\nbreak;\ncase 9:return 29\nbreak;\ncase 10:return 119\nbreak;\ncase 11:return 30\nbreak;\ncase 12:return 31\nbreak;\ncase 13:return 32\nbreak;\ncase 14:return 33\nbreak;\ncase 15:return 36\nbreak;\ncase 16:return 37\nbreak;\ncase 17:return 38\nbreak;\ncase 18:return 39\nbreak;\ncase 19:return 40\nbreak;\ncase 20:return 41\nbreak;\ncase 21:return 42\nbreak;\ncase 22:return 46\nbreak;\ncase 23:return 49\nbreak;\ncase 24:return 57\nbreak;\ncase 25:return 58\nbreak;\ncase 26:return 60\nbreak;\ncase 27:return 'COLLATE'\nbreak;\ncase 28:return 84\nbreak;\ncase 29:return 86\nbreak;\ncase 30:return 87\nbreak;\ncase 31:return 76\nbreak;\ncase 32:return 71\nbreak;\ncase 33:return 72\nbreak;\ncase 34:return 74\nbreak;\ncase 35:return 77\nbreak;\ncase 36:return 96\nbreak;\ncase 37:return 97\nbreak;\ncase 38:return 101\nbreak;\ncase 39:return 106\nbreak;\ncase 40:return 105\nbreak;\ncase 41:return 108\nbreak;\ncase 42:return 109\nbreak;\ncase 43:return 103\nbreak;\ncase 44:return 110\nbreak;\ncase 45:return 121\nbreak;\ncase 46:return 123\nbreak;\ncase 47:return 107\nbreak;\ncase 48:return 126\nbreak;\ncase 49:return 127\nbreak;\ncase 50:return 157\nbreak;\ncase 51:return 182\nbreak;\ncase 52:return 192\nbreak;\ncase 53:return 185\nbreak;\ncase 54:return 186\nbreak;\ncase 55:return 152\nbreak;\ncase 56:return 173\nbreak;\ncase 57:return 138\nbreak;\ncase 58:return 135\nbreak;\ncase 59:return 193\nbreak;\ncase 60:return 194\nbreak;\ncase 61:return 164\nbreak;\ncase 62:return 165\nbreak;\ncase 63:return 179\nbreak;\ncase 64:return 180\nbreak;\ncase 65:return 167\nbreak;\ncase 66:return 168\nbreak;\ncase 67:return 170\nbreak;\ncase 68:return 177\nbreak;\ncase 69:return 129\nbreak;\ncase 70:return 141\nbreak;\ncase 71:return 142\nbreak;\ncase 72:return 133\nbreak;\ncase 73:return 134\nbreak;\ncase 74:return 144\nbreak;\ncase 75:return 147\nbreak;\ncase 76:return 150\nbreak;\ncase 77:return 153\nbreak;\ncase 78:return 154\nbreak;\ncase 79:return 155\nbreak;\ncase 80:return 156\nbreak;\ncase 81:return 162\nbreak;\ncase 82:return 146\nbreak;\ncase 83:return 14\nbreak;\ncase 84:return 43\nbreak;\ncase 85:return 34\nbreak;\ncase 86:return 16\nbreak;\ncase 87:return 17\nbreak;\ncase 88:return 82\nbreak;\ncase 89:return 117\nbreak;\ncase 90:return 83\nbreak;\ncase 91:return 91\nbreak;\ncase 92:return 92\nbreak;\ncase 93:return 79\nbreak;\ncase 94:return 81\nbreak;\ncase 95:return 45\nbreak;\ncase 96:return 95\nbreak;\ncase 97:return 98\nbreak;\ncase 98:return 99\nbreak;\ncase 99:return 94\nbreak;\ncase 100:return 112\nbreak;\ncase 101:return 113\nbreak;\ncase 102:return 93\nbreak;\ncase 103:return '<=>'\nbreak;\ncase 104:return 114\nbreak;\ncase 105:return 116\nbreak;\ncase 106:return 115\nbreak;\ncase 107:return 88\nbreak;\ncase 108:return 89\nbreak;\ncase 109:return 8\nbreak;\ncase 110:return 51\nbreak;\ncase 111:return 51\nbreak;\ncase 112:return 55\nbreak;\ncase 113:return 35\nbreak;\ncase 114:return 54\nbreak;\ncase 115:return 50\nbreak;\ncase 116:return 67\nbreak;\ncase 117:return 51\nbreak;\ncase 118:return 51\nbreak;\ncase 119:return 50\nbreak;\ncase 120:return 6\nbreak;\ncase 121:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:[/][*](.|\\n)*?[*][/])/i,/^(?:[-][-]\\s.*\\n)/i,/^(?:[#]\\s.*\\n)/i,/^(?:\\s+)/i,/^(?:[$][{](.*?)[}])/i,/^(?:[`][a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*[`])/i,/^(?:[\\w]+[\\u4e00-\\u9fa5]+[0-9a-zA-Z_\\u4e00-\\u9fa5]*)/i,/^(?:[\\u4e00-\\u9fa5][0-9a-zA-Z_\\u4e00-\\u9fa5]*)/i,/^(?:SELECT\\b)/i,/^(?:ALL\\b)/i,/^(?:ANY\\b)/i,/^(?:DISTINCT\\b)/i,/^(?:DISTINCTROW\\b)/i,/^(?:HIGH_PRIORITY\\b)/i,/^(?:MAX_STATEMENT_TIME\\b)/i,/^(?:STRAIGHT_JOIN\\b)/i,/^(?:SQL_SMALL_RESULT\\b)/i,/^(?:SQL_BIG_RESULT\\b)/i,/^(?:SQL_BUFFER_RESULT\\b)/i,/^(?:SQL_CACHE\\b)/i,/^(?:SQL_NO_CACHE\\b)/i,/^(?:SQL_CALC_FOUND_ROWS\\b)/i,/^(?:([a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*\\.){1,2}\\*)/i,/^(?:AS\\b)/i,/^(?:TRUE\\b)/i,/^(?:FALSE\\b)/i,/^(?:NULL\\b)/i,/^(?:COLLATE\\b)/i,/^(?:BINARY\\b)/i,/^(?:ROW\\b)/i,/^(?:EXISTS\\b)/i,/^(?:CASE\\b)/i,/^(?:WHEN\\b)/i,/^(?:THEN\\b)/i,/^(?:ELSE\\b)/i,/^(?:END\\b)/i,/^(?:DIV\\b)/i,/^(?:MOD\\b)/i,/^(?:NOT\\b)/i,/^(?:BETWEEN\\b)/i,/^(?:IN\\b)/i,/^(?:SOUNDS\\b)/i,/^(?:LIKE\\b)/i,/^(?:ESCAPE\\b)/i,/^(?:REGEXP\\b)/i,/^(?:IS\\b)/i,/^(?:UNKNOWN\\b)/i,/^(?:AND\\b)/i,/^(?:OR\\b)/i,/^(?:XOR\\b)/i,/^(?:FROM\\b)/i,/^(?:PARTITION\\b)/i,/^(?:USE\\b)/i,/^(?:INDEX\\b)/i,/^(?:KEY\\b)/i,/^(?:FOR\\b)/i,/^(?:JOIN\\b)/i,/^(?:ORDER\\s+BY\\b)/i,/^(?:GROUP\\s+BY\\b)/i,/^(?:IGNORE\\b)/i,/^(?:FORCE\\b)/i,/^(?:INNER\\b)/i,/^(?:CROSS\\b)/i,/^(?:ON\\b)/i,/^(?:USING\\b)/i,/^(?:LEFT\\b)/i,/^(?:RIGHT\\b)/i,/^(?:OUTER\\b)/i,/^(?:NATURAL\\b)/i,/^(?:WHERE\\b)/i,/^(?:ASC\\b)/i,/^(?:DESC\\b)/i,/^(?:WITH\\b)/i,/^(?:ROLLUP\\b)/i,/^(?:HAVING\\b)/i,/^(?:OFFSET\\b)/i,/^(?:PROCEDURE\\b)/i,/^(?:UPDATE\\b)/i,/^(?:LOCK\\b)/i,/^(?:SHARE\\b)/i,/^(?:MODE\\b)/i,/^(?:OJ\\b)/i,/^(?:LIMIT\\b)/i,/^(?:UNION\\b)/i,/^(?:,)/i,/^(?:=)/i,/^(?:\\()/i,/^(?:\\))/i,/^(?:~)/i,/^(?:!=)/i,/^(?:!)/i,/^(?:\\|)/i,/^(?:&)/i,/^(?:\\+)/i,/^(?:-)/i,/^(?:\\*)/i,/^(?:\\/)/i,/^(?:%)/i,/^(?:\\^)/i,/^(?:>>)/i,/^(?:>=)/i,/^(?:>)/i,/^(?:<<)/i,/^(?:<=>)/i,/^(?:<=)/i,/^(?:<>)/i,/^(?:<)/i,/^(?:\\{)/i,/^(?:\\})/i,/^(?:;)/i,/^(?:['](\\\\.|[^'])*['])/i,/^(?:[\"](\\\\.|[^\"])*[\"])/i,/^(?:[0][x][0-9a-fA-F]+)/i,/^(?:[-]?[0-9]+(\\.[0-9]+)?)/i,/^(?:[-]?[0-9]+(\\.[0-9]+)?[eE][-][0-9]+(\\.[0-9]+)?)/i,/^(?:[a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*)/i,/^(?:\\.)/i,/^(?:[\"][a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*[\"])/i,/^(?:['][a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*['])/i,/^(?:([`])(?:(?=(\\\\?))\\2.)*?\\1)/i,/^(?:$)/i,/^(?:.)/i],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nexport { sqlParser };","import type { RuleGroupTypeAny, RuleType } from '../types';\n\ntype FindPathReturnType = RuleGroupTypeAny | RuleType | null;\n\nexport const findPath = (path: number[], query: RuleGroupTypeAny): FindPathReturnType => {\n  let target: FindPathReturnType = query;\n  let level = 0;\n  while (level < path.length && target && 'rules' in target) {\n    const t: RuleGroupTypeAny | RuleType | string = target.rules[path[level]];\n    if (typeof t !== 'string') {\n      target = t;\n    } else {\n      target = null;\n    }\n    level++;\n  }\n\n  return target;\n};\n\nexport const getParentPath = (path: number[]) => path.slice(0, path.length - 1);\n\nexport const pathsAreEqual = (path1: number[], path2: number[]) =>\n  path1.length === path2.length && path1.every((val, idx) => val === path2[idx]);\n\nexport const isAncestor = (maybeAncestor: number[], path: number[]) =>\n  maybeAncestor.length < path.length && RegExp(`^${maybeAncestor.join('-')}`).test(path.join('-'));\n\nexport const getCommonAncestorPath = (path1: number[], path2: number[]) => {\n  const commonAncestorPath: number[] = [];\n  const parentPath1 = getParentPath(path1);\n  const parentPath2 = getParentPath(path2);\n  let i = 0;\n\n  while (i < parentPath1.length && i < parentPath2.length && parentPath1[i] === parentPath2[i]) {\n    commonAncestorPath.push(parentPath2[i]);\n    i++;\n  }\n\n  return commonAncestorPath;\n};\n\nexport const pathIsDisabled = (path: number[], query: RuleGroupTypeAny) => {\n  let disabled = !!query.disabled;\n  let target: RuleType | RuleGroupTypeAny = query;\n  let level = 0;\n  while (level < path.length && !disabled && 'rules' in target) {\n    const t: RuleGroupTypeAny | RuleType | string = target.rules[path[level]];\n    if (typeof t === 'object' && ('rules' in t || 'field' in t)) {\n      disabled = !!t.disabled;\n      target = t;\n    }\n    level++;\n  }\n  return disabled;\n};\n","import { produce } from 'immer';\nimport type { RuleGroupArray, RuleGroupICArray, RuleGroupTypeAny, RuleType } from '../types';\nimport { generateID } from './generateID';\n\n/**\n * Generates a valid rule\n */\nexport const prepareRule = (rule: RuleType) =>\n  produce(rule, draft => {\n    if (!draft.id) {\n      draft.id = `r-${generateID()}`;\n    }\n  });\n\n/**\n * Generates a valid rule group\n */\nexport const prepareRuleGroup = <RG extends RuleGroupTypeAny>(queryObject: RG): RG =>\n  produce(queryObject, draft => {\n    if (!draft.id) {\n      draft.id = `g-${generateID()}`;\n    }\n    draft.rules = draft.rules.map(r =>\n      typeof r === 'string' ? r : 'rules' in r ? prepareRuleGroup(r) : prepareRule(r)\n    ) as RuleGroupArray | RuleGroupICArray;\n    draft.not = !!draft.not;\n  });\n\n/**\n * Generates a valid rule or group\n */\nexport const prepareRuleOrGroup = <RG extends RuleGroupTypeAny>(rg: RG | RuleType) =>\n  'rules' in rg ? prepareRuleGroup(rg) : prepareRule(rg);\n","import type {\n  RuleGroupArray,\n  RuleGroupICArray,\n  RuleGroupType,\n  RuleGroupTypeIC,\n  RuleType,\n} from '../types';\nimport { generateID } from './generateID';\n\nexport const regenerateID = (rule: RuleType): RuleType =>\n  JSON.parse(JSON.stringify({ ...rule, id: `r-${generateID()}` }));\n\nexport const regenerateIDs = (\n  ruleGroup: RuleGroupType | RuleGroupTypeIC\n): RuleGroupType | RuleGroupTypeIC => {\n  if ('combinator' in ruleGroup) {\n    const { combinator, not } = ruleGroup;\n    const rules = ruleGroup.rules.map(r =>\n      'rules' in r ? regenerateIDs(r) : regenerateID(r)\n    ) as RuleGroupArray;\n    return { id: `g-${generateID()}`, combinator, rules, not };\n  }\n  const { not } = ruleGroup;\n  const rules = ruleGroup.rules.map(r =>\n    typeof r === 'string' ? r : 'rules' in r ? regenerateIDs(r) : regenerateID(r)\n  ) as RuleGroupICArray;\n  return { id: `g-${generateID()}`, rules, not };\n};\n","import { produce } from 'immer';\nimport { defaultCombinators } from '../defaults';\nimport {\n  NameLabelPair,\n  OptionGroup,\n  RuleGroupTypeAny,\n  RuleType,\n  UpdateableProperties,\n  ValueSources,\n} from '../types';\nimport { getFirstOption } from './optGroupUtils';\nimport { findPath, getCommonAncestorPath, getParentPath, pathsAreEqual } from './pathUtils';\nimport { prepareRuleOrGroup } from './prepareQueryObjects';\nimport { regenerateID, regenerateIDs } from './regenerateIDs';\n\nexport const add = <RG extends RuleGroupTypeAny>(\n  query: RG,\n  ruleOrGroup: RG | RuleType,\n  parentPath: number[]\n) =>\n  produce(query, draft => {\n    const parent = findPath(parentPath, draft) as RG;\n    if (!('combinator' in parent) && parent.rules.length > 0) {\n      const prevCombinator = parent.rules[parent.rules.length - 2];\n      parent.rules.push(\n        (typeof prevCombinator === 'string' ? prevCombinator : defaultCombinators[0].name) as any\n      );\n    }\n    parent.rules.push(prepareRuleOrGroup(ruleOrGroup) as RuleType);\n  });\n\ninterface UpdateOptions {\n  resetOnFieldChange: boolean;\n  resetOnOperatorChange: boolean;\n  getRuleDefaultOperator: (field: string) => string;\n  getValueSources: (field: string, operator: string) => ValueSources;\n  getRuleDefaultValue: (rule: RuleType) => any;\n}\nexport const update = <RG extends RuleGroupTypeAny>(\n  query: RG,\n  prop: UpdateableProperties,\n  value: any,\n  path: number[],\n  {\n    resetOnFieldChange = true,\n    resetOnOperatorChange = false,\n    getRuleDefaultOperator = () => '=',\n    getValueSources = () => ['value'],\n    getRuleDefaultValue = () => '',\n  }: Partial<UpdateOptions> = {}\n) =>\n  produce(query, draft => {\n    if (prop === 'combinator' && !('combinator' in draft)) {\n      // Independent combinators\n      const parentRules = (findPath(getParentPath(path), draft) as RG).rules;\n      // Only update an independent combinator if it occupies an odd index\n      if (path[path.length - 1] % 2 === 1) {\n        parentRules[path[path.length - 1]] = value;\n      }\n      return;\n    } else {\n      const ruleOrGroup = findPath(path, draft)!;\n      const isGroup = 'rules' in ruleOrGroup;\n      // Only update if there is actually a change\n      if ((ruleOrGroup as any)[prop] !== value) {\n        // Handle valueSource updates later\n        if (prop !== 'valueSource') {\n          (ruleOrGroup as any)[prop] = value;\n        }\n        if (!isGroup) {\n          let resetValueSource = false;\n          let resetValue = false;\n\n          // Set default operator, valueSource, and value for field change\n          if (resetOnFieldChange && prop === 'field') {\n            ruleOrGroup.operator = getRuleDefaultOperator(value);\n            resetValueSource = true;\n            resetValue = true;\n          }\n\n          // Set default valueSource and value for operator change\n          if (resetOnOperatorChange && prop === 'operator') {\n            resetValueSource = true;\n            resetValue = true;\n          }\n\n          const defaultValueSource = getValueSources(ruleOrGroup.field, ruleOrGroup.operator)[0];\n          if (\n            (resetValueSource &&\n              ruleOrGroup.valueSource &&\n              defaultValueSource !== ruleOrGroup.valueSource) ||\n            (prop === 'valueSource' && value !== ruleOrGroup.valueSource)\n          ) {\n            // Only reset the value if we're changing the valueSource either\n            // 1) from `undefined` to something that is _not_ the default, or\n            // 2) from the current (defined) value to something else\n            resetValue =\n              !!ruleOrGroup.valueSource ||\n              (!ruleOrGroup.valueSource && value !== defaultValueSource);\n            ruleOrGroup.valueSource = resetValueSource ? defaultValueSource : value;\n          }\n\n          if (resetValue) {\n            // The default value should be a valid field name if defaultValueSource is 'field'\n            ruleOrGroup.value = getRuleDefaultValue(ruleOrGroup);\n          }\n        }\n      }\n    }\n  });\n\nexport const remove = <RG extends RuleGroupTypeAny>(query: RG, path: number[]) => {\n  if (path.length === 0 || (!('combinator' in query) && !findPath(path, query))) {\n    return query;\n  }\n  return produce(query, draft => {\n    const index = path[path.length - 1];\n    const parent = findPath(getParentPath(path), draft) as RG;\n    if (!('combinator' in parent) && parent.rules.length > 1) {\n      const idxStartDelete = index === 0 ? 0 : index - 1;\n      parent.rules.splice(idxStartDelete, 2);\n    } else {\n      parent.rules.splice(index, 1);\n    }\n  });\n};\n\ninterface MoveOptions {\n  clone: boolean;\n  combinators: NameLabelPair[] | OptionGroup[];\n}\nexport const move = <RG extends RuleGroupTypeAny>(\n  query: RG,\n  oldPath: number[],\n  newPath: number[],\n  { clone = false, combinators = defaultCombinators }: Partial<MoveOptions> = {}\n) => {\n  if (pathsAreEqual(oldPath, newPath)) {\n    return query;\n  }\n  const ruleOrGroupOriginal = findPath(oldPath, query);\n  if (!ruleOrGroupOriginal) {\n    return query;\n  }\n  const ruleOrGroup = clone\n    ? 'rules' in ruleOrGroupOriginal\n      ? regenerateIDs(ruleOrGroupOriginal)\n      : regenerateID(ruleOrGroupOriginal)\n    : ruleOrGroupOriginal;\n\n  const commonAncestorPath = getCommonAncestorPath(oldPath, newPath);\n  const movingOnUp = newPath[commonAncestorPath.length] <= oldPath[commonAncestorPath.length];\n\n  return produce(query, draft => {\n    const independentCombinators = !('combinator' in draft);\n    const parentOfRuleToRemove = findPath(getParentPath(oldPath), draft) as RG;\n    const ruleToRemoveIndex = oldPath[oldPath.length - 1];\n    const oldPrevCombinator =\n      independentCombinators && ruleToRemoveIndex > 0\n        ? (parentOfRuleToRemove.rules[ruleToRemoveIndex - 1] as string)\n        : null;\n    const oldNextCombinator =\n      independentCombinators && ruleToRemoveIndex < parentOfRuleToRemove.rules.length - 1\n        ? (parentOfRuleToRemove.rules[ruleToRemoveIndex + 1] as string)\n        : null;\n    if (!clone) {\n      const idxStartDelete = independentCombinators\n        ? Math.max(0, ruleToRemoveIndex - 1)\n        : ruleToRemoveIndex;\n      const deleteLength = independentCombinators ? 2 : 1;\n      // Remove the source item\n      parentOfRuleToRemove.rules.splice(idxStartDelete, deleteLength);\n    }\n\n    const newNewPath = [...newPath];\n    if (!movingOnUp && !clone) {\n      newNewPath[commonAncestorPath.length] -= independentCombinators ? 2 : 1;\n    }\n    const newNewParentPath = getParentPath(newNewPath);\n    const parentToInsertInto = findPath(newNewParentPath, draft) as RG;\n    const newIndex = newNewPath[newNewPath.length - 1];\n\n    // This function 1) glosses over the need for type assertions to splice directly\n    // into parentToInsertInto.rules, and 2) simplifies the actual insertion code.\n    const insertRuleOrGroup = (...args: any[]) =>\n      parentToInsertInto.rules.splice(newIndex, 0, ...args);\n\n    // Insert the source item at the target path\n    if (parentToInsertInto.rules.length === 0 || !independentCombinators) {\n      insertRuleOrGroup(ruleOrGroup);\n    } else {\n      if (newIndex === 0) {\n        if (ruleToRemoveIndex === 0 && oldNextCombinator) {\n          insertRuleOrGroup(ruleOrGroup, oldNextCombinator);\n        } else {\n          const newNextCombinator =\n            parentToInsertInto.rules[1] || oldPrevCombinator || getFirstOption(combinators);\n          insertRuleOrGroup(ruleOrGroup, newNextCombinator);\n        }\n      } else {\n        if (oldPrevCombinator) {\n          insertRuleOrGroup(oldPrevCombinator, ruleOrGroup);\n        } else {\n          const newPrevCombinator =\n            parentToInsertInto.rules[newIndex - 2] ||\n            oldNextCombinator ||\n            getFirstOption(combinators);\n          insertRuleOrGroup(newPrevCombinator, ruleOrGroup);\n        }\n      }\n    }\n  });\n};\n","import { useMemo, type ChangeEvent } from 'react';\nimport type { ValueSelectorProps } from '../types';\nimport { toOptions } from '../utils';\n\nexport const ValueSelector = ({\n  className,\n  handleOnChange,\n  options,\n  title,\n  value,\n  multiple,\n  disabled,\n  testID,\n}: ValueSelectorProps) => {\n  const onChange = useMemo(() => {\n    if (multiple) {\n      return (e: ChangeEvent<HTMLSelectElement>) =>\n        handleOnChange(\n          [...e.target.options]\n            .filter(o => o.selected)\n            .map(o => o.value)\n            .join(',')\n        );\n    }\n    return (e: ChangeEvent<HTMLSelectElement>) => handleOnChange(e.target.value);\n  }, [handleOnChange, multiple]);\n\n  return (\n    <select\n      data-testid={testID}\n      className={className}\n      value={multiple && value ? value.split(',') : value}\n      title={title}\n      disabled={disabled}\n      multiple={!!multiple}\n      onChange={onChange}>\n      {toOptions(options)}\n    </select>\n  );\n};\n\nValueSelector.displayName = 'ValueSelector';\n","import { useEffect } from 'react';\nimport type { ValueEditorProps } from '../types';\nimport { ValueSelector } from './ValueSelector';\n\nexport const ValueEditor = ({\n  operator,\n  value,\n  handleOnChange,\n  title,\n  className,\n  type,\n  inputType,\n  values,\n  fieldData,\n  disabled,\n  testID,\n  ...props\n}: ValueEditorProps) => {\n  // This side effect blanks out the value if 1) the inputType is \"number\",\n  // 2) the operator is not \"between\", \"notBetween\", \"in\", or \"notIn\", and\n  // 3) the value contains a comma.\n  useEffect(() => {\n    if (\n      inputType === 'number' &&\n      !['between', 'notBetween', 'in', 'notIn'].includes(operator) &&\n      typeof value === 'string' &&\n      value.includes(',')\n    ) {\n      handleOnChange('');\n    }\n  }, [handleOnChange, inputType, operator, value]);\n\n  if (operator === 'null' || operator === 'notNull') {\n    return null;\n  }\n\n  const placeHolderText = fieldData?.placeholder ?? '';\n  const inputTypeCoerced = ['between', 'notBetween', 'in', 'notIn'].includes(operator)\n    ? 'text'\n    : inputType || 'text';\n\n  switch (type) {\n    case 'select':\n    case 'multiselect':\n      return (\n        <ValueSelector\n          {...props}\n          testID={testID}\n          className={className}\n          title={title}\n          handleOnChange={handleOnChange}\n          disabled={disabled}\n          value={value}\n          options={values!}\n          multiple={type === 'multiselect'}\n        />\n      );\n\n    case 'textarea':\n      return (\n        <textarea\n          data-testid={testID}\n          placeholder={placeHolderText}\n          value={value}\n          title={title}\n          className={className}\n          disabled={disabled}\n          onChange={e => handleOnChange(e.target.value)}\n        />\n      );\n\n    case 'switch':\n    case 'checkbox':\n      return (\n        <input\n          data-testid={testID}\n          type=\"checkbox\"\n          className={className}\n          title={title}\n          onChange={e => handleOnChange(e.target.checked)}\n          checked={!!value}\n          disabled={disabled}\n        />\n      );\n\n    case 'radio':\n      return (\n        <span data-testid={testID} className={className} title={title}>\n          {values &&\n            values.map(v => (\n              <label key={v.name}>\n                <input\n                  type=\"radio\"\n                  value={v.name}\n                  disabled={disabled}\n                  checked={value === v.name}\n                  onChange={e => handleOnChange(e.target.value)}\n                />\n                {v.label}\n              </label>\n            ))}\n        </span>\n      );\n  }\n\n  return (\n    <input\n      data-testid={testID}\n      type={inputTypeCoerced}\n      placeholder={placeHolderText}\n      value={value}\n      title={title}\n      className={className}\n      disabled={disabled}\n      onChange={e => handleOnChange(e.target.value)}\n    />\n  );\n};\n\nValueEditor.displayName = 'ValueEditor';\n","import type { ActionProps } from '../types';\n\nexport const ActionElement = ({\n  className,\n  handleOnClick,\n  label,\n  title,\n  disabled,\n  disabledTranslation,\n  testID,\n}: ActionProps) => (\n  <button\n    type=\"button\"\n    data-testid={testID}\n    disabled={disabled && !disabledTranslation}\n    className={className}\n    title={disabledTranslation && disabled ? disabledTranslation.title : title}\n    onClick={e => handleOnClick(e)}>\n    {disabledTranslation && disabled ? disabledTranslation.label : label}\n  </button>\n);\n\nActionElement.displayName = 'ActionElement';\n","import type { NotToggleProps } from '../types';\n\nexport const NotToggle = ({\n  className,\n  handleOnChange,\n  title,\n  label,\n  checked,\n  disabled,\n  testID,\n}: NotToggleProps) => (\n  <label data-testid={testID} className={className} title={title}>\n    <input\n      type=\"checkbox\"\n      onChange={e => handleOnChange(e.target.checked)}\n      checked={!!checked}\n      disabled={disabled}\n    />\n    {label}\n  </label>\n);\n\nNotToggle.displayName = 'NotToggle';\n","import { forwardRef } from 'react';\nimport type { DragHandleProps } from '../types';\n\nexport const DragHandle = forwardRef<HTMLSpanElement, DragHandleProps>(\n  ({ className, label, title, testID }, dragRef) => (\n    <span data-testid={testID} ref={dragRef} className={className} title={title}>\n      {label}\n    </span>\n  )\n);\n\nDragHandle.displayName = 'DragHandle';\n","import { MouseEvent as ReactMouseEvent, useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { DNDType, standardClassnames, TestID } from './defaults';\nimport type { DraggedItem, Field, RuleProps, RuleType } from './types';\nimport {\n  c,\n  filterFieldsByComparator,\n  getParentPath,\n  getValidationClassNames,\n  isAncestor,\n  pathsAreEqual,\n} from './utils';\n\nexport const Rule = ({\n  id,\n  path,\n  field,\n  operator,\n  value,\n  translations,\n  schema,\n  disabled: disabledProp,\n  parentDisabled,\n  context,\n  valueSource,\n}: RuleProps) => {\n  const {\n    classNames,\n    controls,\n    fields,\n    fieldMap,\n    getInputType,\n    getOperators,\n    getValueEditorType,\n    getValueSources,\n    getValues,\n    moveRule,\n    onPropChange,\n    onRuleRemove,\n    autoSelectField,\n    showCloneButtons,\n    showLockButtons,\n    independentCombinators,\n    validationMap,\n  } = schema;\n  const disabled = !!parentDisabled || !!disabledProp;\n\n  const dndRef = useRef<HTMLDivElement>(null);\n  const dragRef = useRef<HTMLSpanElement>(null);\n  const [{ isDragging, dragMonitorId }, drag, preview] = useDrag(\n    () => ({\n      type: DNDType.rule,\n      item: (): DraggedItem => ({ path }),\n      canDrag: !disabled,\n      collect: monitor => ({\n        isDragging: !disabled && monitor.isDragging(),\n        dragMonitorId: monitor.getHandlerId(),\n      }),\n    }),\n    [disabled, path]\n  );\n  const [{ isOver, dropMonitorId }, drop] = useDrop(\n    () => ({\n      accept: [DNDType.rule, DNDType.ruleGroup],\n      canDrop: (item: DraggedItem) => {\n        if (disabled) return false;\n        const parentHoverPath = getParentPath(path);\n        const parentItemPath = getParentPath(item.path);\n        const hoverIndex = path[path.length - 1];\n        const itemIndex = item.path[item.path.length - 1];\n\n        // Don't allow drop if 1) item is ancestor of drop target,\n        // or 2) item is hovered over itself or the previous item\n        return !(\n          isAncestor(item.path, path) ||\n          (pathsAreEqual(parentHoverPath, parentItemPath) &&\n            (hoverIndex === itemIndex ||\n              hoverIndex === itemIndex - 1 ||\n              (independentCombinators && hoverIndex === itemIndex - 2)))\n        );\n      },\n      collect: monitor => ({\n        isOver: monitor.canDrop() && monitor.isOver(),\n        dropMonitorId: monitor.getHandlerId(),\n      }),\n      drop: (item: DraggedItem, _monitor) => {\n        const parentHoverPath = getParentPath(path);\n        const hoverIndex = path[path.length - 1];\n\n        moveRule(item.path, [...parentHoverPath, hoverIndex + 1]);\n      },\n    }),\n    [disabled, moveRule, path]\n  );\n  drag(dragRef);\n  preview(drop(dndRef));\n\n  const generateOnChangeHandler =\n    (prop: Exclude<keyof RuleType, 'id' | 'path'>) => (value: any) => {\n      if (!disabled) {\n        onPropChange(prop, value, path);\n      }\n    };\n\n  const cloneRule = (event: ReactMouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!disabled) {\n      const newPath = [...getParentPath(path), path[path.length - 1] + 1];\n      moveRule(path, newPath, true);\n    }\n  };\n\n  const toggleLockRule = (event: ReactMouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    onPropChange('disabled', !disabled, path);\n  };\n\n  const removeRule = (event: ReactMouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!disabled) {\n      onRuleRemove(path);\n    }\n  };\n\n  const fieldData = fieldMap?.[field] ?? ({} as Field);\n  const inputType = fieldData.inputType ?? getInputType(field, operator);\n  const operators = fieldData.operators ?? getOperators(field);\n  const valueSources =\n    typeof fieldData.valueSources === 'function'\n      ? fieldData.valueSources(operator)\n      : fieldData.valueSources ?? getValueSources(field, operator);\n  const valueEditorType =\n    valueSource === 'field'\n      ? 'select'\n      : (typeof fieldData.valueEditorType === 'function'\n          ? fieldData.valueEditorType(operator)\n          : fieldData.valueEditorType) ?? getValueEditorType(field, operator);\n  const values =\n    valueSource === 'field'\n      ? filterFieldsByComparator(fieldData, fields, operator)\n      : fieldData.values ?? getValues(field, operator);\n  const level = path.length;\n  const vsOptions = valueSources.map(vs => ({ name: vs, label: vs }));\n\n  const validationResult =\n    validationMap[id ?? /* istanbul ignore next */ ''] ??\n    (typeof fieldData.validator === 'function'\n      ? fieldData.validator({ id, field, operator, value })\n      : null);\n  const validationClassName = getValidationClassNames(validationResult);\n  const dndDragging = isDragging ? standardClassnames.dndDragging : '';\n  const dndOver = isOver ? standardClassnames.dndOver : '';\n  const outerClassName = c(\n    standardClassnames.rule,\n    classNames.rule,\n    disabled ? standardClassnames.disabled : '',\n    validationClassName,\n    dndDragging,\n    dndOver\n  );\n\n  return (\n    <div\n      ref={dndRef}\n      data-testid={TestID.rule}\n      data-dragmonitorid={dragMonitorId}\n      data-dropmonitorid={dropMonitorId}\n      className={outerClassName}\n      data-rule-id={id}\n      data-level={level}\n      data-path={JSON.stringify(path)}>\n      <controls.dragHandle\n        testID={TestID.dragHandle}\n        ref={dragRef}\n        level={level}\n        path={path}\n        title={translations.dragHandle.title}\n        label={translations.dragHandle.label}\n        className={c(standardClassnames.dragHandle, classNames.dragHandle)}\n        disabled={disabled}\n        context={context}\n        validation={validationResult}\n      />\n      <controls.fieldSelector\n        testID={TestID.fields}\n        options={fields}\n        title={translations.fields.title}\n        value={field}\n        operator={operator}\n        className={c(standardClassnames.fields, classNames.fields)}\n        handleOnChange={generateOnChangeHandler('field')}\n        level={level}\n        path={path}\n        disabled={disabled}\n        context={context}\n        validation={validationResult}\n      />\n      {(autoSelectField || fieldData.name !== '~') && (\n        <>\n          <controls.operatorSelector\n            testID={TestID.operators}\n            field={field}\n            fieldData={fieldData}\n            title={translations.operators.title}\n            options={operators}\n            value={operator}\n            className={c(standardClassnames.operators, classNames.operators)}\n            handleOnChange={generateOnChangeHandler('operator')}\n            level={level}\n            path={path}\n            disabled={disabled}\n            context={context}\n            validation={validationResult}\n          />\n          {!['null', 'notNull'].includes(operator) && valueSources.length > 1 && (\n            <controls.valueSourceSelector\n              testID={TestID.valueSourceSelector}\n              field={field}\n              fieldData={fieldData}\n              title={translations.valueSourceSelector.title}\n              options={vsOptions}\n              value={valueSource ?? 'value'}\n              className={c(standardClassnames.valueSource, classNames.valueSource)}\n              handleOnChange={generateOnChangeHandler('valueSource')}\n              level={level}\n              path={path}\n              disabled={disabled}\n              context={context}\n              validation={validationResult}\n            />\n          )}\n          <controls.valueEditor\n            testID={TestID.valueEditor}\n            field={field}\n            fieldData={fieldData}\n            title={translations.value.title}\n            operator={operator}\n            value={value}\n            valueSource={valueSource ?? 'value'}\n            type={valueEditorType}\n            inputType={inputType}\n            values={values}\n            className={c(standardClassnames.value, classNames.value)}\n            handleOnChange={generateOnChangeHandler('value')}\n            level={level}\n            path={path}\n            disabled={disabled}\n            context={context}\n            validation={validationResult}\n          />\n        </>\n      )}\n      {showCloneButtons && (\n        <controls.cloneRuleAction\n          testID={TestID.cloneRule}\n          label={translations.cloneRule.label}\n          title={translations.cloneRule.title}\n          className={c(standardClassnames.cloneRule, classNames.cloneRule)}\n          handleOnClick={cloneRule}\n          level={level}\n          path={path}\n          disabled={disabled}\n          context={context}\n          validation={validationResult}\n        />\n      )}\n      {showLockButtons && (\n        <controls.lockRuleAction\n          testID={TestID.lockRule}\n          label={translations.lockRule.label}\n          title={translations.lockRule.title}\n          className={c(standardClassnames.lockRule, classNames.lockRule)}\n          handleOnClick={toggleLockRule}\n          level={level}\n          path={path}\n          disabled={disabled}\n          disabledTranslation={parentDisabled ? undefined : translations.lockRuleDisabled}\n          context={context}\n          validation={validationResult}\n        />\n      )}\n      <controls.removeRuleAction\n        testID={TestID.removeRule}\n        label={translations.removeRule.label}\n        title={translations.removeRule.title}\n        className={c(standardClassnames.removeRule, classNames.removeRule)}\n        handleOnClick={removeRule}\n        level={level}\n        path={path}\n        disabled={disabled}\n        context={context}\n        validation={validationResult}\n      />\n    </div>\n  );\n};\n\nRule.displayName = 'Rule';\n","import { useDrop } from 'react-dnd';\nimport { DNDType, standardClassnames, TestID } from './defaults';\nimport { CombinatorSelectorProps, DraggedItem, Schema } from './types';\nimport { c, getParentPath, isAncestor, pathsAreEqual } from './utils';\n\ninterface InlineCombinatorProps extends CombinatorSelectorProps {\n  component: Schema['controls']['combinatorSelector'];\n  path: number[];\n  moveRule: Schema['moveRule'];\n  independentCombinators: boolean;\n}\n\nexport const InlineCombinator = ({\n  component: CombinatorSelectorComponent,\n  path,\n  moveRule,\n  independentCombinators,\n  ...props\n}: InlineCombinatorProps) => {\n  const [{ isOver, dropMonitorId }, drop] = useDrop(\n    () => ({\n      accept: [DNDType.rule, DNDType.ruleGroup],\n      canDrop: (item: DraggedItem) => {\n        const parentHoverPath = getParentPath(path);\n        const parentItemPath = getParentPath(item.path);\n        const hoverIndex = path[path.length - 1];\n        const itemIndex = item.path[item.path.length - 1];\n\n        // Don't allow drop if 1) item is ancestor of drop target,\n        // 2) item is hovered over itself (this should never happen since\n        // combinators don't have drag handles), or 3) combinators are\n        // independent and the drop target is just above the hovering item.\n        return !(\n          isAncestor(item.path, path) ||\n          pathsAreEqual(item.path, path) ||\n          (pathsAreEqual(parentHoverPath, parentItemPath) && hoverIndex - 1 === itemIndex) ||\n          (independentCombinators &&\n            pathsAreEqual(parentHoverPath, parentItemPath) &&\n            hoverIndex === itemIndex - 1)\n        );\n      },\n      collect: monitor => ({\n        isOver: monitor.canDrop() && monitor.isOver(),\n        dropMonitorId: monitor.getHandlerId(),\n      }),\n      drop: (item: DraggedItem, _monitor) => {\n        const parentPath = getParentPath(path);\n        const index = path[path.length - 1];\n        moveRule(item.path, [...parentPath, index]);\n      },\n    }),\n    [moveRule, path, independentCombinators]\n  );\n\n  const dndOver = isOver ? standardClassnames.dndOver : '';\n  const wrapperClassName = c(dndOver, standardClassnames.betweenRules);\n\n  return (\n    <div\n      ref={drop}\n      className={wrapperClassName}\n      data-dropmonitorid={dropMonitorId}\n      data-testid={TestID.inlineCombinator}>\n      <CombinatorSelectorComponent {...props} path={path} testID={TestID.combinators} />\n    </div>\n  );\n};\n\nInlineCombinator.displayName = 'InlineCombinator';\n","import { Fragment, MouseEvent as ReactMouseEvent, useRef } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { DNDType, standardClassnames, TestID } from './defaults';\nimport { InlineCombinator } from './InlineCombinator';\nimport type { DraggedItem, RuleGroupProps } from './types';\nimport { c, getParentPath, getValidationClassNames, isAncestor, pathsAreEqual } from './utils';\n\nexport const RuleGroup = ({\n  id,\n  path,\n  combinator = 'and',\n  rules,\n  translations,\n  schema,\n  disabled: disabledProp,\n  parentDisabled,\n  not,\n  context,\n}: RuleGroupProps) => {\n  const {\n    classNames,\n    combinators,\n    controls,\n    createRule,\n    createRuleGroup,\n    independentCombinators,\n    onGroupAdd,\n    onGroupRemove,\n    onPropChange,\n    onRuleAdd,\n    moveRule,\n    showCombinatorsBetweenRules,\n    showNotToggle,\n    showCloneButtons,\n    showLockButtons,\n    validationMap,\n    disabledPaths,\n  } = schema;\n  const disabled = !!parentDisabled || !!disabledProp;\n\n  const previewRef = useRef<HTMLDivElement>(null);\n  const dragRef = useRef<HTMLSpanElement>(null);\n  const dropRef = useRef<HTMLDivElement>(null);\n  const [{ isDragging, dragMonitorId }, drag, preview] = useDrag(\n    () => ({\n      type: DNDType.ruleGroup,\n      item: (): DraggedItem => ({ path }),\n      canDrag: !disabled,\n      collect: monitor => ({\n        isDragging: !disabled && monitor.isDragging(),\n        dragMonitorId: monitor.getHandlerId(),\n      }),\n    }),\n    [disabled, path]\n  );\n  const [{ isOver, dropMonitorId }, drop] = useDrop(\n    () => ({\n      accept: [DNDType.rule, DNDType.ruleGroup],\n      canDrop: (item: DraggedItem) => {\n        if (disabled) return false;\n        const parentItemPath = getParentPath(item.path);\n        const itemIndex = item.path[item.path.length - 1];\n        // Don't allow drop if 1) item is ancestor of drop target,\n        // 2) item is first child and is dropped on its own group header,\n        // or 3) the group is dropped on itself\n        return !(\n          isAncestor(item.path, path) ||\n          (pathsAreEqual(path, parentItemPath) && itemIndex === 0) ||\n          pathsAreEqual(path, item.path)\n        );\n      },\n      collect: monitor => ({\n        isOver: monitor.canDrop() && monitor.isOver(),\n        dropMonitorId: monitor.getHandlerId(),\n      }),\n      drop: (item: DraggedItem, _monitor) => !disabled && moveRule(item.path, [...path, 0]),\n    }),\n    [disabled, moveRule, path]\n  );\n  if (path.length > 0) {\n    drag(dragRef);\n    preview(previewRef);\n  }\n  drop(dropRef);\n\n  const onCombinatorChange = (value: any) => {\n    if (!disabled) {\n      onPropChange('combinator', value, path);\n    }\n  };\n\n  const onIndependentCombinatorChange = (value: any, index: number) => {\n    if (!disabled) {\n      onPropChange('combinator', value, path.concat([index]));\n    }\n  };\n\n  const onNotToggleChange = (checked: boolean) => {\n    if (!disabled) {\n      onPropChange('not', checked, path);\n    }\n  };\n\n  const addRule = (event: ReactMouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!disabled) {\n      const newRule = createRule();\n      onRuleAdd(newRule, path);\n    }\n  };\n\n  const addGroup = (event: ReactMouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!disabled) {\n      const newGroup = createRuleGroup();\n      onGroupAdd(newGroup, path);\n    }\n  };\n\n  const cloneGroup = (event: ReactMouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!disabled) {\n      const newPath = [...getParentPath(path), path[path.length - 1] + 1];\n      moveRule(path, newPath, true);\n    }\n  };\n\n  const toggleLockGroup = (event: ReactMouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    onPropChange('disabled', !disabled, path);\n  };\n\n  const removeGroup = (event: ReactMouseEvent) => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (!disabled) {\n      onGroupRemove(path);\n    }\n  };\n\n  const level = path.length;\n\n  const validationResult = validationMap[id ?? /* istanbul ignore next */ ''];\n  const validationClassName = getValidationClassNames(validationResult);\n  const dndDragging = isDragging ? standardClassnames.dndDragging : '';\n  const dndOver = isOver ? standardClassnames.dndOver : '';\n  const outerClassName = c(\n    standardClassnames.ruleGroup,\n    classNames.ruleGroup,\n    disabled ? standardClassnames.disabled : '',\n    validationClassName,\n    dndDragging\n  );\n\n  return (\n    <div\n      ref={previewRef}\n      className={outerClassName}\n      data-testid={TestID.ruleGroup}\n      data-dragmonitorid={dragMonitorId}\n      data-dropmonitorid={dropMonitorId}\n      data-rule-group-id={id}\n      data-level={level}\n      data-path={JSON.stringify(path)}>\n      <div ref={dropRef} className={c(standardClassnames.header, classNames.header, dndOver)}>\n        {level > 0 && (\n          <controls.dragHandle\n            testID={TestID.dragHandle}\n            ref={dragRef}\n            level={level}\n            path={path}\n            title={translations.dragHandle.title}\n            label={translations.dragHandle.label}\n            className={c(standardClassnames.dragHandle, classNames.dragHandle)}\n            disabled={disabled}\n            context={context}\n            validation={validationResult}\n          />\n        )}\n        {!showCombinatorsBetweenRules && !independentCombinators && (\n          <controls.combinatorSelector\n            testID={TestID.combinators}\n            options={combinators}\n            value={combinator}\n            title={translations.combinators.title}\n            className={c(standardClassnames.combinators, classNames.combinators)}\n            handleOnChange={onCombinatorChange}\n            rules={rules}\n            level={level}\n            path={path}\n            disabled={disabled}\n            context={context}\n            validation={validationResult}\n          />\n        )}\n        {showNotToggle && (\n          <controls.notToggle\n            testID={TestID.notToggle}\n            className={c(standardClassnames.notToggle, classNames.notToggle)}\n            title={translations.notToggle.title}\n            label={translations.notToggle.label}\n            checked={not}\n            handleOnChange={onNotToggleChange}\n            level={level}\n            disabled={disabled}\n            path={path}\n            context={context}\n            validation={validationResult}\n          />\n        )}\n        <controls.addRuleAction\n          testID={TestID.addRule}\n          label={translations.addRule.label}\n          title={translations.addRule.title}\n          className={c(standardClassnames.addRule, classNames.addRule)}\n          handleOnClick={addRule}\n          rules={rules}\n          level={level}\n          path={path}\n          disabled={disabled}\n          context={context}\n          validation={validationResult}\n        />\n        <controls.addGroupAction\n          testID={TestID.addGroup}\n          label={translations.addGroup.label}\n          title={translations.addGroup.title}\n          className={c(standardClassnames.addGroup, classNames.addGroup)}\n          handleOnClick={addGroup}\n          rules={rules}\n          level={level}\n          path={path}\n          disabled={disabled}\n          context={context}\n          validation={validationResult}\n        />\n        {showCloneButtons && path.length >= 1 && (\n          <controls.cloneGroupAction\n            testID={TestID.cloneGroup}\n            label={translations.cloneRuleGroup.label}\n            title={translations.cloneRuleGroup.title}\n            className={c(standardClassnames.cloneGroup, classNames.cloneGroup)}\n            handleOnClick={cloneGroup}\n            rules={rules}\n            level={level}\n            path={path}\n            disabled={disabled}\n            context={context}\n            validation={validationResult}\n          />\n        )}\n        {showLockButtons && (\n          <controls.lockGroupAction\n            testID={TestID.lockGroup}\n            label={translations.lockGroup.label}\n            title={translations.lockGroup.title}\n            className={c(standardClassnames.lockGroup, classNames.lockGroup)}\n            handleOnClick={toggleLockGroup}\n            rules={rules}\n            level={level}\n            path={path}\n            disabled={disabled}\n            disabledTranslation={parentDisabled ? undefined : translations.lockGroupDisabled}\n            context={context}\n            validation={validationResult}\n          />\n        )}\n        {path.length >= 1 && (\n          <controls.removeGroupAction\n            testID={TestID.removeGroup}\n            label={translations.removeGroup.label}\n            title={translations.removeGroup.title}\n            className={c(standardClassnames.removeGroup, classNames.removeGroup)}\n            handleOnClick={removeGroup}\n            rules={rules}\n            level={level}\n            path={path}\n            disabled={disabled}\n            context={context}\n            validation={validationResult}\n          />\n        )}\n      </div>\n      <div className={c(standardClassnames.body, classNames.body)}>\n        {rules.map((r, idx) => {\n          const thisPath = [...path, idx];\n          const thisPathDisabled =\n            disabled ||\n            (typeof r !== 'string' && r.disabled) ||\n            disabledPaths.some(p => pathsAreEqual(thisPath, p));\n          const key = thisPath.join('-');\n          return (\n            <Fragment key={key}>\n              {idx > 0 && !independentCombinators && showCombinatorsBetweenRules && (\n                <InlineCombinator\n                  options={combinators}\n                  value={combinator}\n                  title={translations.combinators.title}\n                  className={c(standardClassnames.combinators, classNames.combinators)}\n                  handleOnChange={onCombinatorChange}\n                  rules={rules}\n                  level={level}\n                  context={context}\n                  validation={validationResult}\n                  component={controls.combinatorSelector}\n                  moveRule={moveRule}\n                  path={thisPath}\n                  disabled={thisPathDisabled}\n                  independentCombinators={independentCombinators}\n                />\n              )}\n              {typeof r === 'string' ? (\n                <InlineCombinator\n                  options={combinators}\n                  value={r}\n                  title={translations.combinators.title}\n                  className={c(standardClassnames.combinators, classNames.combinators)}\n                  handleOnChange={val => onIndependentCombinatorChange(val, idx)}\n                  rules={rules}\n                  level={level}\n                  context={context}\n                  validation={validationResult}\n                  component={controls.combinatorSelector}\n                  moveRule={moveRule}\n                  path={thisPath}\n                  disabled={thisPathDisabled}\n                  independentCombinators={independentCombinators}\n                />\n              ) : 'rules' in r ? (\n                <controls.ruleGroup\n                  id={r.id}\n                  schema={schema}\n                  path={thisPath}\n                  combinator={'combinator' in r ? r.combinator : undefined}\n                  translations={translations}\n                  rules={r.rules}\n                  disabled={thisPathDisabled}\n                  parentDisabled={parentDisabled || disabled}\n                  not={!!r.not}\n                  context={context}\n                />\n              ) : (\n                <controls.rule\n                  id={r.id!}\n                  field={r.field}\n                  value={r.value}\n                  operator={r.operator}\n                  schema={schema}\n                  path={thisPath}\n                  disabled={thisPathDisabled}\n                  parentDisabled={parentDisabled || disabled}\n                  translations={translations}\n                  context={context}\n                  valueSource={r.valueSource}\n                />\n              )}\n            </Fragment>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nRuleGroup.displayName = 'RuleGroup';\n","import { ActionElement, DragHandle, NotToggle, ValueEditor, ValueSelector } from './controls';\nimport { Rule } from './Rule';\nimport { RuleGroup } from './RuleGroup';\nimport type {\n  Classnames,\n  Controls,\n  DefaultCombinator,\n  DefaultOperator,\n  TranslationsFull,\n} from './types';\n\nexport const defaultPlaceholderFieldLabel = '------';\nexport const defaultPlaceholderFieldGroupLabel = defaultPlaceholderFieldLabel;\n\nexport const defaultTranslations: TranslationsFull = {\n  fields: {\n    title: 'Fields',\n    placeholderLabel: defaultPlaceholderFieldLabel,\n    placeholderGroupLabel: defaultPlaceholderFieldGroupLabel,\n  },\n  operators: {\n    title: 'Operators',\n  },\n  value: {\n    title: 'Value',\n  },\n  removeRule: {\n    label: 'x',\n    title: 'Remove rule',\n  },\n  removeGroup: {\n    label: 'x',\n    title: 'Remove group',\n  },\n  addRule: {\n    label: '+Rule',\n    title: 'Add rule',\n  },\n  addGroup: {\n    label: '+Group',\n    title: 'Add group',\n  },\n  combinators: {\n    title: 'Combinators',\n  },\n  notToggle: {\n    label: 'Not',\n    title: 'Invert this group',\n  },\n  cloneRule: {\n    label: '⧉',\n    title: 'Clone rule',\n  },\n  cloneRuleGroup: {\n    label: '⧉',\n    title: 'Clone group',\n  },\n  dragHandle: {\n    label: '⁞⁞',\n    title: 'Drag handle',\n  },\n  lockRule: {\n    label: '🔓',\n    title: 'Lock rule',\n  },\n  lockGroup: {\n    label: '🔓',\n    title: 'Lock group',\n  },\n  lockRuleDisabled: {\n    label: '🔒',\n    title: 'Unlock rule',\n  },\n  lockGroupDisabled: {\n    label: '🔒',\n    title: 'Unlock group',\n  },\n  valueSourceSelector: {\n    title: 'Value source',\n  },\n};\n\nexport const defaultOperators: DefaultOperator[] = [\n  { name: '=', label: '=' },\n  { name: '!=', label: '!=' },\n  { name: '<', label: '<' },\n  { name: '>', label: '>' },\n  { name: '<=', label: '<=' },\n  { name: '>=', label: '>=' },\n  { name: 'contains', label: 'contains' },\n  { name: 'beginsWith', label: 'begins with' },\n  { name: 'endsWith', label: 'ends with' },\n  { name: 'doesNotContain', label: 'does not contain' },\n  { name: 'doesNotBeginWith', label: 'does not begin with' },\n  { name: 'doesNotEndWith', label: 'does not end with' },\n  { name: 'null', label: 'is null' },\n  { name: 'notNull', label: 'is not null' },\n  { name: 'in', label: 'in' },\n  { name: 'notIn', label: 'not in' },\n  { name: 'between', label: 'between' },\n  { name: 'notBetween', label: 'not between' },\n];\n\nexport const defaultCombinators: DefaultCombinator[] = [\n  { name: 'and', label: 'AND' },\n  { name: 'or', label: 'OR' },\n];\n\nexport const standardClassnames = {\n  queryBuilder: 'queryBuilder',\n  ruleGroup: 'ruleGroup',\n  header: 'ruleGroup-header',\n  body: 'ruleGroup-body',\n  combinators: 'ruleGroup-combinators',\n  addRule: 'ruleGroup-addRule',\n  addGroup: 'ruleGroup-addGroup',\n  cloneRule: 'rule-cloneRule',\n  cloneGroup: 'ruleGroup-cloneGroup',\n  removeGroup: 'ruleGroup-remove',\n  notToggle: 'ruleGroup-notToggle',\n  rule: 'rule',\n  fields: 'rule-fields',\n  operators: 'rule-operators',\n  value: 'rule-value',\n  removeRule: 'rule-remove',\n  betweenRules: 'betweenRules',\n  valid: 'queryBuilder-valid',\n  invalid: 'queryBuilder-invalid',\n  dndDragging: 'dndDragging',\n  dndOver: 'dndOver',\n  dragHandle: 'queryBuilder-dragHandle',\n  disabled: 'queryBuilder-disabled',\n  lockRule: 'rule-lock',\n  lockGroup: 'ruleGroup-lock',\n  valueSource: 'rule-valueSource',\n} as const;\n\nexport const defaultControlClassnames: Classnames = {\n  queryBuilder: '',\n  ruleGroup: '',\n  header: '',\n  body: '',\n  combinators: '',\n  addRule: '',\n  addGroup: '',\n  cloneRule: '',\n  cloneGroup: '',\n  removeGroup: '',\n  notToggle: '',\n  rule: '',\n  fields: '',\n  operators: '',\n  value: '',\n  removeRule: '',\n  dragHandle: '',\n  lockRule: '',\n  lockGroup: '',\n  valueSource: '',\n};\n\nexport const defaultControlElements: Controls = {\n  addGroupAction: ActionElement,\n  removeGroupAction: ActionElement,\n  cloneGroupAction: ActionElement,\n  cloneRuleAction: ActionElement,\n  addRuleAction: ActionElement,\n  removeRuleAction: ActionElement,\n  combinatorSelector: ValueSelector,\n  fieldSelector: ValueSelector,\n  operatorSelector: ValueSelector,\n  valueEditor: ValueEditor,\n  notToggle: NotToggle,\n  ruleGroup: RuleGroup,\n  rule: Rule,\n  dragHandle: DragHandle,\n  lockRuleAction: ActionElement,\n  lockGroupAction: ActionElement,\n  valueSourceSelector: ValueSelector,\n};\n\nexport const groupInvalidReasons = {\n  empty: 'empty',\n  invalidCombinator: 'invalid combinator',\n  invalidIndependentCombinators: 'invalid independent combinators',\n} as const;\n\nexport const DNDType = {\n  rule: 'rule',\n  ruleGroup: 'ruleGroup',\n} as const;\n\nexport const TestID = {\n  rule: 'rule',\n  ruleGroup: 'rule-group',\n  inlineCombinator: 'inline-combinator',\n  addGroup: 'add-group',\n  removeGroup: 'remove-group',\n  cloneGroup: 'clone-group',\n  cloneRule: 'clone-rule',\n  addRule: 'add-rule',\n  removeRule: 'remove-rule',\n  combinators: 'combinators',\n  fields: 'fields',\n  operators: 'operators',\n  valueEditor: 'value-editor',\n  notToggle: 'not-toggle',\n  dragHandle: 'drag-handle',\n  lockRule: 'lock-rule',\n  lockGroup: 'lock-group',\n  valueSourceSelector: 'value-source-selector',\n} as const;\n","import { enableES5 } from 'immer';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { DndContext, DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport {\n  defaultCombinators,\n  defaultControlClassnames,\n  defaultControlElements,\n  defaultOperators,\n  defaultTranslations,\n  standardClassnames,\n} from './defaults';\nimport {\n  Field,\n  QueryBuilderProps,\n  RuleGroupType,\n  RuleGroupTypeIC,\n  RuleType,\n  Schema,\n  Translations,\n  UpdateableProperties,\n  ValueSources,\n} from './types';\nimport {\n  add,\n  c,\n  filterFieldsByComparator,\n  generateID,\n  getFirstOption,\n  getValueSourcesUtil,\n  isOptionGroupArray,\n  isRuleGroup,\n  move,\n  pathIsDisabled,\n  prepareRuleGroup,\n  remove,\n  uniqByName,\n  uniqOptGroups,\n  update,\n} from './utils';\n\nenableES5();\n\nexport const QueryBuilderWithoutDndProvider = <RG extends RuleGroupType | RuleGroupTypeIC>({\n  debugMode = false,\n  defaultQuery,\n  query,\n  fields: fProp,\n  operators = defaultOperators,\n  combinators = defaultCombinators,\n  translations: translationsProp = defaultTranslations,\n  enableMountQueryChange = true,\n  controlElements,\n  getDefaultField,\n  getDefaultOperator,\n  getDefaultValue,\n  getOperators,\n  getValueEditorType,\n  getValueSources,\n  getInputType,\n  getValues,\n  onAddRule = r => r,\n  onAddGroup = rg => rg,\n  onQueryChange = () => {},\n  controlClassnames,\n  showCombinatorsBetweenRules = false,\n  showNotToggle = false,\n  showCloneButtons = false,\n  showLockButtons = false,\n  resetOnFieldChange = true,\n  resetOnOperatorChange = false,\n  autoSelectField = true,\n  addRuleToNewGroups = false,\n  enableDragAndDrop = false,\n  independentCombinators,\n  disabled = false,\n  validator,\n  context,\n}: QueryBuilderProps<RG>) => {\n  const translations = useMemo(() => {\n    const translationsTemp = defaultTranslations;\n    const translationsPropKeys = Object.keys(translationsProp) as (keyof Translations)[];\n    for (const t of translationsPropKeys) {\n      translationsTemp[t] = { ...defaultTranslations[t], ...translationsProp[t] } as any;\n    }\n    return translationsTemp;\n  }, [translationsProp]);\n\n  const defaultFields = useMemo(\n    (): Field[] => [{ id: '~', name: '~', label: translations.fields.placeholderLabel }],\n    [translations.fields.placeholderLabel]\n  );\n  const fieldsProp = fProp ?? defaultFields;\n\n  const fields = useMemo(() => {\n    let f = Array.isArray(fieldsProp)\n      ? fieldsProp\n      : Object.keys(fieldsProp)\n          .map(fld => ({ ...fieldsProp[fld], name: fld }))\n          .sort((a, b) => a.label.localeCompare(b.label));\n    if (!autoSelectField) {\n      if (isOptionGroupArray(f)) {\n        f = [{ label: translations.fields.placeholderGroupLabel, options: defaultFields }, ...f];\n      } else {\n        f = [...defaultFields, ...f];\n      }\n    }\n    return isOptionGroupArray(f) ? uniqOptGroups(f) : uniqByName(f);\n  }, [autoSelectField, defaultFields, fieldsProp, translations.fields.placeholderGroupLabel]);\n\n  const fieldMap = useMemo(() => {\n    if (!Array.isArray(fieldsProp)) return fieldsProp;\n    const fm: Record<string, Field> = {};\n    if (isOptionGroupArray(fields)) {\n      fields.forEach(f => f.options.forEach(opt => (fm[opt.name] = opt)));\n    } else {\n      fields.forEach(f => (fm[f.name] = f));\n    }\n    return fm;\n  }, [fields, fieldsProp]);\n\n  const queryDisabled = useMemo(\n    () => disabled === true || (Array.isArray(disabled) && disabled.some(p => p.length === 0)),\n    [disabled]\n  );\n  const disabledPaths = useMemo(() => (Array.isArray(disabled) && disabled) || [], [disabled]);\n\n  const getOperatorsMain = useCallback(\n    (field: string) => {\n      const fieldData = fieldMap[field];\n      if (fieldData?.operators) {\n        return fieldData.operators;\n      }\n      if (getOperators) {\n        const ops = getOperators(field);\n        if (ops) return ops;\n      }\n\n      return operators;\n    },\n    [fieldMap, getOperators, operators]\n  );\n\n  const getRuleDefaultOperator = useCallback(\n    (field: string) => {\n      const fieldData = fieldMap[field];\n      if (fieldData?.defaultOperator) {\n        return fieldData.defaultOperator;\n      }\n\n      if (getDefaultOperator) {\n        if (typeof getDefaultOperator === 'function') {\n          return getDefaultOperator(field);\n        } else {\n          return getDefaultOperator;\n        }\n      }\n\n      const operators = getOperatorsMain(field) ?? /* istanbul ignore next */ [];\n      return operators.length\n        ? getFirstOption(operators) ?? /* istanbul ignore next */ ''\n        : /* istanbul ignore next */ '';\n    },\n    [fieldMap, getDefaultOperator, getOperatorsMain]\n  );\n\n  const getValueEditorTypeMain = useCallback(\n    (field: string, operator: string) => {\n      if (getValueEditorType) {\n        const vet = getValueEditorType(field, operator);\n        if (vet) return vet;\n      }\n\n      return 'text';\n    },\n    [getValueEditorType]\n  );\n\n  const getValueSourcesMain = useCallback(\n    (field: string, operator: string): ValueSources =>\n      getValueSourcesUtil(fieldMap[field], operator, getValueSources),\n    [fieldMap, getValueSources]\n  );\n\n  const getValuesMain = useCallback(\n    (field: string, operator: string) => {\n      const fieldData = fieldMap[field];\n      // Ignore this in tests because Rule already checks for\n      // the presence of the values property in fieldData.\n      /* istanbul ignore if */\n      if (fieldData?.values) {\n        return fieldData.values;\n      }\n      if (getValues) {\n        const vals = getValues(field, operator);\n        if (vals) return vals;\n      }\n\n      return [];\n    },\n    [fieldMap, getValues]\n  );\n\n  const getRuleDefaultValue = useCallback(\n    (rule: RuleType) => {\n      const fieldData = fieldMap[rule.field];\n      if (fieldData?.defaultValue !== undefined && fieldData.defaultValue !== null) {\n        return fieldData.defaultValue;\n      } else if (getDefaultValue) {\n        return getDefaultValue(rule);\n      }\n\n      let value: any = '';\n\n      const values = getValuesMain(rule.field, rule.operator);\n\n      if (rule.valueSource === 'field') {\n        const filteredFields = filterFieldsByComparator(fieldData, fields, rule.operator);\n        if (filteredFields.length > 0) {\n          value = getFirstOption(filteredFields);\n        } else {\n          value = '';\n        }\n      } else if (values.length) {\n        value = getFirstOption(values);\n      } else {\n        const editorType = getValueEditorTypeMain(rule.field, rule.operator);\n\n        if (editorType === 'checkbox') {\n          value = false;\n        }\n      }\n\n      return value;\n    },\n    [fieldMap, fields, getDefaultValue, getValueEditorTypeMain, getValuesMain]\n  );\n\n  const getInputTypeMain = useCallback(\n    (field: string, operator: string) => {\n      if (getInputType) {\n        const inputType = getInputType(field, operator);\n        if (inputType) return inputType;\n      }\n\n      return 'text';\n    },\n    [getInputType]\n  );\n\n  const createRule = useCallback((): RuleType => {\n    let field = '';\n    /* istanbul ignore else */\n    if (fields?.length > 0 && fields[0]) {\n      field = getFirstOption(fields) ?? /* istanbul ignore next */ '';\n    }\n    if (getDefaultField) {\n      if (typeof getDefaultField === 'function') {\n        field = getDefaultField(fields);\n      } else {\n        field = getDefaultField;\n      }\n    }\n\n    const operator = getRuleDefaultOperator(field);\n\n    const valueSource = getValueSourcesMain(field, operator)[0] ?? 'value';\n\n    const newRule: RuleType = {\n      id: `r-${generateID()}`,\n      field,\n      operator,\n      valueSource,\n      value: '',\n    };\n\n    const value = getRuleDefaultValue(newRule);\n\n    return { ...newRule, value };\n  }, [fields, getDefaultField, getRuleDefaultOperator, getRuleDefaultValue, getValueSourcesMain]);\n\n  const createRuleGroup = useCallback((): RG => {\n    if (independentCombinators) {\n      return {\n        id: `g-${generateID()}`,\n        rules: addRuleToNewGroups ? [createRule()] : [],\n        not: false,\n      } as any;\n    }\n    return {\n      id: `g-${generateID()}`,\n      rules: addRuleToNewGroups ? [createRule()] : [],\n      combinator: getFirstOption(combinators) ?? /* istanbul ignore next */ '',\n      not: false,\n    } as any;\n  }, [addRuleToNewGroups, combinators, createRule, independentCombinators]);\n\n  const isFirstRender = useRef(true);\n  const [queryState, setQueryState] = useState(defaultQuery ?? createRuleGroup());\n  // We assume here that if a query is passed in, and it's not the first render,\n  // that the query has already been prepared, i.e. the user is just passing back\n  // the onQueryChange callback parameter as query. This appears to have a huge\n  // performance impact.\n  const root: RG = query ? (isFirstRender.current ? prepareRuleGroup(query) : query) : queryState;\n  isFirstRender.current = false;\n\n  // Notify a query change on mount\n  useEffect(() => {\n    if (enableMountQueryChange) {\n      onQueryChange(root);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /**\n   * Executes the `onQueryChange` function if provided,\n   * and sets the state for uncontrolled components\n   */\n  const dispatch = useCallback(\n    (newQuery: RG) => {\n      // State variable only used when component is uncontrolled\n      if (!query) {\n        setQueryState(newQuery);\n      }\n      onQueryChange(newQuery);\n    },\n    [onQueryChange, query]\n  );\n\n  const onRuleAdd = (rule: RuleType, parentPath: number[]) => {\n    if (pathIsDisabled(parentPath, root) || queryDisabled) return;\n    const newRule = onAddRule(rule, parentPath, root);\n    if (!newRule) return;\n    const newQuery = add(root, newRule, parentPath);\n    dispatch(newQuery);\n  };\n\n  const onGroupAdd = (group: RG, parentPath: number[]) => {\n    if (pathIsDisabled(parentPath, root) || queryDisabled) return;\n    const newGroup = onAddGroup(group, parentPath, root);\n    if (!newGroup) return;\n    const newQuery = add(root, newGroup, parentPath);\n    dispatch(newQuery);\n  };\n\n  const onPropChange = (prop: UpdateableProperties, value: any, path: number[]) => {\n    if ((pathIsDisabled(path, root) && prop !== 'disabled') || queryDisabled) return;\n    const newQuery = update(root, prop, value, path, {\n      resetOnFieldChange,\n      resetOnOperatorChange,\n      getRuleDefaultOperator,\n      getValueSources: getValueSourcesMain,\n      getRuleDefaultValue,\n    });\n    dispatch(newQuery);\n  };\n\n  const onRuleOrGroupRemove = (path: number[]) => {\n    if (pathIsDisabled(path, root) || queryDisabled) return;\n    const newQuery = remove(root, path);\n    dispatch(newQuery);\n  };\n\n  const moveRule = (oldPath: number[], newPath: number[], clone?: boolean) => {\n    if (pathIsDisabled(oldPath, root) || pathIsDisabled(newPath, root) || queryDisabled) return;\n    const newQuery = move(root, oldPath, newPath, { clone, combinators });\n    dispatch(newQuery);\n  };\n\n  const validationResult = useMemo(\n    () => (typeof validator === 'function' ? validator(root) : {}),\n    [root, validator]\n  );\n  const validationMap = useMemo(\n    () => (typeof validationResult === 'object' ? validationResult : {}),\n    [validationResult]\n  );\n\n  const classNames = useMemo(\n    () => ({ ...defaultControlClassnames, ...controlClassnames }),\n    [controlClassnames]\n  );\n\n  const controls = useMemo(\n    () => ({ ...defaultControlElements, ...controlElements }),\n    [controlElements]\n  );\n\n  const schema: Schema = {\n    fields,\n    fieldMap,\n    combinators,\n    classNames,\n    createRule,\n    createRuleGroup,\n    onRuleAdd,\n    onGroupAdd,\n    onRuleRemove: onRuleOrGroupRemove,\n    onGroupRemove: onRuleOrGroupRemove,\n    onPropChange,\n    isRuleGroup,\n    controls,\n    getOperators: getOperatorsMain,\n    getValueEditorType: getValueEditorTypeMain,\n    getValueSources: getValueSourcesMain,\n    getInputType: getInputTypeMain,\n    getValues: getValuesMain,\n    moveRule,\n    showCombinatorsBetweenRules,\n    showNotToggle,\n    showCloneButtons,\n    showLockButtons,\n    autoSelectField,\n    addRuleToNewGroups,\n    enableDragAndDrop,\n    independentCombinators: !!independentCombinators,\n    validationMap,\n    disabledPaths,\n  };\n\n  const wrapperClassName = useMemo(\n    () =>\n      c(\n        standardClassnames.queryBuilder,\n        classNames.queryBuilder,\n        root.disabled || queryDisabled ? standardClassnames.disabled : '',\n        typeof validationResult === 'boolean'\n          ? validationResult\n            ? standardClassnames.valid\n            : standardClassnames.invalid\n          : ''\n      ),\n    [classNames.queryBuilder, queryDisabled, root.disabled, validationResult]\n  );\n\n  if (debugMode) {\n    // TODO: log relevant information\n  }\n\n  return (\n    <DndContext.Consumer>\n      {() => (\n        <div\n          className={wrapperClassName}\n          data-dnd={enableDragAndDrop ? 'enabled' : 'disabled'}\n          data-inlinecombinators={\n            independentCombinators || showCombinatorsBetweenRules ? 'enabled' : 'disabled'\n          }>\n          <controls.ruleGroup\n            translations={translations}\n            rules={root.rules}\n            combinator={'combinator' in root ? root.combinator : undefined}\n            schema={schema}\n            id={root.id}\n            path={[]}\n            not={!!root.not}\n            disabled={!!root.disabled || queryDisabled}\n            parentDisabled={queryDisabled}\n            context={context}\n          />\n        </div>\n      )}\n    </DndContext.Consumer>\n  );\n};\n\nQueryBuilderWithoutDndProvider.displayName = 'QueryBuilderWithoutDndProvider';\n\nexport const QueryBuilder = <RG extends RuleGroupType | RuleGroupTypeIC>({\n  debugMode = false,\n  ...props\n}: QueryBuilderProps<RG>) => (\n  <DndProvider backend={HTML5Backend} debugMode={debugMode}>\n    {/* TODO: Should/can the `RG` generic be used here? Would it make a difference? */}\n    <QueryBuilderWithoutDndProvider {...(props as QueryBuilderProps)} debugMode={debugMode} />\n  </DndProvider>\n);\n\nQueryBuilder.displayName = 'QueryBuilder';\n","// Adapted from https://en.wikipedia.org/wiki/List_of_musical_instruments\nimport type { OptionGroup } from '../src';\n\nexport const musicalInstruments: OptionGroup[] = [\n  {\n    label: 'Percussion instruments',\n    instruments: [\n      'Clapstick',\n      'Cowbell',\n      'Cymbal',\n      'Gong',\n      'Maraca',\n      'Marimba',\n      'Spoon',\n      'Steelpan',\n      'Tambourine',\n      'Triangle',\n      'Vibraphone',\n      'Washboard',\n      'Wood block',\n      'Wooden fish',\n      'Xylophone',\n    ],\n  },\n  {\n    label: 'Membranophones',\n    instruments: [\n      'Barrel drum',\n      'Bass drum',\n      'Bongo drums',\n      'Conga',\n      'Drum',\n      'Drum kit',\n      \"Jew's harp\",\n      'Octaban',\n      'Samphor',\n      'Snare drum',\n      'Timpani',\n      'Tom-tom',\n    ],\n  },\n  {\n    label: 'Wind instruments',\n    instruments: [\n      'Accordion',\n      'Air horn',\n      'Bagpipe',\n      'Baritone horn',\n      'Bassoon',\n      'Bazooka',\n      'Beatboxing',\n      'Blown bottle',\n      'Bugle',\n      'Clarinet',\n      'Conch',\n      'Cornet',\n      'Didgeridoo',\n      'Double bell euphonium',\n      'Doulophone',\n      'English horn',\n      'Euphonium',\n      'Flugelhorn',\n      'Flute',\n      'French horn',\n      'Harmonica',\n      'Irish flute',\n      'Jug',\n      'Kazoo',\n      'Melodeon',\n      'Mezzo-soprano',\n      'Oboe',\n      'Ocarina',\n      'Pan flute',\n      'Piccolo',\n      'Pipe organ',\n      'Recorder',\n      'Saxophone',\n      'Slide whistle',\n      'Sousaphone',\n      'Trombone',\n      'Trumpet',\n      'Tuba',\n      'Whistle',\n    ],\n  },\n  {\n    label: 'Stringed instruments',\n    instruments: [\n      'Aeolian harp',\n      'Bandolin',\n      'Banjo ukulele',\n      'Cello',\n      'Chapman stick',\n      'Clavichord',\n      'Clavinet',\n      'Double bass',\n      'Dulcimer',\n      'Fiddle',\n      'Guitar',\n      'Hammered dulcimer',\n      'Harp',\n      'Harpsichord',\n      'Lute',\n      'Lyre',\n      'Maguhu',\n      'Mandola',\n      'Mandolin',\n      'Octobass',\n      'Piano',\n      'Sitar',\n      'Ukulele',\n      'Viol',\n      'Violin',\n      'Washtub bass',\n    ],\n  },\n  {\n    label: 'Electronic instruments',\n    instruments: [\n      'AlphaSphere',\n      'Audiocubes',\n      'Bass pedals',\n      'Continuum Fingerboard',\n      'Croix Sonore',\n      \"Denis d'or\",\n      'Dubreq stylophone',\n      'Drum machine',\n      'Eigenharp',\n      'Electric guitar',\n      'Electronic keyboard',\n      'Electronic organ',\n      'EWI',\n      'Fingerboard synthesizer',\n      'Hammond organ',\n      'Keyboard',\n      'Keytar',\n      'Kraakdoos',\n      'Laser harp',\n      'Mellotron',\n      'MIDI keyboard',\n      'Omnichord',\n      'Ondes Martenot',\n      'Otamatone',\n      'Sampler',\n      'Seaboard music instrument',\n      'Skoog',\n      'Synclavier',\n      'Synthesizer',\n      'Teleharmonium',\n      'Tenori-on',\n      'Theremin',\n      'trautonium',\n      'Turntablism',\n      'Turntable',\n    ],\n  },\n].map(({ label, instruments }) => ({\n  label,\n  options: instruments.map(s => ({ name: s, label: s })),\n}));\n","import {\n  convertToIC,\n  generateID,\n  type ExportFormat,\n  type Field,\n  type RuleGroupType,\n  type RuleType,\n} from '../src';\nimport { musicalInstruments } from './musicalInstruments';\nimport type { DemoOption, DemoOptions } from './types';\n\nexport const validator = (r: RuleType) => !!r.value;\n\nexport const defaultOptions: DemoOptions = {\n  showCombinatorsBetweenRules: false,\n  showNotToggle: false,\n  showCloneButtons: false,\n  showLockButtons: false,\n  resetOnFieldChange: true,\n  resetOnOperatorChange: false,\n  autoSelectField: true,\n  addRuleToNewGroups: false,\n  validateQuery: false,\n  independentCombinators: false,\n  enableDragAndDrop: false,\n  disabled: false,\n  debugMode: false,\n  parseNumbers: false,\n};\n\nexport const optionOrder: DemoOption[] = [\n  'showCombinatorsBetweenRules',\n  'showNotToggle',\n  'showCloneButtons',\n  'showLockButtons',\n  'resetOnFieldChange',\n  'resetOnOperatorChange',\n  'autoSelectField',\n  'addRuleToNewGroups',\n  'validateQuery',\n  'independentCombinators',\n  'enableDragAndDrop',\n  'disabled',\n  'debugMode',\n  'parseNumbers',\n];\n\nexport const optionsMetadata: Record<\n  DemoOption,\n  {\n    link: string;\n    label: string;\n    title: string;\n  }\n> = {\n  showCombinatorsBetweenRules: {\n    link: '/docs/api/querybuilder#showcombinatorsbetweenrules',\n    label: 'Combinators between rules',\n    title: 'Display combinator (and/or) selectors between rules instead of in the group header',\n  },\n  showNotToggle: {\n    link: '/docs/api/querybuilder#shownottoggle',\n    label: 'Show \"not\" toggle',\n    title: `Display a checkbox to invert a group's rules (labelled \"Not\" by default)`,\n  },\n  showCloneButtons: {\n    link: '/docs/api/querybuilder#showclonebuttons',\n    label: 'Show clone buttons',\n    title: 'Display buttons to clone rules and groups',\n  },\n  resetOnFieldChange: {\n    link: '/docs/api/querybuilder#resetonfieldchange',\n    label: 'Reset on field change',\n    title: `Operator and value will be reset when a rule's field selection changes`,\n  },\n  resetOnOperatorChange: {\n    link: '/docs/api/querybuilder#resetonoperatorchange',\n    label: 'Reset on operator change',\n    title: 'The value will reset when the operator changes',\n  },\n  autoSelectField: {\n    link: '/docs/api/querybuilder#autoselectfield',\n    label: 'Auto-select field',\n    title: 'The default field will be automatically selected for new rules',\n  },\n  addRuleToNewGroups: {\n    link: '/docs/api/querybuilder#addruletonewgroups',\n    label: 'Add rule to new groups',\n    title: 'A rule will be automatically added to new groups',\n  },\n  validateQuery: {\n    link: '/docs/api/validation',\n    label: 'Use validation',\n    title:\n      'The validator function(s) will be used to put a purple outline around empty text fields and bold the \"+Rule\" button for empty groups',\n  },\n  independentCombinators: {\n    link: '/docs/api/querybuilder#independentcombinators',\n    label: 'Independent combinators',\n    title: 'Combinators between rules can be independently updated',\n  },\n  enableDragAndDrop: {\n    link: '/docs/api/querybuilder#enabledraganddrop',\n    label: 'Enable drag-and-drop',\n    title: 'Rules and groups can be reordered and dragged to different groups',\n  },\n  disabled: {\n    link: '/docs/api/querybuilder#disabled',\n    label: 'Disabled',\n    title: 'Disable all components within the query builder',\n  },\n  showLockButtons: {\n    link: '/docs/api/querybuilder#showlockbuttons',\n    label: 'Show lock buttons',\n    title: 'Display buttons to lock/disable rules and groups',\n  },\n  debugMode: {\n    link: '/docs/api/querybuilder#debugMode',\n    label: 'Debug mode',\n    title: 'Enable debug logging for QueryBuilder and React DnD',\n  },\n  parseNumbers: {\n    link: '/docs/api/export#parsing-numbers',\n    label: 'Parse numbers',\n    title: 'Parse real numbers from strings in rule values',\n  },\n};\n\nexport const fields: Field[] = [\n  {\n    name: 'firstName',\n    label: 'First Name',\n    placeholder: 'Enter first name',\n    validator,\n  },\n  {\n    name: 'lastName',\n    label: 'Last Name',\n    placeholder: 'Enter last name',\n    defaultOperator: 'beginsWith',\n    validator,\n  },\n  { name: 'age', label: 'Age', inputType: 'number', validator },\n  {\n    name: 'isMusician',\n    label: 'Is a musician',\n    valueEditorType: 'checkbox',\n    operators: [{ name: '=', label: 'is' }],\n    defaultValue: false,\n  },\n  {\n    name: 'instrument',\n    label: 'Instrument',\n    valueEditorType: 'select',\n    values: musicalInstruments,\n    defaultValue: 'Piano',\n    operators: [{ name: '=', label: 'is' }],\n  },\n  {\n    name: 'gender',\n    label: 'Gender',\n    operators: [{ name: '=', label: 'is' }],\n    valueEditorType: 'radio',\n    values: [\n      { name: 'M', label: 'Male' },\n      { name: 'F', label: 'Female' },\n      { name: 'O', label: 'Other' },\n    ],\n  },\n  { name: 'height', label: 'Height', validator },\n  { name: 'job', label: 'Job', validator },\n  { name: 'description', label: 'Description', valueEditorType: 'textarea' },\n  { name: 'birthdate', label: 'Birth Date', inputType: 'date' },\n  { name: 'datetime', label: 'Show Time', inputType: 'datetime-local' },\n  { name: 'alarm', label: 'Daily Alarm', inputType: 'time' },\n  {\n    name: 'groupedField1',\n    label: 'Grouped Field 1',\n    comparator: 'group',\n    group: 'group1',\n    valueSources: ['field', 'value'],\n  },\n  {\n    name: 'groupedField2',\n    label: 'Grouped Field 2',\n    comparator: 'group',\n    group: 'group1',\n    valueSources: ['field', 'value'],\n  },\n  {\n    name: 'groupedField3',\n    label: 'Grouped Field 3',\n    comparator: 'group',\n    group: 'group1',\n    valueSources: ['field', 'value'],\n  },\n  {\n    name: 'groupedField4',\n    label: 'Grouped Field 4',\n    comparator: 'group',\n    group: 'group1',\n    valueSources: ['field', 'value'],\n  },\n];\n\nexport const initialQuery: RuleGroupType = {\n  id: generateID(),\n  combinator: 'and',\n  not: false,\n  rules: [\n    {\n      id: generateID(),\n      field: 'firstName',\n      value: 'Stev',\n      operator: 'beginsWith',\n    },\n    {\n      id: generateID(),\n      field: 'lastName',\n      value: 'Vai, Vaughan',\n      operator: 'in',\n    },\n    {\n      id: generateID(),\n      field: 'age',\n      operator: '>',\n      value: '28',\n    },\n    {\n      id: generateID(),\n      combinator: 'or',\n      rules: [\n        {\n          id: generateID(),\n          field: 'isMusician',\n          operator: '=',\n          value: true,\n        },\n        {\n          id: generateID(),\n          field: 'instrument',\n          operator: '=',\n          value: 'Guitar',\n        },\n      ],\n    },\n    { field: 'groupedField1', operator: '=', value: 'groupedField4', valueSource: 'field' },\n  ],\n};\n\nexport const initialQueryIC = convertToIC(initialQuery);\n\nexport const formatMap: [ExportFormat, string][] = [\n  ['sql', 'SQL'],\n  ['parameterized', 'SQL (parameterized)'],\n  ['parameterized_named', 'SQL (named parameters)'],\n  ['json_without_ids', 'JSON (no identifiers)'],\n  ['json', 'JSON'],\n  ['mongodb', 'MongoDB'],\n  ['cel', 'Common Expression Language (CEL)'],\n];\n","import { formatQuery, type FormatQueryOptions, type RuleGroupTypeAny } from '../src';\nimport { defaultOptions, optionOrder } from './constants';\nimport type { DemoOption, DemoOptions } from './types';\n\ntype OptionsAction =\n  | { type: 'all' }\n  | { type: 'reset' }\n  | {\n      type: 'update';\n      payload: {\n        optionName: DemoOption;\n        value: boolean;\n      };\n    }\n  | {\n      type: 'replace';\n      payload: DemoOptions;\n    };\n\nexport const optionsReducer = (state: DemoOptions, action: OptionsAction): DemoOptions => {\n  if (action.type === 'reset') {\n    return defaultOptions;\n  } else if (action.type === 'all') {\n    const allSelected: DemoOptions = { ...defaultOptions };\n    for (const opt of optionOrder) {\n      allSelected[opt] = opt !== 'disabled';\n    }\n    return allSelected;\n  } else if (action.type === 'replace') {\n    return action.payload;\n  }\n  const { optionName, value } = action.payload;\n  return { ...state, [optionName]: value };\n};\n\nexport const getFormatQueryString = (query: RuleGroupTypeAny, options: FormatQueryOptions) => {\n  const formatQueryResult = formatQuery(query, options);\n  if (options.format === 'json_without_ids' || options.format === 'mongodb') {\n    return JSON.stringify(JSON.parse(formatQueryResult), null, 2);\n  } else if (options.format === 'parameterized' || options.format === 'parameterized_named') {\n    return JSON.stringify(formatQueryResult, null, 2);\n  }\n  return formatQueryResult;\n};\n","export type StyleName = 'default' | 'bootstrap' | 'antd' | 'material' | 'chakra' | 'bulma';\n\nexport const npmLink = 'https://www.npmjs.com/package/react-querybuilder';\nexport const docsLink = 'https://react-querybuilder.js.org';\n\nexport const styleNameMap: Record<StyleName, string> = {\n  default: 'Default',\n  bootstrap: 'Bootstrap',\n  material: 'MUI/Material',\n  antd: 'Ant Design',\n  chakra: 'Chakra UI',\n  bulma: 'Bulma',\n};\n"],"names":["isOptionGroupArray","arr","Array","isArray","length","toOptions","map","og","_jsx","label","options","opt","name","getFirstOption","produce","ValueSelector","className","handleOnChange","title","value","multiple","disabled","testID","onChange","useMemo","e","target","filter","o","selected","join","split","displayName","ValueEditor","operator","type","inputType","values","fieldData","props","useEffect","includes","placeHolderText","placeholder","inputTypeCoerced","checked","v","ActionElement","handleOnClick","disabledTranslation","NotToggle","DragHandle","forwardRef","dragRef","Rule","id","path","field","translations","schema","disabledProp","parentDisabled","context","valueSource","classNames","controls","fields","fieldMap","getInputType","getOperators","getValueEditorType","getValueSources","getValues","moveRule","onPropChange","onRuleRemove","autoSelectField","showCloneButtons","showLockButtons","independentCombinators","validationMap","dndRef","useRef","isDragging","dragMonitorId","drag","preview","useDrag","DNDType","rule","item","canDrag","collect","monitor","getHandlerId","isOver","dropMonitorId","drop","useDrop","accept","ruleGroup","canDrop","parentHoverPath","getParentPath","parentItemPath","hoverIndex","itemIndex","pathsAreEqual","_monitor","generateOnChangeHandler","prop","cloneRule","event","preventDefault","stopPropagation","newPath","toggleLockRule","removeRule","operators","valueSources","valueEditorType","filterFieldsByComparator","level","vsOptions","vs","validationResult","validator","validationClassName","getValidationClassNames","dndDragging","standardClassnames","dndOver","outerClassName","c","TestID","JSON","stringify","dragHandle","_Fragment","valueSourceSelector","valueEditor","lockRule","undefined","lockRuleDisabled","InlineCombinator","component","CombinatorSelectorComponent","parentPath","index","wrapperClassName","betweenRules","inlineCombinator","combinators","RuleGroup","combinator","rules","not","createRule","createRuleGroup","onGroupAdd","onGroupRemove","onRuleAdd","showCombinatorsBetweenRules","showNotToggle","disabledPaths","previewRef","dropRef","isAncestor","onCombinatorChange","onIndependentCombinatorChange","concat","onNotToggleChange","addRule","newRule","addGroup","newGroup","cloneGroup","toggleLockGroup","removeGroup","_jsxs","header","notToggle","cloneRuleGroup","lockGroup","lockGroupDisabled","body","r","idx","thisPath","thisPathDisabled","some","p","key","Fragment","combinatorSelector","val","enableES5","QueryBuilderWithoutDndProvider","debugMode","defaultQuery","query","fProp","defaultOperators","defaultCombinators","translationsProp","defaultTranslations","enableMountQueryChange","controlElements","getDefaultField","getDefaultOperator","getDefaultValue","onAddRule","onAddGroup","rg","onQueryChange","controlClassnames","resetOnFieldChange","resetOnOperatorChange","addRuleToNewGroups","enableDragAndDrop","translationsTemp","translationsPropKeys","Object","keys","t","defaultFields","placeholderLabel","fieldsProp","f","fld","sort","a","b","localeCompare","placeholderGroupLabel","uniqOptGroups","uniqByName","fm","forEach","queryDisabled","getOperatorsMain","useCallback","ops","getRuleDefaultOperator","defaultOperator","getValueEditorTypeMain","vet","getValueSourcesMain","getValueSourcesUtil","getValuesMain","vals","getRuleDefaultValue","defaultValue","filteredFields","editorType","getInputTypeMain","generateID","isFirstRender","queryState","setQueryState","useState","root","current","prepareRuleGroup","dispatch","newQuery","pathIsDisabled","add","group","update","onRuleOrGroupRemove","remove","oldPath","clone","move","defaultControlClassnames","defaultControlElements","isRuleGroup","queryBuilder","valid","invalid","QueryBuilder","HTML5Backend"],"mappings":"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E,CAAC,EAAE,EAAI,CAAC,EAAE,GAAG,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,GAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,GAAI,CAAC,EAAE,GAAG,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,GAAI,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,GAAI,CAAC,EAAE,EAAE,GAAG,GAAG,IAAI,IAAI,GAAG,EAAE,GAAI,CAAC,EAAE,GAAG,EAAE,GAAI,CAAC,EAAE,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,GAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,EAAE,EAAI,CAAC,EAAE,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,GAAI,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,EAAI,CAAC,EAAE,GAAG,EAAE,EAAI,CAAC,EAAE,GAAG,EAAE,GAAI,CAAC,EAAE,GAAG,EAAE,GAAI,CAAC,EAAE,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,EAAE,GAAI,CAAC,EAAE,GAAG,EAAE,GAAI,CAAC,EAAE,GAAG,EAAE,GAAI,CAAC,EAAE,GAAG,EAAE,GAAI,CAAC,EAAE,GAAG,EAAE,EAAI,CAAC,EAAE,GAAG,EAAE,GAAI,CAAC,EAAE,GAAG,EAAE,GAAI,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,EAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,EAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,EAAK,CAAC,EAAE,GAAG,EAAE,EAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,EAAE,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,GAAG,EAAE,EAAE,GAAK,CAAC,EAAE,EAAE,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,EAAE,IAAI,GAAG,EAAE,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,GAAK,CAAC,GAAG,GAAG,EAAE,EAAE,GAAK,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,GAAK,CAAC,EAAE,EAAE,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,EAAE,GAAG,EAAE,GAAK,CAAC,IAAI,GAA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ACE,MAAO,iBACP,YAAa,CACX,cACA,YACA,cACA,QACA,OACA,WACA,aACA,UACA,UACA,aACA,UACA,SACF,CACF,EACA,CACE,MAAO,mBACP,YAAa,CACX,YACA,WACA,UACA,gBACA,UACA,UACA,aACA,eACA,QACA,WACA,QACA,SACA,aACA,wBACA,aACA,eACA,YACA,aACA,QACA,cACA,YACA,cACA,MACA,QACA,WACA,gBACA,OACA,UACA,YACA,UACA,aACA,WACA,YACA,gBACA,aACA,WACA,UACA,OACA,SACF,CACF,EACA,CACE,MAAO,uBACP,YAAa,CACX,eACA,WACA,gBACA,QACA,gBACA,aACA,WACA,cACA,WACA,SACA,SACA,oBACA,OACA,cACA,OACA,OACA,SACA,UACA,WACA,WACA,QACA,QACA,UACA,OACA,SACA,cACF,CACF,EACA,CACE,MAAO,yBACP,YAAa,CACX,cACA,aACA,cACA,wBACA,eACA,aACA,oBACA,eACA,YACA,kBACA,sBACA,mBACA,MACA,0BACA,gBACA,WACA,SACA,YACA,aACA,YACA,gBACA,YACA,iBACA,YACA,UACA,4BACA,QACA,aACA,cACA,gBACA,YACA,WACA,aACA,cACA,WACF,CACF,CACF,EAAE,IAAI,CAAC,CAAE,QAAO,iBAAmB,EACjC,QACA,QAAS,EAAY,IAAI,AAAA,KAAQ,KAAM,EAAG,MAAO,CAAA,EAAI,CACvD,EAAE,ECpJW,GAAY,AAAC,GAAgB,CAAC,CAAC,EAAE,MAEjC,GAA8B,CACzC,4BAA6B,GAC7B,cAAe,GACf,iBAAkB,GAClB,gBAAiB,GACjB,mBAAoB,GACpB,sBAAuB,GACvB,gBAAiB,GACjB,mBAAoB,GACpB,cAAe,GACf,uBAAwB,GACxB,kBAAmB,GACnB,SAAU,GACV,UAAW,GACX,aAAc,EAChB,EAEa,GAA4B,CACvC,8BACA,gBACA,mBACA,kBACA,qBACA,wBACA,kBACA,qBACA,gBACA,yBACA,oBACA,WACA,YACA,cACF,EAEa,GAOT,CACF,4BAA6B,CAC3B,KAAM,qDACN,MAAO,4BACP,MAAO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"}