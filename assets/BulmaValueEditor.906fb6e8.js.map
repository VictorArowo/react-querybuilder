{"version":3,"file":"BulmaValueEditor.906fb6e8.js","sources":["../../../bulma/src/BulmaActionElement.tsx","../../../bulma/src/BulmaNotToggle.tsx","../../../bulma/src/BulmaValueSelector.tsx","../../../bulma/src/BulmaValueEditor.tsx"],"sourcesContent":["import type { ActionProps } from 'react-querybuilder';\n\nexport const BulmaActionElement = ({\n  className,\n  handleOnClick,\n  label,\n  title,\n  disabled,\n  disabledTranslation,\n}: ActionProps) => (\n  <button\n    type=\"button\"\n    className={`button is-small ${className}`}\n    title={disabledTranslation && disabled ? disabledTranslation.title : title}\n    onClick={e => handleOnClick(e)}\n    disabled={disabled && !disabledTranslation}>\n    {disabledTranslation && disabled ? disabledTranslation.label : label}\n  </button>\n);\n\nBulmaActionElement.displayName = 'BulmaActionElement';\n","import type { NotToggleProps } from 'react-querybuilder';\n\nexport const BulmaNotToggle = ({\n  className,\n  handleOnChange,\n  label,\n  checked,\n  title,\n  disabled,\n}: NotToggleProps) => (\n  <label className={`${className} checkbox`} title={title}>\n    <input\n      type=\"checkbox\"\n      disabled={disabled}\n      checked={checked}\n      onChange={e => handleOnChange(e.target.checked)}\n    />\n    {label}\n  </label>\n);\n\nBulmaNotToggle.displayName = 'BulmaNotToggle';\n","import { useMemo, type ChangeEvent } from 'react';\nimport { joinWith, splitBy, type ValueSelectorProps } from 'react-querybuilder';\nimport { toOptions } from './utils';\n\nexport const BulmaValueSelector = ({\n  className,\n  handleOnChange,\n  options,\n  value,\n  title,\n  disabled,\n  multiple,\n  listsAsArrays,\n}: ValueSelectorProps) => {\n  const onChange = useMemo(\n    () =>\n      multiple\n        ? (e: ChangeEvent<HTMLSelectElement>) => {\n            const valArray = Array.from(e.target.selectedOptions).map(o => o.value);\n            handleOnChange(listsAsArrays ? valArray : joinWith(valArray, ','));\n          }\n        : (e: ChangeEvent<HTMLSelectElement>) => handleOnChange(e.target.value),\n    [handleOnChange, listsAsArrays, multiple]\n  );\n\n  const val = multiple ? (Array.isArray(value) ? value : splitBy(value, ',')) : value;\n\n  return (\n    <div title={title} className={`${className} select is-small`}>\n      <select value={val} multiple={!!multiple} disabled={disabled} onChange={onChange}>\n        {toOptions(options)}\n      </select>\n    </div>\n  );\n};\n\nBulmaValueSelector.displayName = 'BulmaValueSelector';\n","import {\n  joinWith,\n  standardClassnames,\n  toArray,\n  useValueEditor,\n  type ValueEditorProps,\n} from 'react-querybuilder';\nimport { BulmaValueSelector } from './BulmaValueSelector';\n\nexport const BulmaValueEditor = ({\n  fieldData,\n  operator,\n  value,\n  handleOnChange,\n  title,\n  className,\n  type,\n  inputType,\n  values = [],\n  listsAsArrays,\n  disabled,\n  testID,\n  ...props\n}: ValueEditorProps) => {\n  useValueEditor({ handleOnChange, inputType, operator, value });\n\n  if (operator === 'null' || operator === 'notNull') {\n    return null;\n  }\n\n  const placeHolderText = fieldData?.placeholder ?? '';\n  const inputTypeCoerced = ['between', 'notBetween', 'in', 'notIn'].includes(operator)\n    ? 'text'\n    : inputType || 'text';\n\n  if ((operator === 'between' || operator === 'notBetween') && type === 'select') {\n    const valArray = toArray(value);\n    const selector1handler = (v: string) => {\n      const val = [v, valArray[1] ?? values[0]?.name, ...valArray.slice(2)];\n      handleOnChange(listsAsArrays ? val : joinWith(val, ','));\n    };\n    const selector2handler = (v: string) => {\n      const val = [valArray[0], v, ...valArray.slice(2)];\n      handleOnChange(listsAsArrays ? val : joinWith(val, ','));\n    };\n    return (\n      <span data-testid={testID} className={className} title={title}>\n        <BulmaValueSelector\n          {...props}\n          className={standardClassnames.valueListItem}\n          handleOnChange={selector1handler}\n          disabled={disabled}\n          value={valArray[0]}\n          options={values}\n          listsAsArrays={listsAsArrays}\n        />\n        <BulmaValueSelector\n          {...props}\n          className={standardClassnames.valueListItem}\n          handleOnChange={selector2handler}\n          disabled={disabled}\n          value={valArray[1]}\n          options={values}\n          listsAsArrays={listsAsArrays}\n        />\n      </span>\n    );\n  }\n\n  switch (type) {\n    case 'select':\n    case 'multiselect':\n      return (\n        <BulmaValueSelector\n          {...props}\n          title={title}\n          className={className}\n          handleOnChange={handleOnChange}\n          options={values}\n          value={value}\n          disabled={disabled}\n          multiple={type === 'multiselect'}\n          listsAsArrays={listsAsArrays}\n        />\n      );\n\n    case 'textarea':\n      return (\n        <div className={`${className} control`}>\n          <textarea\n            value={value}\n            title={title}\n            disabled={disabled}\n            className=\"textarea\"\n            placeholder={placeHolderText}\n            onChange={e => handleOnChange(e.target.value)}\n          />\n        </div>\n      );\n\n    case 'switch':\n    case 'checkbox':\n      return (\n        <label title={title} className={`${className} checkbox`}>\n          <input\n            type=\"checkbox\"\n            checked={!!value}\n            disabled={disabled}\n            onChange={e => handleOnChange(e.target.checked)}\n          />\n        </label>\n      );\n\n    case 'radio':\n      return (\n        <div className={`${className} control`} title={title}>\n          {values.map(v => (\n            <label key={v.name} className=\"radio\">\n              <input\n                type=\"radio\"\n                value={v.name}\n                checked={value === v.name}\n                onChange={() => handleOnChange(v.name)}\n                disabled={disabled}\n              />\n              {v.label}\n            </label>\n          ))}\n        </div>\n      );\n  }\n\n  return (\n    <div className={`${className} control`}>\n      <input\n        type={inputTypeCoerced}\n        value={value}\n        title={title}\n        disabled={disabled}\n        className=\"input is-small\"\n        placeholder={placeHolderText}\n        onChange={e => handleOnChange(e.target.value)}\n      />\n    </div>\n  );\n};\n\nBulmaValueEditor.displayName = 'BulmaValueEditor';\n"],"names":["BulmaActionElement","className","handleOnClick","label","title","disabled","disabledTranslation","e","displayName","BulmaNotToggle","handleOnChange","checked","_jsx","target","BulmaValueSelector","options","value","multiple","listsAsArrays","onChange","useMemo","valArray","Array","from","selectedOptions","map","o","joinWith","val","isArray","splitBy","toOptions","BulmaValueEditor","fieldData","operator","type","inputType","values","testID","props","placeHolderText","placeholder","inputTypeCoerced","includes","toArray","selector1handler","v","name","slice","selector2handler","standardClassnames","valueListItem"],"mappings":"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"}