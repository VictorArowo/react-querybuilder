{"version":3,"file":"main.64b41201.js","sources":["../../../react-querybuilder/src/utils/parseSQL/utils.ts","../../../react-querybuilder/src/utils/parseSQL/parseSQL.ts","../../vite/preload-helper","../../../bootstrap/src/BootstrapDragHandle.tsx","../../../bootstrap/src/BootstrapNotToggle.tsx","../../../react-querybuilder/dist/index.es.js","../../../bootstrap/src/BootstrapValueEditor.tsx","../../../bootstrap/src/index.ts","../../src/components/index.ts","../../src/main.tsx"],"sourcesContent":["import type { DefaultCombinatorName, DefaultOperatorName } from '../../types';\nimport type {\n  AndOperator,\n  ComparisonOperator,\n  OrOperator,\n  SQLAndExpression,\n  SQLExpression,\n  SQLIdentifier,\n  SQLLiteralValue,\n  SQLOrExpression,\n  SQLWhereObjectAny,\n} from './types';\n\nexport const isSQLExpressionNotString = (v?: string | SQLExpression): v is SQLExpression =>\n  !!v && typeof v !== 'string';\n\nexport const isSQLLiteralValue = (v?: SQLWhereObjectAny): v is SQLLiteralValue =>\n  !!v && (v.type === 'String' || v.type === 'Number' || v.type === 'Boolean');\n\nexport const isSQLIdentifier = (v?: SQLWhereObjectAny): v is SQLIdentifier =>\n  !!v && v.type === 'Identifier';\n\nexport const isWildcardsOnly = (sqlExpr: SQLExpression) =>\n  isSQLLiteralValue(sqlExpr) && sqlExpr.type === 'String' && /^['\"]?%+['\"]?$/.test(sqlExpr.value);\n\nexport const getParamString = (param: any) => {\n  switch (typeof param) {\n    case 'number':\n      return `${param}`;\n    case 'boolean':\n      return param ? 'TRUE' : 'FALSE';\n    default:\n      return `'${param}'`;\n  }\n};\n\nexport const getFieldName = (f: string | SQLIdentifier) =>\n  (typeof f === 'string' ? f : f.value).replace(/(^`|`$)/g, '');\n\nconst normalizeCombinator = (c: AndOperator | OrOperator) =>\n  c.replace('&&', 'and').replace('||', 'or').toLowerCase() as DefaultCombinatorName;\n\nexport const normalizeOperator = (op: ComparisonOperator, flip?: boolean): DefaultOperatorName => {\n  if (flip) {\n    if (op === '<') return '>';\n    if (op === '<=') return '>=';\n    if (op === '>') return '<';\n    if (op === '>=') return '<=';\n  }\n  if (op === '<>') return '!=';\n  return op;\n};\n\nexport const evalSQLLiteralValue = (valueObj: SQLLiteralValue) =>\n  valueObj.type === 'String'\n    ? valueObj.value.replace(/^(['\"]?)(.+?)\\1$/, '$2')\n    : valueObj.type === 'Boolean'\n    ? valueObj.value.toLowerCase() === 'true'\n    : parseFloat(valueObj.value);\n\nexport const generateFlatAndOrList = (\n  expr: SQLAndExpression | SQLOrExpression\n): (DefaultCombinatorName | SQLExpression)[] => {\n  const combinator = normalizeCombinator(expr.operator);\n  if (expr.left.type === 'AndExpression' || expr.left.type === 'OrExpression') {\n    return [...generateFlatAndOrList(expr.left), combinator, expr.right];\n  }\n  return [expr.left, combinator, expr.right];\n};\n\nexport const generateMixedAndOrList = (expr: SQLAndExpression | SQLOrExpression) => {\n  const arr = generateFlatAndOrList(expr);\n  const returnArray: (DefaultCombinatorName | SQLExpression | ('and' | SQLExpression)[])[] = [];\n  let startIndex = 0;\n  for (let i = 0; i < arr.length; i += 2) {\n    if (arr[i + 1] === 'and') {\n      startIndex = i;\n      let j = 1;\n      while (arr[startIndex + j] === 'and') {\n        i += 2;\n        j += 2;\n      }\n      const tempAndArray = arr.slice(startIndex, i + 1) as ('and' | SQLExpression)[];\n      returnArray.push(tempAndArray);\n      i -= 2;\n    } else if (arr[i + 1] === 'or') {\n      if (i === 0 || i === arr.length - 3) {\n        if (i === 0 || arr[i - 1] === 'or') {\n          returnArray.push(arr[i]);\n        }\n        returnArray.push(arr[i + 1]);\n        if (i === arr.length - 3) {\n          returnArray.push(arr[i + 2]);\n        }\n      } else {\n        if (arr[i - 1] === 'and') {\n          returnArray.push(arr[i + 1]);\n        } else {\n          returnArray.push(arr[i]);\n          returnArray.push(arr[i + 1]);\n        }\n      }\n    }\n  }\n  if (returnArray.length === 1 && Array.isArray(returnArray[0])) {\n    // If length is 1, then the only element is an AND array so just return that\n    return returnArray[0];\n  }\n  return returnArray;\n};\n","import { filterFieldsByComparator, getValueSourcesUtil, isOptionGroupArray, uniqByName } from '..';\nimport type {\n  DefaultCombinatorName,\n  DefaultOperatorName,\n  DefaultRuleGroupArray,\n  DefaultRuleGroupICArray,\n  DefaultRuleGroupType,\n  DefaultRuleGroupTypeAny,\n  DefaultRuleGroupTypeIC,\n  DefaultRuleType,\n  Field,\n  ParseSQLOptions,\n} from '../../types';\nimport { sqlParser } from './sqlParser';\nimport type { SQLExpression, SQLIdentifier } from './types';\nimport {\n  evalSQLLiteralValue,\n  generateFlatAndOrList,\n  generateMixedAndOrList,\n  getFieldName,\n  getParamString,\n  isSQLExpressionNotString,\n  isSQLIdentifier,\n  isSQLLiteralValue,\n  isWildcardsOnly,\n  normalizeOperator,\n} from './utils';\n\n/**\n * Converts a SQL `SELECT` statement into a query suitable for\n * the QueryBuilder component's `query` or `defaultQuery` props.\n */\nfunction parseSQL(sql: string): DefaultRuleGroupType;\nfunction parseSQL(\n  sql: string,\n  options: Omit<ParseSQLOptions, 'independentCombinators'> & { independentCombinators?: false }\n): DefaultRuleGroupType;\nfunction parseSQL(\n  sql: string,\n  options: Omit<ParseSQLOptions, 'independentCombinators'> & { independentCombinators: true }\n): DefaultRuleGroupTypeIC;\nfunction parseSQL(sql: string, options?: ParseSQLOptions): DefaultRuleGroupTypeAny {\n  let sqlString = /^[ \\t\\n\\r\\s]*SELECT\\b/i.test(sql) ? sql : `SELECT * FROM t WHERE ${sql}`;\n  let ic = false;\n  let fieldsFlat: Field[] = [];\n  const getValueSources = options?.getValueSources;\n\n  if (options) {\n    const { params, paramPrefix, independentCombinators, fields } = options;\n    ic = !!independentCombinators;\n    /* istanbul ignore else */\n    if (params) {\n      if (Array.isArray(params)) {\n        let i = 0;\n        sqlString = sqlString.replace(/\\?/g, () => {\n          const paramString = getParamString(params[i]);\n          i++;\n          return paramString;\n        });\n      } else {\n        const keys = Object.keys(params);\n        const prefix = paramPrefix ?? ':';\n        keys.forEach(p => {\n          sqlString = sqlString.replace(\n            new RegExp(`\\\\${prefix}${p}\\\\b`, 'ig'),\n            getParamString(params[p])\n          );\n        });\n      }\n    }\n    if (fields) {\n      const fieldsArray = Array.isArray(fields)\n        ? fields\n        : Object.keys(fields)\n            .map(fld => ({ ...fields[fld], name: fld }))\n            .sort((a, b) => a.label.localeCompare(b.label));\n      if (isOptionGroupArray(fieldsArray)) {\n        fieldsFlat = uniqByName(fieldsFlat.concat(...fieldsArray.map(opt => opt.options)));\n      } else {\n        fieldsFlat = uniqByName(fieldsArray);\n      }\n    }\n  }\n\n  function fieldIsValid(\n    fieldName: string,\n    operator: DefaultOperatorName,\n    subordinateFieldName?: string\n  ) {\n    // If fields option was an empty array or undefined, then all identifiers\n    // are considered valid.\n    if (fieldsFlat.length === 0) return true;\n\n    let valid = false;\n\n    const primaryField = fieldsFlat.find(ff => ff.name === fieldName);\n    if (primaryField) {\n      if (\n        !subordinateFieldName &&\n        operator !== 'notNull' &&\n        operator !== 'null' &&\n        !getValueSourcesUtil(primaryField, operator, getValueSources).some(vs => vs === 'value')\n      ) {\n        valid = false;\n      } else {\n        valid = true;\n      }\n\n      if (valid && !!subordinateFieldName) {\n        if (\n          getValueSourcesUtil(primaryField, operator, getValueSources).some(vs => vs === 'field') &&\n          fieldName !== subordinateFieldName\n        ) {\n          const validSubordinateFields = filterFieldsByComparator(\n            primaryField,\n            fieldsFlat,\n            operator\n          ) as Field[];\n          if (validSubordinateFields.every(vsf => vsf.name !== subordinateFieldName)) {\n            valid = false;\n          }\n        } else {\n          valid = false;\n        }\n      }\n    }\n\n    return valid;\n  }\n\n  const processSQLExpression = (\n    expr: SQLExpression\n  ): DefaultRuleType | DefaultRuleGroupTypeAny | null => {\n    if (expr.type === 'NotExpression') {\n      const val =\n        expr.value.type === 'SimpleExprParentheses' ? expr.value.value.value[0] : expr.value;\n      const rule = processSQLExpression(val);\n      /* instanbul ignore else */\n      if (rule) {\n        if ('rules' in rule) {\n          return { ...rule, not: true };\n        }\n        return { rules: [rule], not: true, ...(ic ? {} : { combinator: 'and' }) };\n      }\n    } else if (expr.type === 'SimpleExprParentheses') {\n      const ex = expr.value.value[0];\n      if (ex.type === 'AndExpression' || ex.type === 'OrExpression') {\n        return processSQLExpression(ex);\n      }\n      const rule = processSQLExpression(ex) as DefaultRuleType;\n      return rule ? { rules: [rule], ...(ic ? {} : { combinator: 'and' }) } : null;\n    } else if (expr.type === 'AndExpression' || expr.type === 'OrExpression') {\n      if (ic) {\n        const andOrList = generateFlatAndOrList(expr);\n        const rules = andOrList.map(v => {\n          if (typeof v === 'string') {\n            return v;\n          }\n          return processSQLExpression(v);\n        });\n        // Bail out completely if any rules in the list were invalid\n        // so as not to return an incorrect and/or sequence\n        if (rules.includes(null)) {\n          return null;\n        }\n        return {\n          rules: rules as DefaultRuleGroupICArray,\n        };\n      }\n      const andOrList = generateMixedAndOrList(expr);\n      const combinator = andOrList[1] as DefaultCombinatorName;\n      const filteredList = andOrList\n        .filter(v => Array.isArray(v) || isSQLExpressionNotString(v))\n        .map(v => (Array.isArray(v) ? v.filter(isSQLExpressionNotString) : v)) as (\n        | SQLExpression\n        | SQLExpression[]\n      )[];\n      const rules = filteredList\n        .map((exp): DefaultRuleGroupType | DefaultRuleType | null => {\n          if (Array.isArray(exp)) {\n            return {\n              combinator: 'and',\n              rules: exp\n                .map(e => processSQLExpression(e))\n                .filter(r => !!r) as DefaultRuleGroupArray,\n            };\n          }\n          return processSQLExpression(exp) as DefaultRuleType | DefaultRuleGroupType | null;\n        })\n        .filter(r => !!r) as DefaultRuleGroupArray;\n      /* istanbul ignore else */\n      if (rules.length > 0) {\n        return { combinator, rules };\n      }\n    } else if (expr.type === 'IsNullBooleanPrimary') {\n      /* istanbul ignore else */\n      if (isSQLIdentifier(expr.value)) {\n        const f = getFieldName(expr.value);\n        const operator = expr.hasNot ? 'notNull' : 'null';\n        if (fieldIsValid(f, operator)) {\n          return {\n            field: f,\n            operator,\n            value: null,\n          };\n        }\n      }\n    } else if (expr.type === 'ComparisonBooleanPrimary') {\n      /* istanbul ignore else */\n      if (\n        (isSQLIdentifier(expr.left) && !isSQLIdentifier(expr.right)) ||\n        (!isSQLIdentifier(expr.left) && isSQLIdentifier(expr.right))\n      ) {\n        const identifier = isSQLIdentifier(expr.left)\n          ? expr.left.value\n          : (expr.right as SQLIdentifier).value;\n        const valueObj = [expr.left, expr.right].find(t => !isSQLIdentifier(t));\n        if (isSQLLiteralValue(valueObj)) {\n          const f = getFieldName(identifier);\n          // flip the operator if the identifier was on the right,\n          // since it's now on the left as `field`\n          const operator = normalizeOperator(expr.operator, isSQLIdentifier(expr.right));\n          if (fieldIsValid(f, operator)) {\n            return {\n              field: f,\n              operator,\n              value: evalSQLLiteralValue(valueObj),\n            };\n          }\n        }\n      } else if (isSQLIdentifier(expr.left) && isSQLIdentifier(expr.right)) {\n        const f = getFieldName(expr.left);\n        const sf = getFieldName(expr.right);\n        const operator = normalizeOperator(expr.operator);\n        if (fieldIsValid(f, operator, sf)) {\n          return {\n            field: f,\n            operator,\n            value: sf,\n            valueSource: 'field',\n          };\n        }\n      }\n    } else if (expr.type === 'InExpressionListPredicate') {\n      /* istanbul ignore else */\n      if (isSQLIdentifier(expr.left)) {\n        const f = getFieldName(expr.left);\n        const valueArray = expr.right.value.filter(isSQLLiteralValue).map(evalSQLLiteralValue);\n        const operator = expr.hasNot ? 'notIn' : 'in';\n        const fieldArray = expr.right.value\n          .filter(isSQLIdentifier)\n          .filter(sf => fieldIsValid(f, operator, sf.value))\n          .map(getFieldName);\n        if (valueArray.length > 0) {\n          const value = options?.listsAsArrays ? valueArray : valueArray.join(', ');\n          return { field: getFieldName(expr.left), operator, value };\n        } else if (fieldArray.length > 0) {\n          const value = options?.listsAsArrays ? fieldArray : fieldArray.join(', ');\n          return { field: getFieldName(expr.left), operator, value, valueSource: 'field' };\n        }\n      }\n    } else if (expr.type === 'BetweenPredicate') {\n      /* istanbul ignore else */\n      if (\n        isSQLIdentifier(expr.left) &&\n        isSQLLiteralValue(expr.right.left) &&\n        isSQLLiteralValue(expr.right.right)\n      ) {\n        const valueArray = [expr.right.left, expr.right.right].map(evalSQLLiteralValue);\n        const value = options?.listsAsArrays ? valueArray : valueArray.join(', ');\n        const operator = expr.hasNot ? 'notBetween' : 'between';\n        return { field: getFieldName(expr.left), operator, value };\n      } else if (\n        isSQLIdentifier(expr.left) &&\n        isSQLIdentifier(expr.right.left) &&\n        isSQLIdentifier(expr.right.right)\n      ) {\n        const f = getFieldName(expr.left);\n        const valueArray = [expr.right.left, expr.right.right].map(getFieldName);\n        const operator = expr.hasNot ? 'notBetween' : 'between';\n        if (valueArray.every(sf => fieldIsValid(f, operator, sf))) {\n          const value = options?.listsAsArrays ? valueArray : valueArray.join(', ');\n          return { field: f, operator, value, valueSource: 'field' };\n        }\n      }\n    } else if (expr.type === 'LikePredicate') {\n      /* istanbul ignore else */\n      if (isSQLIdentifier(expr.left) && expr.right.type === 'String') {\n        const valueWithWildcards = evalSQLLiteralValue(expr.right) as string;\n        const valueWithoutWildcards = valueWithWildcards.replace(/(^%)|(%$)/g, '');\n        let operator: DefaultOperatorName = '=';\n        /* istanbul ignore else */\n        if (/^%.*%$/.test(valueWithWildcards) || valueWithWildcards === '%') {\n          operator = expr.hasNot ? 'doesNotContain' : 'contains';\n        } else if (/%$/.test(valueWithWildcards)) {\n          operator = expr.hasNot ? 'doesNotBeginWith' : 'beginsWith';\n        } else if (/^%/.test(valueWithWildcards)) {\n          operator = expr.hasNot ? 'doesNotEndWith' : 'endsWith';\n        }\n        const f = getFieldName(expr.left);\n        /* istanbul ignore else */\n        if (fieldIsValid(f, operator)) {\n          return { field: f, operator, value: valueWithoutWildcards };\n        }\n      } else if (\n        isSQLIdentifier(expr.left) &&\n        expr.right.type === 'OrExpression' &&\n        expr.right.operator === '||'\n      ) {\n        let subordinateFieldName = '';\n        let operator: DefaultOperatorName = '=';\n\n        if (isSQLIdentifier(expr.right.right) && isWildcardsOnly(expr.right.left)) {\n          subordinateFieldName = getFieldName(expr.right.right);\n          operator = expr.hasNot ? 'doesNotEndWith' : 'endsWith';\n        } else if (isSQLIdentifier(expr.right.left) && isWildcardsOnly(expr.right.right)) {\n          subordinateFieldName = getFieldName(expr.right.left);\n          operator = expr.hasNot ? 'doesNotBeginWith' : 'beginsWith';\n        } else if (\n          isWildcardsOnly(expr.right.right) &&\n          expr.right.left.type === 'OrExpression' &&\n          expr.right.left.operator === '||' &&\n          isWildcardsOnly(expr.right.left.left) &&\n          isSQLIdentifier(expr.right.left.right)\n        ) {\n          subordinateFieldName = getFieldName(expr.right.left.right);\n          operator = expr.hasNot ? 'doesNotContain' : 'contains';\n        }\n\n        const baseFieldName = getFieldName(expr.left);\n\n        if (operator !== '=' && fieldIsValid(baseFieldName, operator, subordinateFieldName)) {\n          return {\n            field: baseFieldName,\n            operator,\n            value: subordinateFieldName,\n            valueSource: 'field',\n          };\n        }\n      } else if (isSQLIdentifier(expr.left) && isSQLIdentifier(expr.right)) {\n        const baseFieldName = getFieldName(expr.left);\n        const subordinateFieldName = getFieldName(expr.right);\n        const operator: DefaultOperatorName = '=';\n        if (fieldIsValid(baseFieldName, operator, subordinateFieldName)) {\n          return {\n            field: baseFieldName,\n            operator,\n            value: subordinateFieldName,\n            valueSource: 'field',\n          };\n        }\n      }\n    }\n    return null;\n  };\n\n  const { where } = sqlParser.parse(sqlString).value;\n  if (where) {\n    const result = processSQLExpression(where);\n    if (result) {\n      if ('rules' in result) {\n        return result;\n      }\n      return { rules: [result], ...(ic ? {} : { combinator: 'and' }) };\n    }\n  }\n  return { rules: [], ...(ic ? {} : { combinator: 'and' }) };\n}\n\nexport { parseSQL };\n","const scriptRel = 'modulepreload';const seen = {};const base = '/react-querybuilder/';export const __vitePreload = function preload(baseModule, deps) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = `${base}${dep}`;\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', () => rej(new Error(`Unable to preload CSS for ${dep}`)));\n            });\n        }\n    })).then(() => baseModule());\n}","import { forwardRef } from 'react';\nimport type { DragHandleProps } from 'react-querybuilder';\n\nexport const BootstrapDragHandle = forwardRef<HTMLSpanElement, DragHandleProps>(\n  ({ className, title }, dragRef) => (\n    <span ref={dragRef} className={className} title={title}>\n      <i className=\"bi bi-grip-vertical\"></i>\n    </span>\n  )\n);\n\nBootstrapDragHandle.displayName = 'BootstrapDragHandle';\n","import { useRef } from 'react';\nimport type { NotToggleProps } from 'react-querybuilder';\n\nexport const BootstrapNotToggle = ({\n  className,\n  handleOnChange,\n  title,\n  label,\n  checked,\n  disabled,\n}: NotToggleProps) => {\n  const id = useRef(`notToggle-${Math.random()}`);\n\n  return (\n    <div className={`form-check-inline form-switch ${className}`}>\n      <input\n        id={id.current}\n        className=\"form-check-input\"\n        type=\"checkbox\"\n        onChange={e => handleOnChange(e.target.checked)}\n        checked={!!checked}\n        disabled={disabled}\n      />\n      <label title={title} htmlFor={id.current} className=\"form-check-label\">\n        {label}\n      </label>\n    </div>\n  );\n};\n\nBootstrapNotToggle.displayName = 'BootstrapNotToggle';\n","var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nimport { produce, enableES5 } from \"immer\";\nimport require$$0, { useMemo, useEffect, forwardRef, useRef, Fragment as Fragment$1, useCallback, useState } from \"react\";\nimport { useDrag, useDrop, DndContext, DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nconst c = (...classNames) => classNames.filter(Boolean).join(\" \");\nconst isRuleGroup = (rg) => typeof rg === \"object\" && \"rules\" in rg && Array.isArray(rg.rules);\nconst isRuleGroupType = (rg) => isRuleGroup(rg) && \"combinator\" in rg;\nconst isRuleGroupTypeIC = (rg) => isRuleGroup(rg) && !(\"combinator\" in rg);\nconst processRuleOrStringOrRuleGroupIC = (r) => typeof r === \"object\" && \"rules\" in r ? generateRuleGroupICWithConsistentCombinators(r) : r;\nconst generateRuleGroupICWithConsistentCombinators = (rg) => {\n  const returnArray = [];\n  const push = (r) => returnArray.push(processRuleOrStringOrRuleGroupIC(r));\n  let startIndex = 0;\n  for (let i = 0; i < rg.rules.length; i += 2) {\n    if (rg.rules.length === 1) {\n      push(rg.rules[0]);\n    } else if (rg.rules[i + 1] === \"and\") {\n      startIndex = i;\n      let j = 1;\n      while (rg.rules[startIndex + j] === \"and\") {\n        i += 2;\n        j += 2;\n      }\n      returnArray.push({\n        rules: rg.rules.slice(startIndex, i + 1).map(processRuleOrStringOrRuleGroupIC)\n      });\n      i -= 2;\n    } else if (rg.rules[i + 1] === \"or\") {\n      if (i === 0 || i === rg.rules.length - 3) {\n        if (i === 0 || rg.rules[i - 1] === \"or\") {\n          push(rg.rules[i]);\n        }\n        push(rg.rules[i + 1]);\n        if (i === rg.rules.length - 3) {\n          push(rg.rules[i + 2]);\n        }\n      } else {\n        if (rg.rules[i - 1] === \"and\") {\n          push(rg.rules[i + 1]);\n        } else {\n          push(rg.rules[i]);\n          push(rg.rules[i + 1]);\n        }\n      }\n    }\n  }\n  if (returnArray.length === 1 && typeof returnArray[0] === \"object\" && \"rules\" in returnArray[0]) {\n    return __spreadValues(__spreadValues({}, rg), returnArray[0]);\n  }\n  return __spreadProps(__spreadValues({}, rg), { rules: returnArray });\n};\nconst convertFromIC = (rg) => {\n  const processedRG = generateRuleGroupICWithConsistentCombinators(rg);\n  const rulesAsMixedList = processedRG.rules.map((r) => typeof r === \"string\" || !(\"rules\" in r) ? r : convertFromIC(r));\n  const combinator = rulesAsMixedList.length < 2 ? \"and\" : rulesAsMixedList[1];\n  const rules = rulesAsMixedList.filter((r) => typeof r !== \"string\");\n  return __spreadProps(__spreadValues({}, processedRG), { combinator, rules });\n};\nconst convertToIC = (rg) => {\n  const _a = rg, { combinator } = _a, queryWithoutCombinator = __objRest(_a, [\"combinator\"]);\n  const rules = [];\n  rg.rules.forEach((r, idx, arr) => {\n    if (\"rules\" in r) {\n      rules.push(convertToIC(r));\n    } else {\n      rules.push(r);\n    }\n    if (idx < arr.length - 1) {\n      rules.push(combinator);\n    }\n  });\n  return __spreadProps(__spreadValues({}, queryWithoutCombinator), { rules });\n};\nfunction convertQuery(query) {\n  return isRuleGroupTypeIC(query) ? convertFromIC(query) : convertToIC(query);\n}\nconst defaultValidator = (query) => {\n  const result = {};\n  const validateGroup = (rg) => {\n    const reasons = [];\n    if (rg.rules.length === 0) {\n      reasons.push(groupInvalidReasons.empty);\n    } else if (!(\"combinator\" in rg)) {\n      let invalidICs = false;\n      for (let i = 0; i < rg.rules.length && !invalidICs; i++) {\n        if (i % 2 === 0 && typeof rg.rules[i] === \"string\" || i % 2 === 1 && typeof rg.rules[i] !== \"string\" || i % 2 === 1 && typeof rg.rules[i] === \"string\" && !defaultCombinators.map((c2) => c2.name).includes(rg.rules[i])) {\n          invalidICs = true;\n        }\n      }\n      if (invalidICs) {\n        reasons.push(groupInvalidReasons.invalidIndependentCombinators);\n      }\n    }\n    if (\"combinator\" in rg && !defaultCombinators.map((c2) => c2.name).includes(rg.combinator) && rg.rules.length >= 2) {\n      reasons.push(groupInvalidReasons.invalidCombinator);\n    }\n    if (rg.id) {\n      if (reasons.length) {\n        result[rg.id] = { valid: false, reasons };\n      } else {\n        result[rg.id] = true;\n      }\n    }\n    rg.rules.forEach((r) => {\n      if (typeof r === \"string\")\n        ;\n      else if (\"rules\" in r) {\n        validateGroup(r);\n      } else\n        ;\n    });\n  };\n  validateGroup(query);\n  return result;\n};\nvar jsxRuntime = { exports: {} };\nvar reactJsxRuntime_production_min = {};\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\nfunction toObject(val) {\n  if (val === null || val === void 0) {\n    throw new TypeError(\"Object.assign cannot be called with null or undefined\");\n  }\n  return Object(val);\n}\nfunction shouldUseNative() {\n  try {\n    if (!Object.assign) {\n      return false;\n    }\n    var test1 = new String(\"abc\");\n    test1[5] = \"de\";\n    if (Object.getOwnPropertyNames(test1)[0] === \"5\") {\n      return false;\n    }\n    var test2 = {};\n    for (var i = 0; i < 10; i++) {\n      test2[\"_\" + String.fromCharCode(i)] = i;\n    }\n    var order2 = Object.getOwnPropertyNames(test2).map(function(n2) {\n      return test2[n2];\n    });\n    if (order2.join(\"\") !== \"0123456789\") {\n      return false;\n    }\n    var test3 = {};\n    \"abcdefghijklmnopqrst\".split(\"\").forEach(function(letter) {\n      test3[letter] = letter;\n    });\n    if (Object.keys(Object.assign({}, test3)).join(\"\") !== \"abcdefghijklmnopqrst\") {\n      return false;\n    }\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nshouldUseNative() ? Object.assign : function(target, source) {\n  var from;\n  var to = toObject(target);\n  var symbols;\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from);\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n  return to;\n};\n/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar f = require$$0, g = 60103;\nreactJsxRuntime_production_min.Fragment = 60107;\nif (typeof Symbol === \"function\" && Symbol.for) {\n  var h = Symbol.for;\n  g = h(\"react.element\");\n  reactJsxRuntime_production_min.Fragment = h(\"react.fragment\");\n}\nvar m = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, n = Object.prototype.hasOwnProperty, p = { key: true, ref: true, __self: true, __source: true };\nfunction q(c2, a, k) {\n  var b, d = {}, e = null, l = null;\n  k !== void 0 && (e = \"\" + k);\n  a.key !== void 0 && (e = \"\" + a.key);\n  a.ref !== void 0 && (l = a.ref);\n  for (b in a)\n    n.call(a, b) && !p.hasOwnProperty(b) && (d[b] = a[b]);\n  if (c2 && c2.defaultProps)\n    for (b in a = c2.defaultProps, a)\n      d[b] === void 0 && (d[b] = a[b]);\n  return { $$typeof: g, type: c2, key: e, ref: l, props: d, _owner: m.current };\n}\nreactJsxRuntime_production_min.jsx = q;\nreactJsxRuntime_production_min.jsxs = q;\n{\n  jsxRuntime.exports = reactJsxRuntime_production_min;\n}\nconst jsx = jsxRuntime.exports.jsx;\nconst jsxs = jsxRuntime.exports.jsxs;\nconst Fragment = jsxRuntime.exports.Fragment;\nconst isOptionGroupArray = (arr) => Array.isArray(arr) && arr.length > 0 && \"options\" in arr[0];\nconst toOptions = (arr) => isOptionGroupArray(arr) ? arr.map((og) => /* @__PURE__ */ jsx(\"optgroup\", {\n  label: og.label,\n  children: og.options.map((opt) => /* @__PURE__ */ jsx(\"option\", {\n    value: opt.name,\n    children: opt.label\n  }, opt.name))\n}, og.label)) : Array.isArray(arr) ? arr.map((opt) => /* @__PURE__ */ jsx(\"option\", {\n  value: opt.name,\n  children: opt.label\n}, opt.name)) : null;\nconst getFirstOption = (arr) => !Array.isArray(arr) || arr.length === 0 ? null : isOptionGroupArray(arr) ? arr[0].options[0].name : arr[0].name;\nconst filterFieldsByComparator = (field, fields, operator) => {\n  if (!field.comparator) {\n    const filterOutSameName = (f2) => f2.name !== field.name;\n    if (isOptionGroupArray(fields)) {\n      return fields.map((og) => __spreadProps(__spreadValues({}, og), { options: og.options.filter(filterOutSameName) }));\n    }\n    return fields.filter(filterOutSameName);\n  }\n  const filterByComparator = (fieldToCompare) => {\n    if (field.name === fieldToCompare.name) {\n      return false;\n    }\n    if (typeof field.comparator === \"string\") {\n      return field[field.comparator] === fieldToCompare[field.comparator];\n    }\n    return field.comparator(fieldToCompare, operator);\n  };\n  if (isOptionGroupArray(fields)) {\n    return fields.map((og) => __spreadProps(__spreadValues({}, og), { options: og.options.filter(filterByComparator) })).filter((og) => og.options.length > 0);\n  }\n  return fields.filter(filterByComparator);\n};\nconst isValidationResult = (vr) => typeof vr === \"object\" && vr !== null && typeof vr.valid === \"boolean\";\nconst isRuleOrGroupValid = (rg, validationResult, validator) => {\n  if (typeof validationResult === \"boolean\") {\n    return validationResult;\n  }\n  if (isValidationResult(validationResult)) {\n    return validationResult.valid;\n  }\n  if (typeof validator === \"function\" && !(\"rules\" in rg)) {\n    const vr = validator(rg);\n    if (typeof vr === \"boolean\") {\n      return vr;\n    }\n    if (isValidationResult(vr)) {\n      return vr.valid;\n    }\n  }\n  return true;\n};\nconst uniqByName = (originalArray) => {\n  const names = /* @__PURE__ */ new Set();\n  const newArray = [];\n  originalArray.forEach((el) => {\n    if (!names.has(el.name)) {\n      names.add(el.name);\n      newArray.push(el);\n    }\n  });\n  return newArray;\n};\nconst uniqOptGroups = (originalArray) => {\n  const labels = /* @__PURE__ */ new Set();\n  const names = /* @__PURE__ */ new Set();\n  const newArray = [];\n  originalArray.forEach((el) => {\n    if (!labels.has(el.label)) {\n      labels.add(el.label);\n      const optionsForThisGroup = [];\n      el.options.forEach((opt) => {\n        if (!names.has(opt.name)) {\n          names.add(opt.name);\n          optionsForThisGroup.push(opt);\n        }\n      });\n      el.options = optionsForThisGroup;\n      newArray.push(el);\n    }\n  });\n  return newArray;\n};\nconst numericRegex = /^\\s*[+-]?(\\d+|\\d*\\.\\d+|\\d+\\.\\d*)([Ee][+-]?\\d+)?\\s*$/;\nconst trimIfString = (val) => typeof val === \"string\" ? val.trim() : val;\nconst toArray = (v) => (Array.isArray(v) ? v : typeof v === \"string\" ? v.split(\",\").filter((s) => !/^\\s*$/.test(s)) : []).map(trimIfString);\nconst mapOperator = (op) => {\n  switch (op.toLowerCase()) {\n    case \"null\":\n      return \"is null\";\n    case \"notnull\":\n      return \"is not null\";\n    case \"notin\":\n      return \"not in\";\n    case \"notbetween\":\n      return \"not between\";\n    case \"contains\":\n    case \"beginswith\":\n    case \"endswith\":\n      return \"like\";\n    case \"doesnotcontain\":\n    case \"doesnotbeginwith\":\n    case \"doesnotendwith\":\n      return \"not like\";\n    default:\n      return op;\n  }\n};\nconst mongoOperators = {\n  \"=\": \"$eq\",\n  \"!=\": \"$ne\",\n  \"<\": \"$lt\",\n  \"<=\": \"$lte\",\n  \">\": \"$gt\",\n  \">=\": \"$gte\",\n  in: \"$in\",\n  notIn: \"$nin\"\n};\nconst celCombinatorMap = {\n  and: \"&&\",\n  or: \"||\"\n};\nconst numerifyValues = (rg) => __spreadProps(__spreadValues({}, rg), {\n  rules: rg.rules.map((r) => {\n    if (typeof r === \"string\") {\n      return r;\n    } else if (\"rules\" in r) {\n      return numerifyValues(r);\n    }\n    let { value } = r;\n    if (typeof value === \"string\" && numericRegex.test(value)) {\n      value = parseFloat(value);\n    }\n    return __spreadProps(__spreadValues({}, r), { value });\n  })\n});\nconst isValidValue = (v) => typeof v === \"string\" && v.length > 0 || typeof v === \"number\" && !isNaN(v) || typeof v !== \"string\" && typeof v !== \"number\";\nconst shouldRenderAsNumber = (v, parseNumbers) => !!parseNumbers && (typeof v === \"number\" || typeof v === \"bigint\" || typeof v === \"string\" && numericRegex.test(v));\nconst defaultValueProcessor = (field, operator, value, valueSource) => defaultValueProcessorInternal({ field, operator, value, valueSource }, { parseNumbers: false });\nconst defaultValueProcessorInternal = ({ operator, value, valueSource }, { parseNumbers }) => {\n  const valueIsField = valueSource === \"field\";\n  const operatorLowerCase = operator.toLowerCase();\n  if (operatorLowerCase === \"null\" || operatorLowerCase === \"notnull\") {\n    return \"\";\n  } else if (operatorLowerCase === \"in\" || operatorLowerCase === \"notin\") {\n    const valArray = toArray(value);\n    if (valArray.length > 0) {\n      return `(${valArray.map((v) => valueIsField || shouldRenderAsNumber(v, parseNumbers) ? `${trimIfString(v)}` : `'${v}'`).join(\", \")})`;\n    } else {\n      return \"\";\n    }\n  } else if (operatorLowerCase === \"between\" || operatorLowerCase === \"notbetween\") {\n    const valArray = toArray(value);\n    if (valArray.length >= 2 && isValidValue(valArray[0]) && isValidValue(valArray[1])) {\n      const [first, second] = valArray;\n      return valueIsField || shouldRenderAsNumber(first, parseNumbers) && shouldRenderAsNumber(second, parseNumbers) ? `${trimIfString(first)} and ${trimIfString(second)}` : `'${first}' and '${second}'`;\n    } else {\n      return \"\";\n    }\n  } else if (operatorLowerCase === \"contains\" || operatorLowerCase === \"doesnotcontain\") {\n    return valueIsField ? `'%' || ${value} || '%'` : `'%${value}%'`;\n  } else if (operatorLowerCase === \"beginswith\" || operatorLowerCase === \"doesnotbeginwith\") {\n    return valueIsField ? `${value} || '%'` : `'${value}%'`;\n  } else if (operatorLowerCase === \"endswith\" || operatorLowerCase === \"doesnotendwith\") {\n    return valueIsField ? `'%' || ${value}` : `'%${value}'`;\n  } else if (typeof value === \"boolean\") {\n    return `${value}`.toUpperCase();\n  }\n  return valueIsField || shouldRenderAsNumber(value, parseNumbers) ? `${trimIfString(value)}` : `'${value}'`;\n};\nconst defaultMongoDBValueProcessor = (field, operator, value, valueSource) => defaultMongoDBValueProcessorInternal({ field, operator, value, valueSource }, { parseNumbers: false });\nconst defaultMongoDBValueProcessorInternal = ({ field, operator, value, valueSource }, { parseNumbers }) => {\n  const valueIsField = valueSource === \"field\";\n  const useBareValue = [\"number\", \"boolean\", \"bigint\"].includes(typeof value) || shouldRenderAsNumber(value, parseNumbers);\n  const mongoOperator = mongoOperators[operator];\n  if ([\"<\", \"<=\", \"=\", \"!=\", \">\", \">=\"].includes(operator)) {\n    return valueIsField ? `{\"$expr\":{\"${mongoOperator}\":[\"$${field}\",\"$${value}\"]}}` : `{\"${field}\":{\"${mongoOperator}\":${useBareValue ? trimIfString(value) : `\"${value}\"`}}}`;\n  } else if (operator === \"contains\") {\n    return valueIsField ? `{\"$where\":\"this.${field}.includes(this.${value})\"}` : `{\"${field}\":{\"$regex\":\"${value}\"}}`;\n  } else if (operator === \"beginsWith\") {\n    return valueIsField ? `{\"$where\":\"this.${field}.startsWith(this.${value})\"}` : `{\"${field}\":{\"$regex\":\"^${value}\"}}`;\n  } else if (operator === \"endsWith\") {\n    return valueIsField ? `{\"$where\":\"this.${field}.endsWith(this.${value})\"}` : `{\"${field}\":{\"$regex\":\"${value}$\"}}`;\n  } else if (operator === \"doesNotContain\") {\n    return valueIsField ? `{\"$where\":\"!this.${field}.includes(this.${value})\"}` : `{\"${field}\":{\"$not\":{\"$regex\":\"${value}\"}}}`;\n  } else if (operator === \"doesNotBeginWith\") {\n    return valueIsField ? `{\"$where\":\"!this.${field}.startsWith(this.${value})\"}` : `{\"${field}\":{\"$not\":{\"$regex\":\"^${value}\"}}}`;\n  } else if (operator === \"doesNotEndWith\") {\n    return valueIsField ? `{\"$where\":\"!this.${field}.endsWith(this.${value})\"}` : `{\"${field}\":{\"$not\":{\"$regex\":\"${value}$\"}}}`;\n  } else if (operator === \"null\") {\n    return `{\"${field}\":null}`;\n  } else if (operator === \"notNull\") {\n    return `{\"${field}\":{\"$ne\":null}}`;\n  } else if (operator === \"in\" || operator === \"notIn\") {\n    const valArray = toArray(value);\n    if (valArray.length > 0) {\n      return valueIsField ? `{\"$where\":\"${operator === \"notIn\" ? \"!\" : \"\"}[${valArray.map((val) => `this.${val}`).join(\",\")}].includes(this.${field})\"}` : `{\"${field}\":{\"${mongoOperator}\":[${valArray.map((val) => shouldRenderAsNumber(val, parseNumbers) ? `${trimIfString(val)}` : `\"${val}\"`).join(\",\")}]}}`;\n    } else {\n      return \"\";\n    }\n  } else if (operator === \"between\" || operator === \"notBetween\") {\n    const valArray = toArray(value);\n    if (valArray.length >= 2 && isValidValue(valArray[0]) && isValidValue(valArray[1])) {\n      const [first, second] = valArray;\n      const firstNum = parseFloat(first);\n      const secondNum = parseFloat(second);\n      const firstValue = valueIsField || !isNaN(firstNum) ? `${first}` : `\"${first}\"`;\n      const secondValue = valueIsField || !isNaN(secondNum) ? `${second}` : `\"${second}\"`;\n      if (operator === \"between\") {\n        return valueIsField ? `{\"$and\":[{\"$expr\":{\"$gte\":[\"$${field}\",\"$${firstValue}\"]}},{\"$expr\":{\"$lte\":[\"$${field}\",\"$${secondValue}\"]}}]}` : `{\"$and\":[{\"${field}\":{\"$gte\":${firstValue}}},{\"${field}\":{\"$lte\":${secondValue}}}]}`;\n      } else {\n        return valueIsField ? `{\"$or\":[{\"$expr\":{\"$lt\":[\"$${field}\",\"$${firstValue}\"]}},{\"$expr\":{\"$gt\":[\"$${field}\",\"$${secondValue}\"]}}]}` : `{\"$or\":[{\"${field}\":{\"$lt\":${firstValue}}},{\"${field}\":{\"$gt\":${secondValue}}}]}`;\n      }\n    } else {\n      return \"\";\n    }\n  }\n  return \"\";\n};\nconst defaultCELValueProcessor = (field, operator, value, valueSource) => defaultCELValueProcessorInternal({ field, operator, value, valueSource }, { parseNumbers: false });\nconst defaultCELValueProcessorInternal = ({ field, operator, value, valueSource }, { parseNumbers }) => {\n  const valueIsField = valueSource === \"field\";\n  const operatorLowerCase = operator.toLowerCase().replace(/^=$/, \"==\");\n  const useBareValue = [\"number\", \"boolean\", \"bigint\"].includes(typeof value) || shouldRenderAsNumber(value, parseNumbers);\n  if ([\"<\", \"<=\", \"==\", \"!=\", \">\", \">=\"].includes(operatorLowerCase)) {\n    return `${field} ${operatorLowerCase} ${valueIsField || useBareValue ? trimIfString(value) : `\"${value}\"`}`;\n  } else if (operatorLowerCase === \"contains\" || operatorLowerCase === \"doesnotcontain\") {\n    const negate = operatorLowerCase === \"doesnotcontain\" ? \"!\" : \"\";\n    return `${negate}${field}.contains(${valueIsField || useBareValue ? trimIfString(value) : `\"${value}\"`})`;\n  } else if (operatorLowerCase === \"beginswith\" || operatorLowerCase === \"doesnotbeginwith\") {\n    const negate = operatorLowerCase === \"doesnotbeginwith\" ? \"!\" : \"\";\n    return `${negate}${field}.startsWith(${valueIsField || useBareValue ? trimIfString(value) : `\"${value}\"`})`;\n  } else if (operatorLowerCase === \"endswith\" || operatorLowerCase === \"doesnotendwith\") {\n    const negate = operatorLowerCase === \"doesnotendwith\" ? \"!\" : \"\";\n    return `${negate}${field}.endsWith(${valueIsField || useBareValue ? trimIfString(value) : `\"${value}\"`})`;\n  } else if (operatorLowerCase === \"null\") {\n    return `${field} == null`;\n  } else if (operatorLowerCase === \"notnull\") {\n    return `${field} != null`;\n  } else if (operatorLowerCase === \"in\" || operatorLowerCase === \"notin\") {\n    const negate = operatorLowerCase === \"notin\";\n    const valArray = toArray(value);\n    if (valArray.length > 0) {\n      return `${negate ? \"!(\" : \"\"}${field} in [${valArray.map((val) => valueIsField || shouldRenderAsNumber(val, parseNumbers) ? `${trimIfString(val)}` : `\"${val}\"`).join(\", \")}]${negate ? \")\" : \"\"}`;\n    } else {\n      return \"\";\n    }\n  } else if (operatorLowerCase === \"between\" || operatorLowerCase === \"notbetween\") {\n    const valArray = toArray(value);\n    if (valArray.length >= 2 && !!valArray[0] && !!valArray[1]) {\n      const [first, second] = valArray;\n      const firstNum = parseFloat(first);\n      const secondNum = parseFloat(second);\n      let firstValue = isNaN(firstNum) ? valueIsField ? `${first}` : `\"${first}\"` : firstNum;\n      let secondValue = isNaN(secondNum) ? valueIsField ? `${second}` : `\"${second}\"` : secondNum;\n      if (firstValue === firstNum && secondValue === secondNum && secondNum < firstNum) {\n        const tempNum = secondNum;\n        secondValue = firstNum;\n        firstValue = tempNum;\n      }\n      if (operator === \"between\") {\n        return `(${field} >= ${firstValue} && ${field} <= ${secondValue})`;\n      } else {\n        return `(${field} < ${firstValue} || ${field} > ${secondValue})`;\n      }\n    } else {\n      return \"\";\n    }\n  }\n  return \"\";\n};\nfunction formatQuery(ruleGroup, options = {}) {\n  var _a, _b, _c, _d, _e, _f;\n  let format = \"json\";\n  let valueProcessorInternal = defaultValueProcessorInternal;\n  let quoteFieldNamesWith = \"\";\n  let validator = () => true;\n  let fields = [];\n  let validationMap = {};\n  let fallbackExpression = \"\";\n  let paramPrefix = \":\";\n  let parseNumbers = false;\n  if (typeof options === \"string\") {\n    format = options.toLowerCase();\n    if (format === \"mongodb\") {\n      valueProcessorInternal = defaultMongoDBValueProcessorInternal;\n    } else if (format === \"cel\") {\n      valueProcessorInternal = defaultCELValueProcessorInternal;\n    }\n  } else {\n    format = ((_a = options.format) != null ? _a : \"json\").toLowerCase();\n    const { valueProcessor = null } = options;\n    valueProcessorInternal = typeof valueProcessor === \"function\" ? (r) => valueProcessor(r.field, r.operator, r.value, r.valueSource) : format === \"mongodb\" ? defaultMongoDBValueProcessorInternal : format === \"cel\" ? defaultCELValueProcessorInternal : defaultValueProcessorInternal;\n    quoteFieldNamesWith = (_b = options.quoteFieldNamesWith) != null ? _b : \"\";\n    validator = (_c = options.validator) != null ? _c : () => true;\n    fields = (_d = options.fields) != null ? _d : [];\n    fallbackExpression = (_e = options.fallbackExpression) != null ? _e : \"\";\n    paramPrefix = (_f = options.paramPrefix) != null ? _f : \":\";\n    parseNumbers = !!options.parseNumbers;\n  }\n  if (!fallbackExpression) {\n    fallbackExpression = format === \"mongodb\" ? '\"$and\":[{\"$expr\":true}]' : format === \"cel\" ? \"1 == 1\" : \"(1 = 1)\";\n  }\n  if (format === \"json\" || format === \"json_without_ids\") {\n    const rg = parseNumbers ? numerifyValues(ruleGroup) : ruleGroup;\n    if (format === \"json\") {\n      return JSON.stringify(rg, null, 2);\n    } else {\n      return JSON.stringify(rg, [\n        \"rules\",\n        \"field\",\n        \"value\",\n        \"operator\",\n        \"combinator\",\n        \"not\",\n        \"valueSource\"\n      ]);\n    }\n  } else {\n    if (typeof validator === \"function\") {\n      const validationResult = validator(ruleGroup);\n      if (typeof validationResult === \"boolean\") {\n        if (validationResult === false) {\n          return format === \"parameterized\" ? { sql: fallbackExpression, params: [] } : format === \"parameterized_named\" ? { sql: fallbackExpression, params: {} } : format === \"mongodb\" ? `{${fallbackExpression}}` : fallbackExpression;\n        }\n      } else {\n        validationMap = validationResult;\n      }\n    }\n    const validatorMap = {};\n    const uniqueFields = uniqByName(fields);\n    uniqueFields.forEach((f2) => {\n      if (typeof f2.validator === \"function\") {\n        validatorMap[f2.name] = f2.validator;\n      }\n    });\n    const validateRule = (rule) => {\n      let validationResult = void 0;\n      let fieldValidator = void 0;\n      if (rule.id) {\n        validationResult = validationMap[rule.id];\n      }\n      if (fields.length) {\n        const fieldArr = fields.filter((f2) => f2.name === rule.field);\n        if (fieldArr.length) {\n          const field = fieldArr[0];\n          if (typeof field.validator === \"function\") {\n            fieldValidator = field.validator;\n          }\n        }\n      }\n      return [validationResult, fieldValidator];\n    };\n    if (format === \"sql\" || format === \"parameterized\" || format === \"parameterized_named\") {\n      const parameterized = format === \"parameterized\";\n      const parameterized_named = format === \"parameterized_named\";\n      const params = [];\n      const params_named = {};\n      const fieldParamIndexes = {};\n      const getNextNamedParam = (field) => {\n        var _a2;\n        fieldParamIndexes[field] = ((_a2 = fieldParamIndexes[field]) != null ? _a2 : 0) + 1;\n        return `${field}_${fieldParamIndexes[field]}`;\n      };\n      const processRule = (rule) => {\n        var _a2, _b2, _c2;\n        const [validationResult, fieldValidator] = validateRule(rule);\n        if (!isRuleOrGroupValid(rule, validationResult, fieldValidator)) {\n          return \"\";\n        }\n        const value = valueProcessorInternal(rule, { parseNumbers });\n        const operator = mapOperator(rule.operator);\n        if ((parameterized || parameterized_named) && ((_a2 = rule.valueSource) != null ? _a2 : \"value\") === \"value\") {\n          if (operator.toLowerCase() === \"is null\" || operator.toLowerCase() === \"is not null\") {\n            return `${quoteFieldNamesWith}${rule.field}${quoteFieldNamesWith} ${operator}`;\n          } else if (operator.toLowerCase() === \"in\" || operator.toLowerCase() === \"not in\") {\n            if (value) {\n              const splitValue = toArray(rule.value);\n              if (parameterized) {\n                splitValue.forEach((v) => params.push(shouldRenderAsNumber(v, parseNumbers) ? parseFloat(v) : v));\n                return `${quoteFieldNamesWith}${rule.field}${quoteFieldNamesWith} ${operator} (${splitValue.map(() => \"?\").join(\", \")})`;\n              }\n              const inParams = [];\n              splitValue.forEach((v) => {\n                const thisParamName = getNextNamedParam(rule.field);\n                inParams.push(`${paramPrefix}${thisParamName}`);\n                params_named[thisParamName] = shouldRenderAsNumber(v, parseNumbers) ? parseFloat(v) : v;\n              });\n              return `${quoteFieldNamesWith}${rule.field}${quoteFieldNamesWith} ${operator} (${inParams.join(\", \")})`;\n            } else {\n              return \"\";\n            }\n          } else if (operator.toLowerCase() === \"between\" || operator.toLowerCase() === \"not between\") {\n            if (value) {\n              const valArray = toArray(rule.value);\n              const [first, second] = valArray.slice(0, 2).map((v) => shouldRenderAsNumber(v, parseNumbers) ? parseFloat(v) : v);\n              if (parameterized) {\n                params.push(first);\n                params.push(second);\n                return `${quoteFieldNamesWith}${rule.field}${quoteFieldNamesWith} ${operator} ? and ?`;\n              }\n              const firstParamName = getNextNamedParam(rule.field);\n              const secondParamName = getNextNamedParam(rule.field);\n              params_named[firstParamName] = first;\n              params_named[secondParamName] = second;\n              return `${quoteFieldNamesWith}${rule.field}${quoteFieldNamesWith} ${operator} ${paramPrefix}${firstParamName} and ${paramPrefix}${secondParamName}`;\n            } else {\n              return \"\";\n            }\n          }\n          let paramValue = rule.value;\n          if (typeof rule.value === \"string\") {\n            if (shouldRenderAsNumber(rule.value, parseNumbers)) {\n              paramValue = parseFloat(rule.value);\n            } else {\n              paramValue = (_c2 = (_b2 = value.match(/^('?)([^']*?)(\\1)$/)) == null ? void 0 : _b2[2]) != null ? _c2 : \"\";\n            }\n          }\n          let paramName = \"\";\n          if (parameterized) {\n            params.push(paramValue);\n          } else {\n            paramName = getNextNamedParam(rule.field);\n            params_named[paramName] = paramValue;\n          }\n          return `${quoteFieldNamesWith}${rule.field}${quoteFieldNamesWith} ${operator} ${parameterized ? \"?\" : `${paramPrefix}${paramName}`}`.trim();\n        } else {\n          if ([\"in\", \"not in\", \"between\", \"not between\"].includes(operator.toLowerCase()) && !value) {\n            return \"\";\n          }\n        }\n        return `${quoteFieldNamesWith}${rule.field}${quoteFieldNamesWith} ${operator} ${value}`.trim();\n      };\n      const processRuleGroup = (rg, outermost) => {\n        var _a2;\n        if (!isRuleOrGroupValid(rg, validationMap[(_a2 = rg.id) != null ? _a2 : \"\"])) {\n          return outermost ? fallbackExpression : \"\";\n        }\n        const processedRules = rg.rules.map((rule) => {\n          if (typeof rule === \"string\") {\n            return rule;\n          }\n          if (\"rules\" in rule) {\n            return processRuleGroup(rule);\n          }\n          return processRule(rule);\n        });\n        if (processedRules.length === 0) {\n          return fallbackExpression;\n        }\n        return `${rg.not ? \"NOT \" : \"\"}(${processedRules.filter(Boolean).join(\"combinator\" in rg ? ` ${rg.combinator} ` : \" \")})`;\n      };\n      if (parameterized) {\n        return { sql: processRuleGroup(ruleGroup, true), params };\n      } else if (parameterized_named) {\n        return { sql: processRuleGroup(ruleGroup, true), params: params_named };\n      } else {\n        return processRuleGroup(ruleGroup, true);\n      }\n    } else if (format === \"mongodb\") {\n      const processRuleGroup = (rg, outermost) => {\n        var _a2;\n        if (!isRuleOrGroupValid(rg, validationMap[(_a2 = rg.id) != null ? _a2 : \"\"])) {\n          return outermost ? fallbackExpression : \"\";\n        }\n        const combinator = `\"$${rg.combinator}\"`;\n        const expression = rg.rules.map((rule) => {\n          if (\"rules\" in rule) {\n            const processedRuleGroup = processRuleGroup(rule);\n            return processedRuleGroup ? `{${processedRuleGroup}}` : \"\";\n          }\n          const [validationResult, fieldValidator] = validateRule(rule);\n          if (!isRuleOrGroupValid(rule, validationResult, fieldValidator)) {\n            return \"\";\n          }\n          return valueProcessorInternal(rule, { parseNumbers });\n        }).filter(Boolean).join(\",\");\n        return expression ? `${combinator}:[${expression}]` : fallbackExpression;\n      };\n      if (\"combinator\" in ruleGroup) {\n        return `{${processRuleGroup(ruleGroup, true)}}`;\n      }\n      return `{${fallbackExpression}}`;\n    } else if (format === \"cel\") {\n      const processRuleGroup = (rg, outermost) => {\n        var _a2;\n        if (!isRuleOrGroupValid(rg, validationMap[(_a2 = rg.id) != null ? _a2 : \"\"])) {\n          return outermost ? fallbackExpression : \"\";\n        }\n        const expression = rg.rules.map((rule) => {\n          if (typeof rule === \"string\") {\n            return celCombinatorMap[rule];\n          }\n          if (\"rules\" in rule) {\n            return processRuleGroup(rule);\n          }\n          const [validationResult, fieldValidator] = validateRule(rule);\n          if (!isRuleOrGroupValid(rule, validationResult, fieldValidator)) {\n            return \"\";\n          }\n          return valueProcessorInternal(rule, { parseNumbers });\n        }).filter(Boolean).join(\"combinator\" in rg ? ` ${celCombinatorMap[rg.combinator]} ` : \" \");\n        const wrap = rg.not || !outermost ? { pre: `${rg.not ? \"!\" : \"\"}(`, suf: \")\" } : { pre: \"\", suf: \"\" };\n        return expression ? `${wrap.pre}${expression}${wrap.suf}` : fallbackExpression;\n      };\n      return processRuleGroup(ruleGroup, true);\n    } else {\n      return \"\";\n    }\n  }\n}\nconst generateID = () => Math.random().toString();\nconst getValidationClassNames = (validationResult) => {\n  const valid = typeof validationResult === \"boolean\" ? validationResult : typeof validationResult === \"object\" && validationResult !== null ? validationResult.valid : null;\n  return typeof valid === \"boolean\" ? valid ? standardClassnames.valid : standardClassnames.invalid : \"\";\n};\nconst getValueSourcesUtil = (fieldData, operator, getValueSources) => {\n  if (fieldData == null ? void 0 : fieldData.valueSources) {\n    if (typeof fieldData.valueSources === \"function\") {\n      return fieldData.valueSources(operator);\n    }\n    return fieldData.valueSources;\n  }\n  if (getValueSources) {\n    const vals = getValueSources(fieldData.name, operator);\n    if (vals)\n      return vals;\n  }\n  return [\"value\"];\n};\nvar sqlParser = function() {\n  var o = function(k, v, o2, l) {\n    for (o2 = o2 || {}, l = k.length; l--; o2[k[l]] = v)\n      ;\n    return o2;\n  }, $V0 = [1, 8], $V1 = [1, 4], $V2 = [2, 4], $V3 = [1, 11], $V4 = [1, 10], $V5 = [2, 16], $V6 = [1, 14], $V7 = [1, 15], $V8 = [1, 16], $V9 = [6, 8], $Va = [2, 146], $Vb = [1, 19], $Vc = [1, 20], $Vd = [16, 33, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 50, 51, 54, 55, 57, 58, 60, 76, 79, 81, 82, 83, 84, 86, 87, 88, 101, 195], $Ve = [16, 18, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 50, 51, 54, 55, 57, 58, 60, 76, 79, 81, 82, 83, 84, 86, 87, 88, 101, 195], $Vf = [2, 160], $Vg = [1, 29], $Vh = [6, 8, 14, 17, 146, 150, 152, 154], $Vi = [1, 42], $Vj = [1, 60], $Vk = [1, 52], $Vl = [1, 59], $Vm = [1, 61], $Vn = [1, 62], $Vo = [1, 63], $Vp = [1, 64], $Vq = [1, 65], $Vr = [1, 58], $Vs = [1, 53], $Vt = [1, 54], $Vu = [1, 55], $Vv = [1, 56], $Vw = [1, 57], $Vx = [1, 43], $Vy = [1, 44], $Vz = [1, 45], $VA = [1, 34], $VB = [1, 66], $VC = [16, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 50, 51, 54, 55, 57, 58, 60, 76, 79, 81, 82, 83, 84, 86, 87, 88, 101, 195], $VD = [6, 8, 14, 17, 150, 152, 154], $VE = [2, 143], $VF = [1, 75], $VG = [1, 76], $VH = [6, 8, 14, 17, 43, 133, 138, 144, 146, 150, 152, 154], $VI = [1, 81], $VJ = [1, 78], $VK = [1, 79], $VL = [1, 80], $VM = [1, 82], $VN = [6, 8, 14, 17, 36, 43, 49, 50, 51, 71, 72, 74, 77, 89, 107, 124, 125, 126, 127, 129, 133, 135, 138, 141, 142, 144, 146, 150, 152, 154, 157, 164, 165, 167, 168, 173, 177, 179, 180, 182], $VO = [6, 8, 14, 17, 34, 36, 43, 49, 50, 51, 71, 72, 74, 77, 89, 107, 112, 113, 114, 115, 116, 117, 121, 124, 125, 126, 127, 129, 133, 135, 138, 141, 142, 144, 146, 150, 152, 154, 157, 164, 165, 167, 168, 173, 177, 179, 180, 182], $VP = [1, 103], $VQ = [1, 101], $VR = [1, 102], $VS = [1, 97], $VT = [1, 98], $VU = [1, 99], $VV = [1, 100], $VW = [1, 104], $VX = [1, 105], $VY = [1, 106], $VZ = [1, 107], $V_ = [1, 108], $V$ = [1, 109], $V01 = [2, 103], $V11 = [6, 8, 14, 17, 34, 36, 43, 45, 49, 50, 51, 71, 72, 74, 77, 79, 81, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 121, 124, 125, 126, 127, 129, 133, 135, 138, 141, 142, 144, 146, 150, 152, 154, 157, 164, 165, 167, 168, 173, 177, 179, 180, 182], $V21 = [6, 8, 14, 17, 34, 36, 43, 45, 49, 50, 51, 71, 72, 74, 77, 79, 81, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 121, 124, 125, 126, 127, 129, 133, 135, 138, 141, 142, 144, 146, 150, 152, 154, 157, 164, 165, 167, 168, 173, 177, 179, 180, 182], $V31 = [1, 110], $V41 = [1, 117], $V51 = [2, 64], $V61 = [1, 118], $V71 = [16, 35, 37, 38, 39, 40, 41, 42, 45, 46, 50, 51, 54, 55, 57, 58, 60, 76, 79, 81, 82, 83, 84, 86, 87, 88, 101, 195], $V81 = [16, 29, 35, 50, 51, 54, 55, 57, 58, 60, 76, 79, 81, 82, 83, 84, 86, 87, 88, 119, 195], $V91 = [1, 164], $Va1 = [17, 43], $Vb1 = [2, 59], $Vc1 = [1, 173], $Vd1 = [1, 171], $Ve1 = [1, 172], $Vf1 = [6, 8, 138, 146], $Vg1 = [16, 35, 38, 39, 40, 41, 42, 45, 46, 50, 51, 54, 55, 57, 58, 60, 76, 79, 81, 82, 83, 84, 86, 87, 88, 101, 195], $Vh1 = [6, 8, 14, 17, 138, 144, 146, 150, 152, 154], $Vi1 = [6, 8, 14, 17, 36, 43, 49, 50, 51, 71, 72, 74, 77, 89, 125, 126, 127, 129, 133, 135, 138, 141, 142, 144, 146, 150, 152, 154, 157, 164, 165, 167, 168, 173, 177, 179, 180, 182], $Vj1 = [6, 8, 14, 17, 34, 36, 43, 49, 50, 51, 71, 72, 74, 77, 89, 91, 92, 93, 94, 99, 101, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 121, 124, 125, 126, 127, 129, 133, 135, 138, 141, 142, 144, 146, 150, 152, 154, 157, 164, 165, 167, 168, 173, 177, 179, 180, 182], $Vk1 = [6, 8, 14, 17, 34, 36, 43, 49, 50, 51, 71, 72, 74, 77, 79, 81, 89, 91, 92, 93, 94, 99, 101, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 121, 124, 125, 126, 127, 129, 133, 135, 138, 141, 142, 144, 146, 150, 152, 154, 157, 164, 165, 167, 168, 173, 177, 179, 180, 182], $Vl1 = [16, 35, 39, 40, 41, 42, 45, 46, 50, 51, 54, 55, 57, 58, 60, 76, 79, 81, 82, 83, 84, 86, 87, 88, 101, 195], $Vm1 = [16, 35, 40, 41, 42, 45, 46, 50, 51, 54, 55, 57, 58, 60, 76, 79, 81, 82, 83, 84, 86, 87, 88, 101, 195], $Vn1 = [16, 35, 42, 45, 46, 50, 51, 54, 55, 57, 58, 60, 76, 79, 81, 82, 83, 84, 86, 87, 88, 101, 195], $Vo1 = [71, 74, 77], $Vp1 = [16, 35, 45, 46, 50, 51, 54, 55, 57, 58, 60, 76, 79, 81, 82, 83, 84, 86, 87, 88, 101, 195], $Vq1 = [1, 233], $Vr1 = [1, 234], $Vs1 = [6, 8, 14, 17], $Vt1 = [6, 8, 14, 17, 43, 157], $Vu1 = [1, 251], $Vv1 = [1, 247], $Vw1 = [2, 197], $Vx1 = [1, 255], $Vy1 = [1, 256], $Vz1 = [6, 8, 14, 17, 43, 129, 135, 138, 144, 146, 150, 152, 154, 182], $VA1 = [1, 258], $VB1 = [1, 261], $VC1 = [1, 262], $VD1 = [1, 263], $VE1 = [1, 264], $VF1 = [2, 174], $VG1 = [1, 260], $VH1 = [6, 8, 14, 17, 36, 43, 89, 129, 135, 138, 144, 146, 150, 152, 154, 164, 165, 167, 168, 173, 177, 179, 180, 182], $VI1 = [6, 8, 14, 17, 135, 138, 144, 146, 150, 152, 154], $VJ1 = [1, 276], $VK1 = [2, 179], $VL1 = [170, 173], $VM1 = [6, 8, 14, 17, 36, 43, 89, 129, 135, 138, 144, 146, 150, 152, 154, 164, 165, 167, 168, 173, 177, 179, 180, 182, 192, 193, 194], $VN1 = [2, 199], $VO1 = [1, 281], $VP1 = [1, 293], $VQ1 = [1, 301], $VR1 = [1, 302], $VS1 = [1, 303], $VT1 = [6, 8, 14, 17, 138, 146, 150, 152, 154], $VU1 = [1, 313], $VV1 = [1, 319], $VW1 = [1, 320], $VX1 = [2, 204], $VY1 = [1, 331], $VZ1 = [16, 152], $V_1 = [6, 8, 14, 17, 152, 154], $V$1 = [1, 347];\n  var parser = {\n    trace: function trace() {\n    },\n    yy: {},\n    symbols_: { \"error\": 2, \"main\": 3, \"selectClause\": 4, \"semicolonOpt\": 5, \"EOF\": 6, \"unionClause\": 7, \";\": 8, \"unionClauseNotParenthesized\": 9, \"unionClauseParenthesized\": 10, \"order_by_opt\": 11, \"limit_opt\": 12, \"selectClauseParenthesized\": 13, \"UNION\": 14, \"distinctOpt\": 15, \"(\": 16, \")\": 17, \"SELECT\": 18, \"highPriorityOpt\": 19, \"maxStateMentTimeOpt\": 20, \"straightJoinOpt\": 21, \"sqlSmallResultOpt\": 22, \"sqlBigResultOpt\": 23, \"sqlBufferResultOpt\": 24, \"sqlCacheOpt\": 25, \"sqlCalcFoundRowsOpt\": 26, \"selectExprList\": 27, \"selectDataSetOpt\": 28, \"ALL\": 29, \"DISTINCT\": 30, \"DISTINCTROW\": 31, \"HIGH_PRIORITY\": 32, \"MAX_STATEMENT_TIME\": 33, \"=\": 34, \"NUMERIC\": 35, \"STRAIGHT_JOIN\": 36, \"SQL_SMALL_RESULT\": 37, \"SQL_BIG_RESULT\": 38, \"SQL_BUFFER_RESULT\": 39, \"SQL_CACHE\": 40, \"SQL_NO_CACHE\": 41, \"SQL_CALC_FOUND_ROWS\": 42, \",\": 43, \"selectExpr\": 44, \"*\": 45, \"SELECT_EXPR_STAR\": 46, \"expr\": 47, \"selectExprAliasOpt\": 48, \"AS\": 49, \"IDENTIFIER\": 50, \"STRING\": 51, \"string\": 52, \"number\": 53, \"EXPONENT_NUMERIC\": 54, \"HEX_NUMERIC\": 55, \"boolean\": 56, \"TRUE\": 57, \"FALSE\": 58, \"null\": 59, \"NULL\": 60, \"literal\": 61, \"place_holder\": 62, \"function_call\": 63, \"function_call_param_list\": 64, \"function_call_param\": 65, \"identifier\": 66, \"DOT\": 67, \"identifier_list\": 68, \"case_expr_opt\": 69, \"when_then_list\": 70, \"WHEN\": 71, \"THEN\": 72, \"case_when_else\": 73, \"ELSE\": 74, \"case_when\": 75, \"CASE\": 76, \"END\": 77, \"simple_expr_prefix\": 78, \"+\": 79, \"simple_expr\": 80, \"-\": 81, \"~\": 82, \"!\": 83, \"BINARY\": 84, \"expr_list\": 85, \"ROW\": 86, \"EXISTS\": 87, \"{\": 88, \"}\": 89, \"bit_expr\": 90, \"|\": 91, \"&\": 92, \"<<\": 93, \">>\": 94, \"/\": 95, \"DIV\": 96, \"MOD\": 97, \"%\": 98, \"^\": 99, \"not_opt\": 100, \"NOT\": 101, \"escape_opt\": 102, \"ESCAPE\": 103, \"predicate\": 104, \"IN\": 105, \"BETWEEN\": 106, \"AND\": 107, \"SOUNDS\": 108, \"LIKE\": 109, \"REGEXP\": 110, \"comparison_operator\": 111, \">=\": 112, \">\": 113, \"<=\": 114, \"<\": 115, \"<>\": 116, \"!=\": 117, \"sub_query_data_set_opt\": 118, \"ANY\": 119, \"boolean_primary\": 120, \"IS\": 121, \"boolean_extra\": 122, \"UNKNOWN\": 123, \"&&\": 124, \"||\": 125, \"OR\": 126, \"XOR\": 127, \"where_opt\": 128, \"WHERE\": 129, \"group_by_opt\": 130, \"group_by\": 131, \"roll_up_opt\": 132, \"WITH\": 133, \"ROLLUP\": 134, \"GROUP_BY\": 135, \"group_by_order_by_item_list\": 136, \"order_by\": 137, \"ORDER_BY\": 138, \"group_by_order_by_item\": 139, \"sort_opt\": 140, \"ASC\": 141, \"DESC\": 142, \"having_opt\": 143, \"HAVING\": 144, \"limit\": 145, \"LIMIT\": 146, \"OFFSET\": 147, \"procedure_opt\": 148, \"procedure\": 149, \"PROCEDURE\": 150, \"for_update_lock_in_share_mode_opt\": 151, \"FOR\": 152, \"UPDATE\": 153, \"LOCK\": 154, \"SHARE\": 155, \"MODE\": 156, \"FROM\": 157, \"table_references\": 158, \"partitionOpt\": 159, \"escaped_table_reference\": 160, \"table_reference\": 161, \"OJ\": 162, \"join_inner_cross\": 163, \"INNER\": 164, \"CROSS\": 165, \"left_right\": 166, \"LEFT\": 167, \"RIGHT\": 168, \"out_opt\": 169, \"OUTER\": 170, \"left_right_out_opt\": 171, \"join_table\": 172, \"JOIN\": 173, \"table_factor\": 174, \"join_condition\": 175, \"on_join_condition\": 176, \"NATURAL\": 177, \"join_condition_opt\": 178, \"ON\": 179, \"USING\": 180, \"partition_names\": 181, \"PARTITION\": 182, \"aliasOpt\": 183, \"index_or_key\": 184, \"INDEX\": 185, \"KEY\": 186, \"for_opt\": 187, \"identifier_list_opt\": 188, \"index_hint_list_opt\": 189, \"index_hint_list\": 190, \"index_hint\": 191, \"USE\": 192, \"IGNORE\": 193, \"FORCE\": 194, \"PLACE_HOLDER\": 195, \"$accept\": 0, \"$end\": 1 },\n    terminals_: { 2: \"error\", 6: \"EOF\", 8: \";\", 14: \"UNION\", 16: \"(\", 17: \")\", 18: \"SELECT\", 29: \"ALL\", 30: \"DISTINCT\", 31: \"DISTINCTROW\", 32: \"HIGH_PRIORITY\", 33: \"MAX_STATEMENT_TIME\", 34: \"=\", 35: \"NUMERIC\", 36: \"STRAIGHT_JOIN\", 37: \"SQL_SMALL_RESULT\", 38: \"SQL_BIG_RESULT\", 39: \"SQL_BUFFER_RESULT\", 40: \"SQL_CACHE\", 41: \"SQL_NO_CACHE\", 42: \"SQL_CALC_FOUND_ROWS\", 43: \",\", 45: \"*\", 46: \"SELECT_EXPR_STAR\", 49: \"AS\", 50: \"IDENTIFIER\", 51: \"STRING\", 54: \"EXPONENT_NUMERIC\", 55: \"HEX_NUMERIC\", 57: \"TRUE\", 58: \"FALSE\", 60: \"NULL\", 67: \"DOT\", 71: \"WHEN\", 72: \"THEN\", 74: \"ELSE\", 76: \"CASE\", 77: \"END\", 79: \"+\", 81: \"-\", 82: \"~\", 83: \"!\", 84: \"BINARY\", 86: \"ROW\", 87: \"EXISTS\", 88: \"{\", 89: \"}\", 91: \"|\", 92: \"&\", 93: \"<<\", 94: \">>\", 95: \"/\", 96: \"DIV\", 97: \"MOD\", 98: \"%\", 99: \"^\", 101: \"NOT\", 103: \"ESCAPE\", 105: \"IN\", 106: \"BETWEEN\", 107: \"AND\", 108: \"SOUNDS\", 109: \"LIKE\", 110: \"REGEXP\", 112: \">=\", 113: \">\", 114: \"<=\", 115: \"<\", 116: \"<>\", 117: \"!=\", 119: \"ANY\", 121: \"IS\", 123: \"UNKNOWN\", 124: \"&&\", 125: \"||\", 126: \"OR\", 127: \"XOR\", 129: \"WHERE\", 133: \"WITH\", 134: \"ROLLUP\", 135: \"GROUP_BY\", 138: \"ORDER_BY\", 141: \"ASC\", 142: \"DESC\", 144: \"HAVING\", 146: \"LIMIT\", 147: \"OFFSET\", 150: \"PROCEDURE\", 152: \"FOR\", 153: \"UPDATE\", 154: \"LOCK\", 155: \"SHARE\", 156: \"MODE\", 157: \"FROM\", 162: \"OJ\", 164: \"INNER\", 165: \"CROSS\", 167: \"LEFT\", 168: \"RIGHT\", 170: \"OUTER\", 173: \"JOIN\", 177: \"NATURAL\", 179: \"ON\", 180: \"USING\", 182: \"PARTITION\", 185: \"INDEX\", 186: \"KEY\", 192: \"USE\", 193: \"IGNORE\", 194: \"FORCE\", 195: \"PLACE_HOLDER\" },\n    productions_: [0, [3, 3], [3, 3], [5, 1], [5, 0], [7, 1], [7, 3], [10, 4], [10, 4], [13, 3], [9, 4], [9, 4], [4, 12], [15, 1], [15, 1], [15, 1], [15, 0], [19, 1], [19, 0], [20, 3], [20, 0], [21, 1], [21, 0], [22, 1], [22, 0], [23, 1], [23, 0], [24, 1], [24, 0], [25, 0], [25, 1], [25, 1], [26, 1], [26, 0], [27, 3], [27, 1], [44, 1], [44, 1], [44, 2], [48, 0], [48, 2], [48, 1], [48, 2], [48, 1], [52, 1], [53, 1], [53, 1], [53, 1], [56, 1], [56, 1], [59, 1], [61, 1], [61, 1], [61, 1], [61, 1], [61, 1], [63, 4], [64, 3], [64, 1], [65, 0], [65, 1], [65, 1], [65, 2], [65, 1], [66, 1], [66, 3], [68, 1], [68, 3], [69, 0], [69, 1], [70, 4], [70, 5], [73, 0], [73, 2], [75, 5], [78, 2], [78, 2], [78, 2], [78, 2], [78, 2], [80, 1], [80, 1], [80, 1], [80, 1], [80, 3], [80, 4], [80, 3], [80, 4], [80, 4], [80, 1], [90, 1], [90, 3], [90, 3], [90, 3], [90, 3], [90, 3], [90, 3], [90, 3], [90, 3], [90, 3], [90, 3], [90, 3], [90, 3], [100, 0], [100, 1], [102, 0], [102, 2], [104, 1], [104, 6], [104, 6], [104, 6], [104, 4], [104, 5], [104, 4], [111, 1], [111, 1], [111, 1], [111, 1], [111, 1], [111, 1], [111, 1], [118, 1], [118, 1], [120, 1], [120, 4], [120, 3], [120, 6], [122, 1], [122, 1], [47, 1], [47, 4], [47, 2], [47, 3], [47, 3], [47, 3], [47, 3], [47, 3], [85, 1], [85, 3], [128, 0], [128, 2], [130, 0], [130, 1], [132, 0], [132, 2], [131, 3], [11, 0], [11, 1], [137, 3], [136, 1], [136, 3], [139, 2], [140, 0], [140, 1], [140, 1], [143, 0], [143, 2], [145, 2], [145, 4], [145, 4], [12, 0], [12, 1], [148, 0], [148, 1], [149, 2], [151, 0], [151, 2], [151, 4], [28, 0], [28, 10], [158, 1], [158, 3], [160, 1], [160, 4], [163, 0], [163, 1], [163, 1], [166, 1], [166, 1], [169, 0], [169, 1], [171, 0], [171, 2], [172, 4], [172, 5], [172, 4], [172, 6], [172, 5], [178, 0], [178, 1], [176, 2], [175, 1], [175, 4], [161, 1], [161, 1], [181, 1], [181, 3], [159, 0], [159, 4], [183, 0], [183, 2], [183, 1], [184, 1], [184, 1], [187, 0], [187, 2], [187, 2], [187, 2], [188, 0], [188, 1], [189, 0], [189, 1], [190, 1], [190, 3], [191, 6], [191, 6], [191, 6], [174, 4], [174, 4], [174, 3], [62, 1]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n      var $0 = $$.length - 1;\n      switch (yystate) {\n        case 1:\n        case 2:\n          return { nodeType: \"Main\", value: $$[$0 - 2], hasSemicolon: $$[$0 - 1] };\n        case 3:\n        case 144:\n          this.$ = true;\n          break;\n        case 4:\n          this.$ = false;\n          break;\n        case 5:\n        case 13:\n        case 14:\n        case 15:\n        case 17:\n        case 19:\n        case 21:\n        case 23:\n        case 25:\n        case 27:\n        case 30:\n        case 31:\n        case 32:\n        case 51:\n        case 52:\n        case 53:\n        case 54:\n        case 55:\n        case 60:\n        case 61:\n        case 63:\n        case 69:\n        case 73:\n        case 80:\n        case 81:\n        case 82:\n        case 83:\n        case 89:\n        case 90:\n        case 104:\n        case 106:\n        case 107:\n        case 114:\n        case 115:\n        case 116:\n        case 117:\n        case 118:\n        case 119:\n        case 120:\n        case 121:\n        case 122:\n        case 123:\n        case 127:\n        case 129:\n        case 140:\n        case 142:\n        case 147:\n        case 153:\n        case 154:\n        case 156:\n        case 161:\n        case 163:\n        case 164:\n        case 175:\n        case 176:\n        case 177:\n        case 178:\n        case 180:\n        case 189:\n        case 191:\n        case 193:\n        case 194:\n        case 202:\n        case 203:\n        case 209:\n        case 211:\n          this.$ = $$[$0];\n          break;\n        case 6:\n          this.$ = $$[$0 - 2], this.$.orderBy = $$[$0 - 1], this.$.limit = $$[$0];\n          break;\n        case 7:\n        case 8:\n          this.$ = { type: \"Union\", left: $$[$0 - 3], distinctOpt: $$[$0 - 1], right: $$[$0] };\n          break;\n        case 9:\n          this.$ = { type: \"SelectParenthesized\", value: $$[$0 - 1] };\n          break;\n        case 10:\n        case 11:\n          this.$ = { type: \"Union\", left: $$[$0 - 3], distinctOpt: $$[$0 - 1], right: $$[$0] };\n          break;\n        case 12:\n          this.$ = {\n            type: \"Select\",\n            distinctOpt: $$[$0 - 10],\n            highPriorityOpt: $$[$0 - 9],\n            maxStateMentTimeOpt: $$[$0 - 8],\n            straightJoinOpt: $$[$0 - 7],\n            sqlSmallResultOpt: $$[$0 - 6],\n            sqlBigResultOpt: $$[$0 - 5],\n            sqlBufferResultOpt: $$[$0 - 4],\n            sqlCacheOpt: $$[$0 - 3],\n            sqlCalcFoundRowsOpt: $$[$0 - 2],\n            selectItems: $$[$0 - 1],\n            from: $$[$0].from,\n            partition: $$[$0].partition,\n            where: $$[$0].where,\n            groupBy: $$[$0].groupBy,\n            having: $$[$0].having,\n            orderBy: $$[$0].orderBy,\n            limit: $$[$0].limit,\n            procedure: $$[$0].procedure,\n            updateLockMode: $$[$0].updateLockMode\n          };\n          break;\n        case 16:\n        case 18:\n        case 20:\n        case 22:\n        case 24:\n        case 26:\n        case 28:\n        case 29:\n        case 33:\n        case 59:\n        case 68:\n        case 72:\n        case 103:\n        case 105:\n        case 139:\n        case 141:\n        case 143:\n        case 146:\n        case 152:\n        case 155:\n        case 160:\n        case 162:\n        case 165:\n        case 174:\n        case 179:\n        case 188:\n        case 197:\n        case 204:\n        case 208:\n        case 210:\n          this.$ = null;\n          break;\n        case 34:\n          $$[$0 - 2].value.push($$[$0]);\n          break;\n        case 35:\n          this.$ = { type: \"SelectExpr\", value: [$$[$0]] };\n          break;\n        case 36:\n        case 37:\n        case 64:\n          this.$ = { type: \"Identifier\", value: $$[$0] };\n          break;\n        case 38:\n          this.$ = $$[$0 - 1];\n          this.$.alias = $$[$0].alias;\n          this.$.hasAs = $$[$0].hasAs;\n          break;\n        case 39:\n        case 199:\n          this.$ = { alias: null, hasAs: null };\n          break;\n        case 40:\n        case 42:\n          this.$ = { alias: $$[$0], hasAs: true };\n          break;\n        case 41:\n          this.$ = { alias: $$[$0], hasAs: false };\n          break;\n        case 43:\n          this.$ = { alias: $$[$01], hasAs: false };\n          break;\n        case 44:\n          this.$ = { type: \"String\", value: $$[$0] };\n          break;\n        case 45:\n        case 46:\n        case 47:\n          this.$ = { type: \"Number\", value: $$[$0] };\n          break;\n        case 48:\n          this.$ = { type: \"Boolean\", value: \"TRUE\" };\n          break;\n        case 49:\n          this.$ = { type: \"Boolean\", value: \"FALSE\" };\n          break;\n        case 50:\n          this.$ = { type: \"Null\", value: \"null\" };\n          break;\n        case 56:\n          this.$ = { type: \"FunctionCall\", name: $$[$0 - 3], params: $$[$0 - 1] };\n          break;\n        case 57:\n          $$[$0 - 2].push($$[$0]);\n          this.$ = $$[$0 - 2];\n          break;\n        case 58:\n          this.$ = [$$[$0]];\n          break;\n        case 62:\n          this.$ = { type: \"FunctionCallParam\", distinctOpt: $$[$0 - 1], value: $$[$0] };\n          break;\n        case 65:\n          this.$ = $$[$0 - 2];\n          $$[$0 - 2].value += \".\" + $$[$0];\n          break;\n        case 66:\n          this.$ = { type: \"IdentifierList\", value: [$$[$0]] };\n          break;\n        case 67:\n        case 171:\n          this.$ = $$[$0 - 2];\n          $$[$0 - 2].value.push($$[$0]);\n          break;\n        case 70:\n          this.$ = { type: \"WhenThenList\", value: [{ when: $$[$0 - 2], then: $$[$0] }] };\n          break;\n        case 71:\n          this.$ = $$[$0 - 4];\n          this.$.value.push({ when: $$[$0 - 2], then: $$[$0] });\n          break;\n        case 74:\n          this.$ = { type: \"CaseWhen\", caseExprOpt: $$[$0 - 3], whenThenList: $$[$0 - 2], else: $$[$0 - 1] };\n          break;\n        case 75:\n        case 76:\n        case 77:\n        case 78:\n        case 79:\n          this.$ = { type: \"Prefix\", prefix: $$[$0 - 1], value: $$[$0] };\n          break;\n        case 84:\n          this.$ = { type: \"SimpleExprParentheses\", value: $$[$0 - 1] };\n          break;\n        case 85:\n          this.$ = { type: \"SimpleExprParentheses\", value: $$[$0 - 2], hasRow: true };\n          break;\n        case 86:\n          this.$ = { type: \"SubQuery\", value: $$[$0 - 1] };\n          break;\n        case 87:\n          this.$ = { type: \"SubQuery\", value: $$[$0 - 1], hasExists: true };\n          break;\n        case 88:\n          this.$ = { type: \"IdentifierExpr\", identifier: $$[$0 - 2], value: $$[$0 - 1] };\n          break;\n        case 91:\n          this.$ = { type: \"BitExpression\", operator: \"|\", left: $$[$0 - 2], right: $$[$0] };\n          break;\n        case 92:\n          this.$ = { type: \"BitExpression\", operator: \"&\", left: $$[$0 - 2], right: $$[$0] };\n          break;\n        case 93:\n          this.$ = { type: \"BitExpression\", operator: \"<<\", left: $$[$0 - 2], right: $$[$0] };\n          break;\n        case 94:\n          this.$ = { type: \"BitExpression\", operator: \">>\", left: $$[$0 - 2], right: $$[$0] };\n          break;\n        case 95:\n          this.$ = { type: \"BitExpression\", operator: \"+\", left: $$[$0 - 2], right: $$[$0] };\n          break;\n        case 96:\n          this.$ = { type: \"BitExpression\", operator: \"-\", left: $$[$0 - 2], right: $$[$0] };\n          break;\n        case 97:\n          this.$ = { type: \"BitExpression\", operator: \"*\", left: $$[$0 - 2], right: $$[$0] };\n          break;\n        case 98:\n          this.$ = { type: \"BitExpression\", operator: \"/\", left: $$[$0 - 2], right: $$[$0] };\n          break;\n        case 99:\n          this.$ = { type: \"BitExpression\", operator: \"DIV\", left: $$[$0 - 2], right: $$[$0] };\n          break;\n        case 100:\n          this.$ = { type: \"BitExpression\", operator: \"MOD\", left: $$[$0 - 2], right: $$[$0] };\n          break;\n        case 101:\n          this.$ = { type: \"BitExpression\", operator: \"%\", left: $$[$0 - 2], right: $$[$0] };\n          break;\n        case 102:\n          this.$ = { type: \"BitExpression\", operator: \"^\", left: $$[$0 - 2], right: $$[$0] };\n          break;\n        case 108:\n          this.$ = { type: \"InSubQueryPredicate\", hasNot: $$[$0 - 4], left: $$[$0 - 5], right: $$[$0 - 1] };\n          break;\n        case 109:\n          this.$ = { type: \"InExpressionListPredicate\", hasNot: $$[$0 - 4], left: $$[$0 - 5], right: $$[$0 - 1] };\n          break;\n        case 110:\n          this.$ = { type: \"BetweenPredicate\", hasNot: $$[$0 - 4], left: $$[$0 - 5], right: { left: $$[$0 - 2], right: $$[$0] } };\n          break;\n        case 111:\n          this.$ = { type: \"SoundsLikePredicate\", hasNot: false, left: $$[$0 - 3], right: $$[$0] };\n          break;\n        case 112:\n          this.$ = { type: \"LikePredicate\", hasNot: $$[$0 - 3], left: $$[$0 - 4], right: $$[$0 - 1], escape: $$[$0] };\n          break;\n        case 113:\n          this.$ = { type: \"RegexpPredicate\", hasNot: $$[$0 - 2], left: $$[$0 - 3], right: $$[$0] };\n          break;\n        case 124:\n          this.$ = { type: \"IsNullBooleanPrimary\", hasNot: $$[$0 - 1], value: $$[$0 - 3] };\n          break;\n        case 125:\n          this.$ = { type: \"ComparisonBooleanPrimary\", left: $$[$0 - 2], operator: $$[$0 - 1], right: $$[$0] };\n          break;\n        case 126:\n          this.$ = { type: \"ComparisonSubQueryBooleanPrimary\", operator: $$[$0 - 4], subQueryOpt: $$[$0 - 3], left: $$[$0 - 5], right: $$[$0 - 1] };\n          break;\n        case 128:\n          this.$ = { type: \"BooleanExtra\", value: $$[$0] };\n          break;\n        case 130:\n          this.$ = { type: \"IsExpression\", hasNot: $$[$0 - 1], left: $$[$0 - 3], right: $$[$0] };\n          break;\n        case 131:\n          this.$ = { type: \"NotExpression\", value: $$[$0] };\n          break;\n        case 132:\n        case 135:\n          this.$ = { type: \"AndExpression\", operator: $$[$0 - 1], left: $$[$0 - 2], right: $$[$0] };\n          break;\n        case 133:\n        case 134:\n          this.$ = { type: \"OrExpression\", operator: $$[$0 - 1], left: $$[$0 - 2], right: $$[$0] };\n          break;\n        case 136:\n          this.$ = { type: \"XORExpression\", left: $$[$0 - 2], right: $$[$0] };\n          break;\n        case 137:\n          this.$ = { type: \"ExpressionList\", value: [$$[$0]] };\n          break;\n        case 138:\n        case 213:\n          this.$ = $$[$0 - 2];\n          this.$.value.push($$[$0]);\n          break;\n        case 145:\n          this.$ = { type: \"GroupBy\", value: $$[$0 - 1], rollUp: $$[$0] };\n          break;\n        case 148:\n          this.$ = { type: \"OrderBy\", value: $$[$0 - 1], rollUp: $$[$0] };\n          break;\n        case 149:\n        case 195:\n          this.$ = [$$[$0]];\n          break;\n        case 150:\n          this.$ = $$[$0 - 2];\n          $$[$0 - 2].push($$[$0]);\n          break;\n        case 151:\n          this.$ = { type: \"GroupByOrderByItem\", value: $$[$0 - 1], sortOpt: $$[$0] };\n          break;\n        case 157:\n          this.$ = { type: \"Limit\", value: [$$[$0]] };\n          break;\n        case 158:\n          this.$ = { type: \"Limit\", value: [$$[$0 - 2], $$[$0]] };\n          break;\n        case 159:\n          this.$ = { type: \"Limit\", value: [$$[$0], $$[$0 - 2]], offsetMode: true };\n          break;\n        case 166:\n          this.$ = $$[$0 - 1] + \" \" + $$[$0];\n          break;\n        case 167:\n          this.$ = $$[$0 - 3] + \" \" + $$[$0 - 2] + \" \" + $$[$0 - 1] + \" \" + $$[$0];\n          break;\n        case 168:\n          this.$ = {};\n          break;\n        case 169:\n          this.$ = { from: $$[$0 - 8], partition: $$[$0 - 7], where: $$[$0 - 6], groupBy: $$[$0 - 5], having: $$[$0 - 4], orderBy: $$[$0 - 3], limit: $$[$0 - 2], procedure: $$[$0 - 1], updateLockMode: $$[$0] };\n          break;\n        case 170:\n          this.$ = { type: \"TableReferences\", value: [$$[$0]] };\n          break;\n        case 172:\n          this.$ = { type: \"TableReference\", value: $$[$0] };\n          break;\n        case 173:\n          this.$ = { type: \"TableReference\", hasOj: true, value: $$[$0 - 1] };\n          break;\n        case 181:\n          this.$ = { leftRight: null, outOpt: null };\n          break;\n        case 182:\n          this.$ = { leftRight: $$[$0 - 1], outOpt: $$[$0] };\n          break;\n        case 183:\n          this.$ = { type: \"InnerCrossJoinTable\", innerCrossOpt: $$[$0 - 2], left: $$[$0 - 3], right: $$[$0], condition: null };\n          break;\n        case 184:\n          this.$ = { type: \"InnerCrossJoinTable\", innerCrossOpt: $$[$0 - 3], left: $$[$0 - 4], right: $$[$0 - 1], condition: $$[$0] };\n          break;\n        case 185:\n          this.$ = { type: \"StraightJoinTable\", left: $$[$0 - 3], right: $$[$0 - 1], condition: $$[$0] };\n          break;\n        case 186:\n          this.$ = { type: \"LeftRightJoinTable\", leftRight: $$[$0 - 4], outOpt: $$[$0 - 3], left: $$[$0 - 5], right: $$[$0 - 1], condition: $$[$0] };\n          break;\n        case 187:\n          this.$ = { type: \"NaturalJoinTable\", leftRight: $$[$0 - 2].leftRight, outOpt: $$[$0 - 2].outOpt, left: $$[$0 - 4], right: $$[$0] };\n          break;\n        case 190:\n          this.$ = { type: \"OnJoinCondition\", value: $$[$0] };\n          break;\n        case 192:\n          this.$ = { type: \"UsingJoinCondition\", value: $$[$0 - 1] };\n          break;\n        case 196:\n          this.$ = $$[$0 - 2];\n          $$[$0 - 2].push($$[$0]);\n          break;\n        case 198:\n          this.$ = { type: \"Partitions\", value: $$[$0 - 1] };\n          break;\n        case 200:\n          this.$ = { hasAs: true, alias: $$[$0] };\n          break;\n        case 201:\n          this.$ = { hasAs: false, alias: $$[$0] };\n          break;\n        case 205:\n        case 206:\n        case 207:\n          this.$ = { type: \"ForOptIndexHint\", value: $$[$0] };\n          break;\n        case 212:\n          this.$ = { type: \"IndexHintList\", value: [$$[$0]] };\n          break;\n        case 214:\n          this.$ = { type: \"UseIndexHint\", value: $$[$0 - 1], forOpt: $$[$0 - 3], indexOrKey: $$[$0 - 4] };\n          break;\n        case 215:\n          this.$ = { type: \"IgnoreIndexHint\", value: $$[$0 - 1], forOpt: $$[$0 - 3], indexOrKey: $$[$0 - 4] };\n          break;\n        case 216:\n          this.$ = { type: \"ForceIndexHint\", value: $$[$0 - 1], forOpt: $$[$0 - 3], indexOrKey: $$[$0 - 4] };\n          break;\n        case 217:\n          this.$ = { type: \"TableFactor\", value: $$[$0 - 3], partition: $$[$0 - 2], alias: $$[$0 - 1].alias, hasAs: $$[$0 - 1].hasAs, indexHintOpt: $$[$0] };\n          break;\n        case 218:\n          this.$ = { type: \"TableFactor\", value: { type: \"SubQuery\", value: $$[$0 - 2] }, alias: $$[$0].alias, hasAs: $$[$0].hasAs };\n          break;\n        case 219:\n          this.$ = $$[$0 - 1];\n          this.$.hasParentheses = true;\n          break;\n        case 220:\n          this.$ = { type: \"PlaceHolder\", value: $$[$0], param: $$[$0].slice(2, -1) };\n          break;\n      }\n    },\n    table: [{ 3: 1, 4: 2, 7: 3, 9: 5, 10: 6, 13: 7, 16: $V0, 18: $V1 }, { 1: [3] }, { 5: 9, 6: $V2, 8: $V3, 14: $V4 }, { 5: 12, 6: $V2, 8: $V3 }, o([16, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 50, 51, 54, 55, 57, 58, 60, 76, 79, 81, 82, 83, 84, 86, 87, 88, 101, 195], $V5, { 15: 13, 29: $V6, 30: $V7, 31: $V8 }), o($V9, [2, 5]), o([6, 8, 146], $Va, { 11: 17, 137: 18, 138: $Vb }), { 14: $Vc }, { 4: 21, 18: $V1 }, { 6: [1, 22] }, { 15: 23, 18: $V5, 29: $V6, 30: $V7, 31: $V8 }, { 6: [2, 3] }, { 6: [1, 24] }, o($Vd, [2, 18], { 19: 25, 32: [1, 26] }), o($Ve, [2, 13]), o($Ve, [2, 14]), o($Ve, [2, 15]), o($V9, $Vf, { 12: 27, 145: 28, 146: $Vg }), o($Vh, [2, 147]), { 16: $Vi, 35: $Vj, 47: 32, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 136: 30, 139: 31, 195: $VB }, { 15: 67, 16: $V5, 29: $V6, 30: $V7, 31: $V8 }, { 17: [1, 68] }, { 1: [2, 1] }, { 4: 69, 9: 70, 18: $V1 }, { 1: [2, 2] }, o($VC, [2, 20], { 20: 71, 33: [1, 72] }), o($Vd, [2, 17]), o($V9, [2, 6]), o($VD, [2, 161]), { 35: [1, 73] }, o($Vh, $VE, { 132: 74, 43: $VF, 133: $VG }), o($VH, [2, 149]), o($VH, [2, 152], { 140: 77, 107: $VI, 124: $VJ, 125: $VK, 126: $VL, 127: $VM, 141: [1, 83], 142: [1, 84] }), o($VN, [2, 129], { 111: 86, 34: [1, 87], 112: [1, 88], 113: [1, 89], 114: [1, 90], 115: [1, 91], 116: [1, 92], 117: [1, 93], 121: [1, 85] }), { 16: $Vi, 35: $Vj, 47: 94, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, o($VO, [2, 123]), o($VO, [2, 107], { 100: 95, 45: $VP, 79: $VQ, 81: $VR, 91: $VS, 92: $VT, 93: $VU, 94: $VV, 95: $VW, 96: $VX, 97: $VY, 98: $VZ, 99: $V_, 101: $V$, 105: $V01, 106: $V01, 109: $V01, 110: $V01, 108: [1, 96] }), o($V11, [2, 90]), o($V21, [2, 80]), o($V21, [2, 81], { 67: $V31 }), o($V21, [2, 82]), o($V21, [2, 83]), { 4: 112, 16: $Vi, 18: $V1, 35: $Vj, 47: 113, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 85: 111, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, { 16: [1, 114] }, { 16: [1, 115] }, { 50: $V41, 66: 116 }, o($V21, [2, 89]), o($V21, [2, 51]), o($V21, [2, 52]), o($V21, [2, 53]), o($V21, [2, 54]), o($V21, [2, 55]), o([6, 8, 14, 17, 34, 36, 43, 45, 49, 50, 51, 67, 71, 72, 74, 77, 79, 81, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 121, 124, 125, 126, 127, 129, 133, 135, 138, 141, 142, 144, 146, 150, 152, 154, 157, 164, 165, 167, 168, 173, 177, 179, 180, 182], $V51, { 16: $V61 }), { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 119, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 195: $VB }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 120, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 195: $VB }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 121, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 195: $VB }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 122, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 195: $VB }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 123, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 195: $VB }, { 16: $Vi, 35: $Vj, 47: 125, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 69: 124, 71: [2, 68], 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, o($V21, [2, 44]), o($V21, [2, 45]), o($V21, [2, 46]), o($V21, [2, 47]), o($V21, [2, 48]), o($V21, [2, 49]), o($V21, [2, 50]), o($V21, [2, 220]), { 10: 127, 13: 126, 16: $V0 }, o([6, 8, 14, 138, 146], [2, 9]), o($V9, [2, 10], { 14: $V4 }), o($V9, [2, 11]), o($V71, [2, 22], { 21: 128, 36: [1, 129] }), { 34: [1, 130] }, o($VD, [2, 157], { 43: [1, 131], 147: [1, 132] }), o($Vh, [2, 148]), { 16: $Vi, 35: $Vj, 47: 32, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 139: 133, 195: $VB }, { 134: [1, 134] }, o($VH, [2, 151]), { 16: $Vi, 35: $Vj, 47: 135, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, { 16: $Vi, 35: $Vj, 47: 136, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, { 16: $Vi, 35: $Vj, 47: 137, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, { 16: $Vi, 35: $Vj, 47: 138, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, { 16: $Vi, 35: $Vj, 47: 139, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, o($VH, [2, 153]), o($VH, [2, 154]), o([57, 58, 60, 123], $V01, { 100: 140, 101: $V$ }), { 16: $Vi, 29: [1, 143], 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 104: 141, 118: 142, 119: [1, 144], 195: $VB }, o($V81, [2, 114]), o($V81, [2, 115]), o($V81, [2, 116]), o($V81, [2, 117]), o($V81, [2, 118]), o($V81, [2, 119]), o($V81, [2, 120]), o($VN, [2, 131]), { 105: [1, 145], 106: [1, 146], 109: [1, 147], 110: [1, 148] }, { 109: [1, 149] }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 150, 195: $VB }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 151, 195: $VB }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 152, 195: $VB }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 153, 195: $VB }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 154, 195: $VB }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 155, 195: $VB }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 156, 195: $VB }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 157, 195: $VB }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 158, 195: $VB }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 159, 195: $VB }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 160, 195: $VB }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 161, 195: $VB }, o([57, 58, 60, 105, 106, 109, 110, 123], [2, 104]), { 50: [1, 162] }, { 17: [1, 163], 43: $V91 }, { 17: [1, 165] }, o($Va1, [2, 137], { 107: $VI, 124: $VJ, 125: $VK, 126: $VL, 127: $VM }), { 16: $Vi, 35: $Vj, 47: 113, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 85: 166, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, { 4: 167, 18: $V1 }, { 16: $Vi, 35: $Vj, 47: 168, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 67: $V31, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, o([6, 8, 14, 16, 17, 35, 36, 43, 49, 50, 51, 54, 55, 57, 58, 60, 67, 76, 79, 81, 82, 83, 84, 86, 87, 88, 89, 101, 129, 135, 138, 144, 146, 150, 152, 154, 164, 165, 167, 168, 173, 177, 179, 180, 182, 192, 193, 194, 195], $V51), o($Va1, $Vb1, { 120: 33, 104: 35, 90: 36, 80: 37, 61: 38, 66: 39, 63: 40, 78: 41, 75: 46, 52: 47, 53: 48, 56: 49, 59: 50, 62: 51, 64: 169, 65: 170, 47: 174, 16: $Vi, 30: $Vc1, 35: $Vj, 45: $Vd1, 46: $Ve1, 50: $Vk, 51: $Vl, 54: $Vm, 55: $Vn, 57: $Vo, 58: $Vp, 60: $Vq, 76: $Vr, 79: $Vs, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 101: $VA, 195: $VB }), o($V21, [2, 75]), o($V21, [2, 76]), o($V21, [2, 77]), o($V21, [2, 78]), o($V21, [2, 79]), { 70: 175, 71: [1, 176] }, { 71: [2, 69], 107: $VI, 124: $VJ, 125: $VK, 126: $VL, 127: $VM }, o($Vf1, [2, 7], { 14: $Vc }), o($Vf1, [2, 8]), o($Vg1, [2, 24], { 22: 177, 37: [1, 178] }), o($V71, [2, 21]), { 35: [1, 179] }, { 35: [1, 180] }, { 35: [1, 181] }, o($VH, [2, 150]), o($Vh1, [2, 144]), o($VN, [2, 132]), o($Vi1, [2, 133], { 107: $VI, 124: $VJ }), o($Vi1, [2, 134], { 107: $VI, 124: $VJ }), o($VN, [2, 135]), o($Vi1, [2, 136], { 107: $VI, 124: $VJ }), { 56: 184, 57: $Vo, 58: $Vp, 60: [1, 183], 122: 182, 123: [1, 185] }, o($VO, [2, 125]), { 16: [1, 186] }, { 16: [2, 121] }, { 16: [2, 122] }, { 16: [1, 187] }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 188, 195: $VB }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 189, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 195: $VB }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 190, 195: $VB }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 191, 195: $VB }, o([6, 8, 14, 17, 34, 36, 43, 49, 50, 51, 71, 72, 74, 77, 89, 91, 101, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 121, 124, 125, 126, 127, 129, 133, 135, 138, 141, 142, 144, 146, 150, 152, 154, 157, 164, 165, 167, 168, 173, 177, 179, 180, 182], [2, 91], { 45: $VP, 79: $VQ, 81: $VR, 92: $VT, 93: $VU, 94: $VV, 95: $VW, 96: $VX, 97: $VY, 98: $VZ, 99: $V_ }), o([6, 8, 14, 17, 34, 36, 43, 49, 50, 51, 71, 72, 74, 77, 89, 91, 92, 99, 101, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 121, 124, 125, 126, 127, 129, 133, 135, 138, 141, 142, 144, 146, 150, 152, 154, 157, 164, 165, 167, 168, 173, 177, 179, 180, 182], [2, 92], { 45: $VP, 79: $VQ, 81: $VR, 93: $VU, 94: $VV, 95: $VW, 96: $VX, 97: $VY, 98: $VZ }), o($Vj1, [2, 93], { 45: $VP, 79: $VQ, 81: $VR, 95: $VW, 96: $VX, 97: $VY, 98: $VZ }), o($Vj1, [2, 94], { 45: $VP, 79: $VQ, 81: $VR, 95: $VW, 96: $VX, 97: $VY, 98: $VZ }), o($Vk1, [2, 95], { 45: $VP, 95: $VW, 96: $VX, 97: $VY, 98: $VZ }), o($Vk1, [2, 96], { 45: $VP, 95: $VW, 96: $VX, 97: $VY, 98: $VZ }), o($V11, [2, 97]), o($V11, [2, 98]), o($V11, [2, 99]), o($V11, [2, 100]), o($V11, [2, 101]), o([6, 8, 14, 17, 34, 36, 43, 49, 50, 51, 71, 72, 74, 77, 89, 91, 99, 101, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 121, 124, 125, 126, 127, 129, 133, 135, 138, 141, 142, 144, 146, 150, 152, 154, 157, 164, 165, 167, 168, 173, 177, 179, 180, 182], [2, 102], { 45: $VP, 79: $VQ, 81: $VR, 92: $VT, 93: $VU, 94: $VV, 95: $VW, 96: $VX, 97: $VY, 98: $VZ }), o([6, 8, 14, 16, 17, 34, 35, 36, 43, 45, 49, 50, 51, 54, 55, 57, 58, 60, 67, 71, 72, 74, 76, 77, 79, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 121, 124, 125, 126, 127, 129, 133, 135, 138, 141, 142, 144, 146, 150, 152, 154, 157, 164, 165, 167, 168, 173, 177, 179, 180, 182, 192, 193, 194, 195], [2, 65]), o($V21, [2, 84]), { 16: $Vi, 35: $Vj, 47: 192, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, o($V21, [2, 86]), { 17: [1, 193], 43: $V91 }, { 17: [1, 194] }, { 89: [1, 195], 107: $VI, 124: $VJ, 125: $VK, 126: $VL, 127: $VM }, { 17: [1, 196], 43: [1, 197] }, o($Va1, [2, 58]), o($Va1, [2, 60]), o($Va1, [2, 61]), { 16: $Vi, 35: $Vj, 47: 198, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, o($Va1, [2, 63], { 107: $VI, 124: $VJ, 125: $VK, 126: $VL, 127: $VM }), { 71: [1, 200], 73: 199, 74: [1, 201], 77: [2, 72] }, { 16: $Vi, 35: $Vj, 47: 202, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, o($Vl1, [2, 26], { 23: 203, 38: [1, 204] }), o($Vg1, [2, 23]), o($VC, [2, 19]), o($VD, [2, 158]), o($VD, [2, 159]), o($VN, [2, 130]), o($VO, [2, 124]), o($VN, [2, 127]), o($VN, [2, 128]), { 4: 205, 18: $V1 }, { 4: 206, 16: $Vi, 18: $V1, 35: $Vj, 47: 113, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 85: 207, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, { 45: $VP, 79: $VQ, 81: $VR, 91: $VS, 92: $VT, 93: $VU, 94: $VV, 95: $VW, 96: $VX, 97: $VY, 98: $VZ, 99: $V_, 107: [1, 208] }, o($VO, [2, 105], { 102: 209, 103: [1, 210] }), o($VO, [2, 113], { 45: $VP, 79: $VQ, 81: $VR, 91: $VS, 92: $VT, 93: $VU, 94: $VV, 95: $VW, 96: $VX, 97: $VY, 98: $VZ, 99: $V_ }), o($VO, [2, 111], { 45: $VP, 79: $VQ, 81: $VR, 91: $VS, 92: $VT, 93: $VU, 94: $VV, 95: $VW, 96: $VX, 97: $VY, 98: $VZ, 99: $V_ }), o($Va1, [2, 138], { 107: $VI, 124: $VJ, 125: $VK, 126: $VL, 127: $VM }), o($V21, [2, 85]), o($V21, [2, 87]), o($V21, [2, 88]), o($V21, [2, 56]), o($Va1, $Vb1, { 120: 33, 104: 35, 90: 36, 80: 37, 61: 38, 66: 39, 63: 40, 78: 41, 75: 46, 52: 47, 53: 48, 56: 49, 59: 50, 62: 51, 47: 174, 65: 211, 16: $Vi, 30: $Vc1, 35: $Vj, 45: $Vd1, 46: $Ve1, 50: $Vk, 51: $Vl, 54: $Vm, 55: $Vn, 57: $Vo, 58: $Vp, 60: $Vq, 76: $Vr, 79: $Vs, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 101: $VA, 195: $VB }), o($Va1, [2, 62], { 107: $VI, 124: $VJ, 125: $VK, 126: $VL, 127: $VM }), { 77: [1, 212] }, { 16: $Vi, 35: $Vj, 47: 213, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, { 16: $Vi, 35: $Vj, 47: 214, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, { 72: [1, 215], 107: $VI, 124: $VJ, 125: $VK, 126: $VL, 127: $VM }, o($Vm1, [2, 28], { 24: 216, 39: [1, 217] }), o($Vl1, [2, 25]), { 17: [1, 218] }, { 17: [1, 219] }, { 17: [1, 220], 43: $V91 }, { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 104: 221, 195: $VB }, o($VO, [2, 112]), { 16: $Vi, 35: $Vj, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 222, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 195: $VB }, o($Va1, [2, 57]), o($V21, [2, 74]), { 72: [1, 223], 107: $VI, 124: $VJ, 125: $VK, 126: $VL, 127: $VM }, { 77: [2, 73], 107: $VI, 124: $VJ, 125: $VK, 126: $VL, 127: $VM }, { 16: $Vi, 35: $Vj, 47: 224, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, o($Vn1, [2, 29], { 25: 225, 40: [1, 226], 41: [1, 227] }), o($Vm1, [2, 27]), o($VO, [2, 126]), o($VO, [2, 108]), o($VO, [2, 109]), o($VO, [2, 110]), o($VO, [2, 106]), { 16: $Vi, 35: $Vj, 47: 228, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, o($Vo1, [2, 70], { 107: $VI, 124: $VJ, 125: $VK, 126: $VL, 127: $VM }), o($Vp1, [2, 33], { 26: 229, 42: [1, 230] }), o($Vn1, [2, 30]), o($Vn1, [2, 31]), o($Vo1, [2, 71], { 107: $VI, 124: $VJ, 125: $VK, 126: $VL, 127: $VM }), { 16: $Vi, 27: 231, 35: $Vj, 44: 232, 45: $Vq1, 46: $Vr1, 47: 235, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, o($Vp1, [2, 32]), o($Vs1, [2, 168], { 28: 236, 43: [1, 237], 157: [1, 238] }), o($Vt1, [2, 35]), o($Vt1, [2, 36]), o($Vt1, [2, 37]), o($Vt1, [2, 39], { 48: 239, 49: [1, 240], 50: [1, 241], 51: [1, 242], 107: $VI, 124: $VJ, 125: $VK, 126: $VL, 127: $VM }), o($Vs1, [2, 12]), { 16: $Vi, 35: $Vj, 44: 243, 45: $Vq1, 46: $Vr1, 47: 235, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, { 16: $Vu1, 50: $V41, 66: 250, 88: $Vv1, 158: 244, 160: 245, 161: 246, 172: 249, 174: 248 }, o($Vt1, [2, 38]), { 50: [1, 252], 51: [1, 253] }, o($Vt1, [2, 41]), o($Vt1, [2, 43]), o($Vt1, [2, 34]), o([6, 8, 14, 17, 129, 135, 138, 144, 146, 150, 152, 154], $Vw1, { 159: 254, 43: $Vx1, 182: $Vy1 }), o($Vz1, [2, 170]), o($Vz1, [2, 172], { 163: 257, 166: 259, 36: $VA1, 164: $VB1, 165: $VC1, 167: $VD1, 168: $VE1, 173: $VF1, 177: $VG1 }), { 162: [1, 265] }, o($VH1, [2, 193]), o($VH1, [2, 194]), o([6, 8, 14, 17, 36, 43, 49, 50, 89, 129, 135, 138, 144, 146, 150, 152, 154, 164, 165, 167, 168, 173, 177, 179, 180, 192, 193, 194], $Vw1, { 159: 266, 67: $V31, 182: $Vy1 }), { 4: 267, 16: $Vu1, 18: $V1, 50: $V41, 66: 250, 88: $Vv1, 158: 268, 160: 245, 161: 246, 172: 249, 174: 248 }, o($Vt1, [2, 40]), o($Vt1, [2, 42]), o($VI1, [2, 139], { 128: 269, 129: [1, 270] }), { 16: $Vu1, 50: $V41, 66: 250, 88: $Vv1, 160: 271, 161: 246, 172: 249, 174: 248 }, { 16: [1, 272] }, { 173: [1, 273] }, { 16: $Vu1, 50: $V41, 66: 250, 174: 274 }, { 169: 275, 170: $VJ1, 173: $VK1 }, { 166: 278, 167: $VD1, 168: $VE1, 171: 277, 173: [2, 181] }, { 173: [2, 175] }, { 173: [2, 176] }, o($VL1, [2, 177]), o($VL1, [2, 178]), { 16: $Vu1, 50: $V41, 66: 250, 161: 279, 172: 249, 174: 248 }, o($VM1, $VN1, { 183: 280, 66: 282, 49: $VO1, 50: $V41 }), { 17: [1, 283] }, { 17: [1, 284], 43: $Vx1 }, o($Vh1, [2, 141], { 130: 285, 131: 286, 135: [1, 287] }), { 16: $Vi, 35: $Vj, 47: 288, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, o($Vz1, [2, 171]), { 50: $V41, 66: 290, 181: 289 }, { 16: $Vu1, 50: $V41, 66: 250, 174: 291 }, { 176: 292, 179: $VP1 }, { 173: [1, 294] }, { 173: [2, 180] }, { 173: [1, 295] }, { 169: 296, 170: $VJ1, 173: $VK1 }, { 36: $VA1, 89: [1, 297], 163: 257, 164: $VB1, 165: $VC1, 166: 259, 167: $VD1, 168: $VE1, 173: $VF1, 177: $VG1 }, o($VH1, [2, 210], { 189: 298, 190: 299, 191: 300, 192: $VQ1, 193: $VR1, 194: $VS1 }), { 50: $V41, 66: 304 }, o($VM1, [2, 201], { 67: $V31 }), o($VH1, $VN1, { 66: 282, 183: 305, 49: $VO1, 50: $V41 }), o($VH1, [2, 219]), o($VT1, [2, 155], { 143: 306, 144: [1, 307] }), o($Vh1, [2, 142]), { 16: $Vi, 35: $Vj, 47: 32, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 136: 308, 139: 31, 195: $VB }, o($VI1, [2, 140], { 107: $VI, 124: $VJ, 125: $VK, 126: $VL, 127: $VM }), { 17: [1, 309], 43: [1, 310] }, o($Va1, [2, 195], { 67: $V31 }), o([6, 8, 14, 17, 36, 43, 89, 129, 135, 138, 144, 146, 150, 152, 154, 164, 165, 167, 168, 173, 177, 182], [2, 183], { 175: 311, 176: 312, 179: $VP1, 180: $VU1 }), o($VH1, [2, 185]), { 16: $Vi, 35: $Vj, 47: 314, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, { 16: $Vu1, 50: $V41, 66: 250, 161: 315, 172: 249, 174: 248 }, { 16: $Vu1, 50: $V41, 66: 250, 174: 316 }, { 173: [2, 182] }, o($Vz1, [2, 173]), o($VH1, [2, 217]), o($VH1, [2, 211]), o($VH1, [2, 212]), { 184: 318, 185: $VV1, 186: $VW1 }, { 184: 321, 185: $VV1, 186: $VW1 }, { 184: 322, 185: $VV1, 186: $VW1 }, o($VM1, [2, 200], { 67: $V31 }), o($VH1, [2, 218]), o($Vh, $Va, { 137: 18, 11: 323, 138: $Vb }), { 16: $Vi, 35: $Vj, 47: 324, 50: $Vk, 51: $Vl, 52: 47, 53: 48, 54: $Vm, 55: $Vn, 56: 49, 57: $Vo, 58: $Vp, 59: 50, 60: $Vq, 61: 38, 62: 51, 63: 40, 66: 39, 75: 46, 76: $Vr, 78: 41, 79: $Vs, 80: 37, 81: $Vt, 82: $Vu, 83: $Vv, 84: $Vw, 86: $Vx, 87: $Vy, 88: $Vz, 90: 36, 101: $VA, 104: 35, 120: 33, 195: $VB }, o($Vh1, $VE, { 132: 325, 43: $VF, 133: $VG }), o([6, 8, 14, 17, 36, 43, 49, 50, 89, 129, 135, 138, 144, 146, 150, 152, 154, 164, 165, 167, 168, 173, 177, 179, 180, 182, 192, 193, 194], [2, 198]), { 50: $V41, 66: 326 }, o($VH1, [2, 184]), o($VH1, [2, 191]), { 16: [1, 327] }, o($VH1, [2, 190], { 107: $VI, 124: $VJ, 125: $VK, 126: $VL, 127: $VM }), { 36: $VA1, 163: 257, 164: $VB1, 165: $VC1, 166: 259, 167: $VD1, 168: $VE1, 173: $VF1, 175: 328, 176: 312, 177: $VG1, 179: $VP1, 180: $VU1 }, o($VH1, [2, 187]), { 191: 329, 192: $VQ1, 193: $VR1, 194: $VS1 }, { 16: $VX1, 152: $VY1, 187: 330 }, o($VZ1, [2, 202]), o($VZ1, [2, 203]), { 16: $VX1, 152: $VY1, 187: 332 }, { 16: $VX1, 152: $VY1, 187: 333 }, o($VD, $Vf, { 145: 28, 12: 334, 146: $Vg }), o($VT1, [2, 156], { 107: $VI, 124: $VJ, 125: $VK, 126: $VL, 127: $VM }), o($Vh1, [2, 145]), o($Va1, [2, 196], { 67: $V31 }), { 50: $V41, 66: 336, 68: 335 }, o($VH1, [2, 186]), o($VH1, [2, 213]), { 16: [1, 337] }, { 135: [1, 340], 138: [1, 339], 173: [1, 338] }, { 16: [1, 341] }, { 16: [1, 342] }, o($V_1, [2, 162], { 148: 343, 149: 344, 150: [1, 345] }), { 17: [1, 346], 43: $V$1 }, o($Va1, [2, 66], { 67: $V31 }), { 17: [2, 208], 50: $V41, 66: 336, 68: 349, 188: 348 }, { 16: [2, 205] }, { 16: [2, 206] }, { 16: [2, 207] }, { 50: $V41, 66: 336, 68: 350 }, { 50: $V41, 66: 336, 68: 351 }, o($Vs1, [2, 165], { 151: 352, 152: [1, 353], 154: [1, 354] }), o($V_1, [2, 163]), { 50: [1, 356], 63: 355 }, o($VH1, [2, 192]), { 50: $V41, 66: 357 }, { 17: [1, 358] }, { 17: [2, 209], 43: $V$1 }, { 17: [1, 359], 43: $V$1 }, { 17: [1, 360], 43: $V$1 }, o($Vs1, [2, 169]), { 153: [1, 361] }, { 105: [1, 362] }, o($V_1, [2, 164]), { 16: $V61 }, o($Va1, [2, 67], { 67: $V31 }), o($VH1, [2, 214]), o($VH1, [2, 215]), o($VH1, [2, 216]), o($Vs1, [2, 166]), { 155: [1, 363] }, { 156: [1, 364] }, o($Vs1, [2, 167])],\n    defaultActions: { 11: [2, 3], 22: [2, 1], 24: [2, 2], 143: [2, 121], 144: [2, 122], 261: [2, 175], 262: [2, 176], 276: [2, 180], 296: [2, 182], 338: [2, 205], 339: [2, 206], 340: [2, 207] },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n      }\n    },\n    parse: function parse(input) {\n      var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, TERROR = 2, EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer2 = Object.create(this.lexer);\n      var sharedState = { yy: {} };\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n      lexer2.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer2;\n      sharedState.yy.parser = this;\n      if (typeof lexer2.yylloc == \"undefined\") {\n        lexer2.yylloc = {};\n      }\n      var yyloc = lexer2.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer2.options && lexer2.options.ranges;\n      if (typeof sharedState.yy.parseError === \"function\") {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n      var lex = function() {\n        var token;\n        token = lexer2.lex() || EOF;\n        if (typeof token !== \"number\") {\n          token = self.symbols_[token] || token;\n        }\n        return token;\n      };\n      var symbol, state, action, r, yyval = {}, p2, len, newState, expected;\n      while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == \"undefined\") {\n            symbol = lex();\n          }\n          action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n          var errStr = \"\";\n          expected = [];\n          for (p2 in table[state]) {\n            if (this.terminals_[p2] && p2 > TERROR) {\n              expected.push(\"'\" + this.terminals_[p2] + \"'\");\n            }\n          }\n          if (lexer2.showPosition) {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + lexer2.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n          } else {\n            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == EOF ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n          }\n          this.parseError(errStr, {\n            text: lexer2.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer2.yylineno,\n            loc: yyloc,\n            expected\n          });\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer2.yytext);\n            lstack.push(lexer2.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            {\n              yyleng = lexer2.yyleng;\n              yytext = lexer2.yytext;\n              yylineno = lexer2.yylineno;\n              yyloc = lexer2.yylloc;\n            }\n            break;\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n              yyval._$.range = [\n                lstack[lstack.length - (len || 1)].range[0],\n                lstack[lstack.length - 1].range[1]\n              ];\n            }\n            r = this.performAction.apply(yyval, [\n              yytext,\n              yyleng,\n              yylineno,\n              sharedState.yy,\n              action[1],\n              vstack,\n              lstack\n            ].concat(args));\n            if (typeof r !== \"undefined\") {\n              return r;\n            }\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n          case 3:\n            return true;\n        }\n      }\n      return true;\n    }\n  };\n  var lexer = function() {\n    var lexer2 = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      setInput: function(input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = \"\";\n        this.conditionStack = [\"INITIAL\"];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n        this.offset = 0;\n        return this;\n      },\n      input: function() {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      unput: function(ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      more: function() {\n        this._more = true;\n        return this;\n      },\n      reject: function() {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n        return this;\n      },\n      less: function(n2) {\n        this.unput(this.match.slice(n2));\n      },\n      pastInput: function() {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? \"...\" : \"\") + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      upcomingInput: function() {\n        var next = this.match;\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n        return (next.substr(0, 20) + (next.length > 20 ? \"...\" : \"\")).replace(/\\n/g, \"\");\n      },\n      showPosition: function() {\n        var pre = this.pastInput();\n        var c2 = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c2 + \"^\";\n      },\n      test_match: function(match, indexed_rule) {\n        var token, lines, backup;\n        if (this.options.backtrack_lexer) {\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n          this.done = false;\n        }\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n          return false;\n        }\n        return false;\n      },\n      next: function() {\n        if (this.done) {\n          return this.EOF;\n        }\n        if (!this._input) {\n          this.done = true;\n        }\n        var token, match, tempMatch, index;\n        if (!this._more) {\n          this.yytext = \"\";\n          this.match = \"\";\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue;\n              } else {\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n        if (match) {\n          token = this.test_match(match, rules[index]);\n          if (token !== false) {\n            return token;\n          }\n          return false;\n        }\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError(\"Lexical error on line \" + (this.yylineno + 1) + \". Unrecognized text.\\n\" + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      lex: function lex() {\n        var r = this.next();\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      popState: function popState() {\n        var n2 = this.conditionStack.length - 1;\n        if (n2 > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      topState: function topState(n2) {\n        n2 = this.conditionStack.length - 1 - Math.abs(n2 || 0);\n        if (n2 >= 0) {\n          return this.conditionStack[n2];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: { \"case-insensitive\": true },\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        switch ($avoiding_name_collisions) {\n          case 0:\n            break;\n          case 1:\n            break;\n          case 2:\n            break;\n          case 3:\n            break;\n          case 4:\n            return 195;\n          case 5:\n            return 50;\n          case 6:\n            return 50;\n          case 7:\n            return 50;\n          case 8:\n            return 18;\n          case 9:\n            return 29;\n          case 10:\n            return 119;\n          case 11:\n            return 30;\n          case 12:\n            return 31;\n          case 13:\n            return 32;\n          case 14:\n            return 33;\n          case 15:\n            return 36;\n          case 16:\n            return 37;\n          case 17:\n            return 38;\n          case 18:\n            return 39;\n          case 19:\n            return 40;\n          case 20:\n            return 41;\n          case 21:\n            return 42;\n          case 22:\n            return 46;\n          case 23:\n            return 49;\n          case 24:\n            return 57;\n          case 25:\n            return 58;\n          case 26:\n            return 60;\n          case 27:\n            return \"COLLATE\";\n          case 28:\n            return 84;\n          case 29:\n            return 86;\n          case 30:\n            return 87;\n          case 31:\n            return 76;\n          case 32:\n            return 71;\n          case 33:\n            return 72;\n          case 34:\n            return 74;\n          case 35:\n            return 77;\n          case 36:\n            return 96;\n          case 37:\n            return 97;\n          case 38:\n            return 101;\n          case 39:\n            return 106;\n          case 40:\n            return 105;\n          case 41:\n            return 108;\n          case 42:\n            return 109;\n          case 43:\n            return 103;\n          case 44:\n            return 110;\n          case 45:\n            return 121;\n          case 46:\n            return 123;\n          case 47:\n            return 107;\n          case 48:\n            return 126;\n          case 49:\n            return 127;\n          case 50:\n            return 157;\n          case 51:\n            return 182;\n          case 52:\n            return 192;\n          case 53:\n            return 185;\n          case 54:\n            return 186;\n          case 55:\n            return 152;\n          case 56:\n            return 173;\n          case 57:\n            return 138;\n          case 58:\n            return 135;\n          case 59:\n            return 193;\n          case 60:\n            return 194;\n          case 61:\n            return 164;\n          case 62:\n            return 165;\n          case 63:\n            return 179;\n          case 64:\n            return 180;\n          case 65:\n            return 167;\n          case 66:\n            return 168;\n          case 67:\n            return 170;\n          case 68:\n            return 177;\n          case 69:\n            return 129;\n          case 70:\n            return 141;\n          case 71:\n            return 142;\n          case 72:\n            return 133;\n          case 73:\n            return 134;\n          case 74:\n            return 144;\n          case 75:\n            return 147;\n          case 76:\n            return 150;\n          case 77:\n            return 153;\n          case 78:\n            return 154;\n          case 79:\n            return 155;\n          case 80:\n            return 156;\n          case 81:\n            return 162;\n          case 82:\n            return 146;\n          case 83:\n            return 14;\n          case 84:\n            return 43;\n          case 85:\n            return 34;\n          case 86:\n            return 16;\n          case 87:\n            return 17;\n          case 88:\n            return 82;\n          case 89:\n            return 117;\n          case 90:\n            return 83;\n          case 91:\n            return 91;\n          case 92:\n            return 92;\n          case 93:\n            return 79;\n          case 94:\n            return 81;\n          case 95:\n            return 45;\n          case 96:\n            return 95;\n          case 97:\n            return 98;\n          case 98:\n            return 99;\n          case 99:\n            return 94;\n          case 100:\n            return 112;\n          case 101:\n            return 113;\n          case 102:\n            return 93;\n          case 103:\n            return \"<=>\";\n          case 104:\n            return 114;\n          case 105:\n            return 116;\n          case 106:\n            return 115;\n          case 107:\n            return 88;\n          case 108:\n            return 89;\n          case 109:\n            return 8;\n          case 110:\n            return 51;\n          case 111:\n            return 51;\n          case 112:\n            return 55;\n          case 113:\n            return 35;\n          case 114:\n            return 54;\n          case 115:\n            return 50;\n          case 116:\n            return 67;\n          case 117:\n            return 51;\n          case 118:\n            return 51;\n          case 119:\n            return 50;\n          case 120:\n            return 6;\n          case 121:\n            return \"INVALID\";\n        }\n      },\n      rules: [/^(?:[/][*](.|\\n)*?[*][/])/i, /^(?:[-][-]\\s.*\\n)/i, /^(?:[#]\\s.*\\n)/i, /^(?:\\s+)/i, /^(?:[$][{](.*?)[}])/i, /^(?:[`][a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*[`])/i, /^(?:[\\w]+[\\u4e00-\\u9fa5]+[0-9a-zA-Z_\\u4e00-\\u9fa5]*)/i, /^(?:[\\u4e00-\\u9fa5][0-9a-zA-Z_\\u4e00-\\u9fa5]*)/i, /^(?:SELECT\\b)/i, /^(?:ALL\\b)/i, /^(?:ANY\\b)/i, /^(?:DISTINCT\\b)/i, /^(?:DISTINCTROW\\b)/i, /^(?:HIGH_PRIORITY\\b)/i, /^(?:MAX_STATEMENT_TIME\\b)/i, /^(?:STRAIGHT_JOIN\\b)/i, /^(?:SQL_SMALL_RESULT\\b)/i, /^(?:SQL_BIG_RESULT\\b)/i, /^(?:SQL_BUFFER_RESULT\\b)/i, /^(?:SQL_CACHE\\b)/i, /^(?:SQL_NO_CACHE\\b)/i, /^(?:SQL_CALC_FOUND_ROWS\\b)/i, /^(?:([a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*\\.){1,2}\\*)/i, /^(?:AS\\b)/i, /^(?:TRUE\\b)/i, /^(?:FALSE\\b)/i, /^(?:NULL\\b)/i, /^(?:COLLATE\\b)/i, /^(?:BINARY\\b)/i, /^(?:ROW\\b)/i, /^(?:EXISTS\\b)/i, /^(?:CASE\\b)/i, /^(?:WHEN\\b)/i, /^(?:THEN\\b)/i, /^(?:ELSE\\b)/i, /^(?:END\\b)/i, /^(?:DIV\\b)/i, /^(?:MOD\\b)/i, /^(?:NOT\\b)/i, /^(?:BETWEEN\\b)/i, /^(?:IN\\b)/i, /^(?:SOUNDS\\b)/i, /^(?:LIKE\\b)/i, /^(?:ESCAPE\\b)/i, /^(?:REGEXP\\b)/i, /^(?:IS\\b)/i, /^(?:UNKNOWN\\b)/i, /^(?:AND\\b)/i, /^(?:OR\\b)/i, /^(?:XOR\\b)/i, /^(?:FROM\\b)/i, /^(?:PARTITION\\b)/i, /^(?:USE\\b)/i, /^(?:INDEX\\b)/i, /^(?:KEY\\b)/i, /^(?:FOR\\b)/i, /^(?:JOIN\\b)/i, /^(?:ORDER\\s+BY\\b)/i, /^(?:GROUP\\s+BY\\b)/i, /^(?:IGNORE\\b)/i, /^(?:FORCE\\b)/i, /^(?:INNER\\b)/i, /^(?:CROSS\\b)/i, /^(?:ON\\b)/i, /^(?:USING\\b)/i, /^(?:LEFT\\b)/i, /^(?:RIGHT\\b)/i, /^(?:OUTER\\b)/i, /^(?:NATURAL\\b)/i, /^(?:WHERE\\b)/i, /^(?:ASC\\b)/i, /^(?:DESC\\b)/i, /^(?:WITH\\b)/i, /^(?:ROLLUP\\b)/i, /^(?:HAVING\\b)/i, /^(?:OFFSET\\b)/i, /^(?:PROCEDURE\\b)/i, /^(?:UPDATE\\b)/i, /^(?:LOCK\\b)/i, /^(?:SHARE\\b)/i, /^(?:MODE\\b)/i, /^(?:OJ\\b)/i, /^(?:LIMIT\\b)/i, /^(?:UNION\\b)/i, /^(?:,)/i, /^(?:=)/i, /^(?:\\()/i, /^(?:\\))/i, /^(?:~)/i, /^(?:!=)/i, /^(?:!)/i, /^(?:\\|)/i, /^(?:&)/i, /^(?:\\+)/i, /^(?:-)/i, /^(?:\\*)/i, /^(?:\\/)/i, /^(?:%)/i, /^(?:\\^)/i, /^(?:>>)/i, /^(?:>=)/i, /^(?:>)/i, /^(?:<<)/i, /^(?:<=>)/i, /^(?:<=)/i, /^(?:<>)/i, /^(?:<)/i, /^(?:\\{)/i, /^(?:\\})/i, /^(?:;)/i, /^(?:['](\\\\.|[^'])*['])/i, /^(?:[\"](\\\\.|[^\"])*[\"])/i, /^(?:[0][x][0-9a-fA-F]+)/i, /^(?:[-]?[0-9]+(\\.[0-9]+)?)/i, /^(?:[-]?[0-9]+(\\.[0-9]+)?[eE][-][0-9]+(\\.[0-9]+)?)/i, /^(?:[a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*)/i, /^(?:\\.)/i, /^(?:[\"][a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*[\"])/i, /^(?:['][a-zA-Z_\\u4e00-\\u9fa5][a-zA-Z0-9_\\u4e00-\\u9fa5]*['])/i, /^(?:([`])(?:(?=(\\\\?))\\2.)*?\\1)/i, /^(?:$)/i, /^(?:.)/i],\n      conditions: { \"INITIAL\": { \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121], \"inclusive\": true } }\n    };\n    return lexer2;\n  }();\n  parser.lexer = lexer;\n  function Parser() {\n    this.yy = {};\n  }\n  Parser.prototype = parser;\n  parser.Parser = Parser;\n  return new Parser();\n}();\nconst isSQLExpressionNotString = (v) => !!v && typeof v !== \"string\";\nconst isSQLLiteralValue = (v) => !!v && (v.type === \"String\" || v.type === \"Number\" || v.type === \"Boolean\");\nconst isSQLIdentifier = (v) => !!v && v.type === \"Identifier\";\nconst isWildcardsOnly = (sqlExpr) => isSQLLiteralValue(sqlExpr) && sqlExpr.type === \"String\" && /^['\"]?%+['\"]?$/.test(sqlExpr.value);\nconst getParamString = (param) => {\n  switch (typeof param) {\n    case \"number\":\n      return `${param}`;\n    case \"boolean\":\n      return param ? \"TRUE\" : \"FALSE\";\n    default:\n      return `'${param}'`;\n  }\n};\nconst getFieldName = (f2) => (typeof f2 === \"string\" ? f2 : f2.value).replace(/(^`|`$)/g, \"\");\nconst normalizeCombinator = (c2) => c2.replace(\"&&\", \"and\").replace(\"||\", \"or\").toLowerCase();\nconst normalizeOperator = (op, flip) => {\n  if (flip) {\n    if (op === \"<\")\n      return \">\";\n    if (op === \"<=\")\n      return \">=\";\n    if (op === \">\")\n      return \"<\";\n    if (op === \">=\")\n      return \"<=\";\n  }\n  if (op === \"<>\")\n    return \"!=\";\n  return op;\n};\nconst evalSQLLiteralValue = (valueObj) => valueObj.type === \"String\" ? valueObj.value.replace(/^(['\"]?)(.+?)\\1$/, \"$2\") : valueObj.type === \"Boolean\" ? valueObj.value.toLowerCase() === \"true\" : parseFloat(valueObj.value);\nconst generateFlatAndOrList = (expr) => {\n  const combinator = normalizeCombinator(expr.operator);\n  if (expr.left.type === \"AndExpression\" || expr.left.type === \"OrExpression\") {\n    return [...generateFlatAndOrList(expr.left), combinator, expr.right];\n  }\n  return [expr.left, combinator, expr.right];\n};\nconst generateMixedAndOrList = (expr) => {\n  const arr = generateFlatAndOrList(expr);\n  const returnArray = [];\n  let startIndex = 0;\n  for (let i = 0; i < arr.length; i += 2) {\n    if (arr[i + 1] === \"and\") {\n      startIndex = i;\n      let j = 1;\n      while (arr[startIndex + j] === \"and\") {\n        i += 2;\n        j += 2;\n      }\n      const tempAndArray = arr.slice(startIndex, i + 1);\n      returnArray.push(tempAndArray);\n      i -= 2;\n    } else if (arr[i + 1] === \"or\") {\n      if (i === 0 || i === arr.length - 3) {\n        if (i === 0 || arr[i - 1] === \"or\") {\n          returnArray.push(arr[i]);\n        }\n        returnArray.push(arr[i + 1]);\n        if (i === arr.length - 3) {\n          returnArray.push(arr[i + 2]);\n        }\n      } else {\n        if (arr[i - 1] === \"and\") {\n          returnArray.push(arr[i + 1]);\n        } else {\n          returnArray.push(arr[i]);\n          returnArray.push(arr[i + 1]);\n        }\n      }\n    }\n  }\n  if (returnArray.length === 1 && Array.isArray(returnArray[0])) {\n    return returnArray[0];\n  }\n  return returnArray;\n};\nfunction parseSQL(sql, options) {\n  let sqlString = /^[ \\t\\n\\r\\s]*SELECT\\b/i.test(sql) ? sql : `SELECT * FROM t WHERE ${sql}`;\n  let ic = false;\n  let fieldsFlat = [];\n  const getValueSources = options == null ? void 0 : options.getValueSources;\n  if (options) {\n    const { params, paramPrefix, independentCombinators, fields } = options;\n    ic = !!independentCombinators;\n    if (params) {\n      if (Array.isArray(params)) {\n        let i = 0;\n        sqlString = sqlString.replace(/\\?/g, () => {\n          const paramString = getParamString(params[i]);\n          i++;\n          return paramString;\n        });\n      } else {\n        const keys = Object.keys(params);\n        const prefix = paramPrefix != null ? paramPrefix : \":\";\n        keys.forEach((p2) => {\n          sqlString = sqlString.replace(new RegExp(`\\\\${prefix}${p2}\\\\b`, \"ig\"), getParamString(params[p2]));\n        });\n      }\n    }\n    if (fields) {\n      const fieldsArray = Array.isArray(fields) ? fields : Object.keys(fields).map((fld) => __spreadProps(__spreadValues({}, fields[fld]), { name: fld })).sort((a, b) => a.label.localeCompare(b.label));\n      if (isOptionGroupArray(fieldsArray)) {\n        fieldsFlat = uniqByName(fieldsFlat.concat(...fieldsArray.map((opt) => opt.options)));\n      } else {\n        fieldsFlat = uniqByName(fieldsArray);\n      }\n    }\n  }\n  function fieldIsValid(fieldName, operator, subordinateFieldName) {\n    if (fieldsFlat.length === 0)\n      return true;\n    let valid = false;\n    const primaryField = fieldsFlat.find((ff) => ff.name === fieldName);\n    if (primaryField) {\n      if (!subordinateFieldName && operator !== \"notNull\" && operator !== \"null\" && !getValueSourcesUtil(primaryField, operator, getValueSources).some((vs) => vs === \"value\")) {\n        valid = false;\n      } else {\n        valid = true;\n      }\n      if (valid && !!subordinateFieldName) {\n        if (getValueSourcesUtil(primaryField, operator, getValueSources).some((vs) => vs === \"field\") && fieldName !== subordinateFieldName) {\n          const validSubordinateFields = filterFieldsByComparator(primaryField, fieldsFlat, operator);\n          if (validSubordinateFields.every((vsf) => vsf.name !== subordinateFieldName)) {\n            valid = false;\n          }\n        } else {\n          valid = false;\n        }\n      }\n    }\n    return valid;\n  }\n  const processSQLExpression = (expr) => {\n    if (expr.type === \"NotExpression\") {\n      const val = expr.value.type === \"SimpleExprParentheses\" ? expr.value.value.value[0] : expr.value;\n      const rule = processSQLExpression(val);\n      if (rule) {\n        if (\"rules\" in rule) {\n          return __spreadProps(__spreadValues({}, rule), { not: true });\n        }\n        return __spreadValues({ rules: [rule], not: true }, ic ? {} : { combinator: \"and\" });\n      }\n    } else if (expr.type === \"SimpleExprParentheses\") {\n      const ex = expr.value.value[0];\n      if (ex.type === \"AndExpression\" || ex.type === \"OrExpression\") {\n        return processSQLExpression(ex);\n      }\n      const rule = processSQLExpression(ex);\n      return rule ? __spreadValues({ rules: [rule] }, ic ? {} : { combinator: \"and\" }) : null;\n    } else if (expr.type === \"AndExpression\" || expr.type === \"OrExpression\") {\n      if (ic) {\n        const andOrList2 = generateFlatAndOrList(expr);\n        const rules2 = andOrList2.map((v) => {\n          if (typeof v === \"string\") {\n            return v;\n          }\n          return processSQLExpression(v);\n        });\n        if (rules2.includes(null)) {\n          return null;\n        }\n        return {\n          rules: rules2\n        };\n      }\n      const andOrList = generateMixedAndOrList(expr);\n      const combinator = andOrList[1];\n      const filteredList = andOrList.filter((v) => Array.isArray(v) || isSQLExpressionNotString(v)).map((v) => Array.isArray(v) ? v.filter(isSQLExpressionNotString) : v);\n      const rules = filteredList.map((exp) => {\n        if (Array.isArray(exp)) {\n          return {\n            combinator: \"and\",\n            rules: exp.map((e) => processSQLExpression(e)).filter((r) => !!r)\n          };\n        }\n        return processSQLExpression(exp);\n      }).filter((r) => !!r);\n      if (rules.length > 0) {\n        return { combinator, rules };\n      }\n    } else if (expr.type === \"IsNullBooleanPrimary\") {\n      if (isSQLIdentifier(expr.value)) {\n        const f2 = getFieldName(expr.value);\n        const operator = expr.hasNot ? \"notNull\" : \"null\";\n        if (fieldIsValid(f2, operator)) {\n          return {\n            field: f2,\n            operator,\n            value: null\n          };\n        }\n      }\n    } else if (expr.type === \"ComparisonBooleanPrimary\") {\n      if (isSQLIdentifier(expr.left) && !isSQLIdentifier(expr.right) || !isSQLIdentifier(expr.left) && isSQLIdentifier(expr.right)) {\n        const identifier = isSQLIdentifier(expr.left) ? expr.left.value : expr.right.value;\n        const valueObj = [expr.left, expr.right].find((t) => !isSQLIdentifier(t));\n        if (isSQLLiteralValue(valueObj)) {\n          const f2 = getFieldName(identifier);\n          const operator = normalizeOperator(expr.operator, isSQLIdentifier(expr.right));\n          if (fieldIsValid(f2, operator)) {\n            return {\n              field: f2,\n              operator,\n              value: evalSQLLiteralValue(valueObj)\n            };\n          }\n        }\n      } else if (isSQLIdentifier(expr.left) && isSQLIdentifier(expr.right)) {\n        const f2 = getFieldName(expr.left);\n        const sf = getFieldName(expr.right);\n        const operator = normalizeOperator(expr.operator);\n        if (fieldIsValid(f2, operator, sf)) {\n          return {\n            field: f2,\n            operator,\n            value: sf,\n            valueSource: \"field\"\n          };\n        }\n      }\n    } else if (expr.type === \"InExpressionListPredicate\") {\n      if (isSQLIdentifier(expr.left)) {\n        const f2 = getFieldName(expr.left);\n        const valueArray = expr.right.value.filter(isSQLLiteralValue).map(evalSQLLiteralValue);\n        const operator = expr.hasNot ? \"notIn\" : \"in\";\n        const fieldArray = expr.right.value.filter(isSQLIdentifier).filter((sf) => fieldIsValid(f2, operator, sf.value)).map(getFieldName);\n        if (valueArray.length > 0) {\n          const value = (options == null ? void 0 : options.listsAsArrays) ? valueArray : valueArray.join(\", \");\n          return { field: getFieldName(expr.left), operator, value };\n        } else if (fieldArray.length > 0) {\n          const value = (options == null ? void 0 : options.listsAsArrays) ? fieldArray : fieldArray.join(\", \");\n          return { field: getFieldName(expr.left), operator, value, valueSource: \"field\" };\n        }\n      }\n    } else if (expr.type === \"BetweenPredicate\") {\n      if (isSQLIdentifier(expr.left) && isSQLLiteralValue(expr.right.left) && isSQLLiteralValue(expr.right.right)) {\n        const valueArray = [expr.right.left, expr.right.right].map(evalSQLLiteralValue);\n        const value = (options == null ? void 0 : options.listsAsArrays) ? valueArray : valueArray.join(\", \");\n        const operator = expr.hasNot ? \"notBetween\" : \"between\";\n        return { field: getFieldName(expr.left), operator, value };\n      } else if (isSQLIdentifier(expr.left) && isSQLIdentifier(expr.right.left) && isSQLIdentifier(expr.right.right)) {\n        const f2 = getFieldName(expr.left);\n        const valueArray = [expr.right.left, expr.right.right].map(getFieldName);\n        const operator = expr.hasNot ? \"notBetween\" : \"between\";\n        if (valueArray.every((sf) => fieldIsValid(f2, operator, sf))) {\n          const value = (options == null ? void 0 : options.listsAsArrays) ? valueArray : valueArray.join(\", \");\n          return { field: f2, operator, value, valueSource: \"field\" };\n        }\n      }\n    } else if (expr.type === \"LikePredicate\") {\n      if (isSQLIdentifier(expr.left) && expr.right.type === \"String\") {\n        const valueWithWildcards = evalSQLLiteralValue(expr.right);\n        const valueWithoutWildcards = valueWithWildcards.replace(/(^%)|(%$)/g, \"\");\n        let operator = \"=\";\n        if (/^%.*%$/.test(valueWithWildcards) || valueWithWildcards === \"%\") {\n          operator = expr.hasNot ? \"doesNotContain\" : \"contains\";\n        } else if (/%$/.test(valueWithWildcards)) {\n          operator = expr.hasNot ? \"doesNotBeginWith\" : \"beginsWith\";\n        } else if (/^%/.test(valueWithWildcards)) {\n          operator = expr.hasNot ? \"doesNotEndWith\" : \"endsWith\";\n        }\n        const f2 = getFieldName(expr.left);\n        if (fieldIsValid(f2, operator)) {\n          return { field: f2, operator, value: valueWithoutWildcards };\n        }\n      } else if (isSQLIdentifier(expr.left) && expr.right.type === \"OrExpression\" && expr.right.operator === \"||\") {\n        let subordinateFieldName = \"\";\n        let operator = \"=\";\n        if (isSQLIdentifier(expr.right.right) && isWildcardsOnly(expr.right.left)) {\n          subordinateFieldName = getFieldName(expr.right.right);\n          operator = expr.hasNot ? \"doesNotEndWith\" : \"endsWith\";\n        } else if (isSQLIdentifier(expr.right.left) && isWildcardsOnly(expr.right.right)) {\n          subordinateFieldName = getFieldName(expr.right.left);\n          operator = expr.hasNot ? \"doesNotBeginWith\" : \"beginsWith\";\n        } else if (isWildcardsOnly(expr.right.right) && expr.right.left.type === \"OrExpression\" && expr.right.left.operator === \"||\" && isWildcardsOnly(expr.right.left.left) && isSQLIdentifier(expr.right.left.right)) {\n          subordinateFieldName = getFieldName(expr.right.left.right);\n          operator = expr.hasNot ? \"doesNotContain\" : \"contains\";\n        }\n        const baseFieldName = getFieldName(expr.left);\n        if (operator !== \"=\" && fieldIsValid(baseFieldName, operator, subordinateFieldName)) {\n          return {\n            field: baseFieldName,\n            operator,\n            value: subordinateFieldName,\n            valueSource: \"field\"\n          };\n        }\n      } else if (isSQLIdentifier(expr.left) && isSQLIdentifier(expr.right)) {\n        const baseFieldName = getFieldName(expr.left);\n        const subordinateFieldName = getFieldName(expr.right);\n        const operator = \"=\";\n        if (fieldIsValid(baseFieldName, operator, subordinateFieldName)) {\n          return {\n            field: baseFieldName,\n            operator,\n            value: subordinateFieldName,\n            valueSource: \"field\"\n          };\n        }\n      }\n    }\n    return null;\n  };\n  const { where } = sqlParser.parse(sqlString).value;\n  if (where) {\n    const result = processSQLExpression(where);\n    if (result) {\n      if (\"rules\" in result) {\n        return result;\n      }\n      return __spreadValues({ rules: [result] }, ic ? {} : { combinator: \"and\" });\n    }\n  }\n  return __spreadValues({ rules: [] }, ic ? {} : { combinator: \"and\" });\n}\nconst findPath = (path, query) => {\n  let target = query;\n  let level = 0;\n  while (level < path.length && target && \"rules\" in target) {\n    const t = target.rules[path[level]];\n    if (typeof t !== \"string\") {\n      target = t;\n    } else {\n      target = null;\n    }\n    level++;\n  }\n  return target;\n};\nconst getParentPath = (path) => path.slice(0, path.length - 1);\nconst pathsAreEqual = (path1, path2) => path1.length === path2.length && path1.every((val, idx) => val === path2[idx]);\nconst isAncestor = (maybeAncestor, path) => maybeAncestor.length < path.length && RegExp(`^${maybeAncestor.join(\"-\")}`).test(path.join(\"-\"));\nconst getCommonAncestorPath = (path1, path2) => {\n  const commonAncestorPath = [];\n  const parentPath1 = getParentPath(path1);\n  const parentPath2 = getParentPath(path2);\n  let i = 0;\n  while (i < parentPath1.length && i < parentPath2.length && parentPath1[i] === parentPath2[i]) {\n    commonAncestorPath.push(parentPath2[i]);\n    i++;\n  }\n  return commonAncestorPath;\n};\nconst pathIsDisabled = (path, query) => {\n  let disabled = !!query.disabled;\n  let target = query;\n  let level = 0;\n  while (level < path.length && !disabled && \"rules\" in target) {\n    const t = target.rules[path[level]];\n    if (typeof t === \"object\" && (\"rules\" in t || \"field\" in t)) {\n      disabled = !!t.disabled;\n      target = t;\n    }\n    level++;\n  }\n  return disabled;\n};\nconst prepareRule = (rule) => produce(rule, (draft) => {\n  if (!draft.id) {\n    draft.id = `r-${generateID()}`;\n  }\n});\nconst prepareRuleGroup = (queryObject) => produce(queryObject, (draft) => {\n  if (!draft.id) {\n    draft.id = `g-${generateID()}`;\n  }\n  draft.rules = draft.rules.map((r) => typeof r === \"string\" ? r : \"rules\" in r ? prepareRuleGroup(r) : prepareRule(r));\n  draft.not = !!draft.not;\n});\nconst prepareRuleOrGroup = (rg) => \"rules\" in rg ? prepareRuleGroup(rg) : prepareRule(rg);\nconst regenerateID = (rule) => JSON.parse(JSON.stringify(__spreadProps(__spreadValues({}, rule), { id: `r-${generateID()}` })));\nconst regenerateIDs = (ruleGroup) => {\n  if (\"combinator\" in ruleGroup) {\n    const { combinator, not: not2 } = ruleGroup;\n    const rules2 = ruleGroup.rules.map((r) => \"rules\" in r ? regenerateIDs(r) : regenerateID(r));\n    return { id: `g-${generateID()}`, combinator, rules: rules2, not: not2 };\n  }\n  const { not } = ruleGroup;\n  const rules = ruleGroup.rules.map((r) => typeof r === \"string\" ? r : \"rules\" in r ? regenerateIDs(r) : regenerateID(r));\n  return { id: `g-${generateID()}`, rules, not };\n};\nconst add = (query, ruleOrGroup, parentPath) => produce(query, (draft) => {\n  const parent = findPath(parentPath, draft);\n  if (!(\"combinator\" in parent) && parent.rules.length > 0) {\n    const prevCombinator = parent.rules[parent.rules.length - 2];\n    parent.rules.push(typeof prevCombinator === \"string\" ? prevCombinator : defaultCombinators[0].name);\n  }\n  parent.rules.push(prepareRuleOrGroup(ruleOrGroup));\n});\nconst update = (query, prop, value, path, {\n  resetOnFieldChange = true,\n  resetOnOperatorChange = false,\n  getRuleDefaultOperator = () => \"=\",\n  getValueSources = () => [\"value\"],\n  getRuleDefaultValue = () => \"\"\n} = {}) => produce(query, (draft) => {\n  if (prop === \"combinator\" && !(\"combinator\" in draft)) {\n    const parentRules = findPath(getParentPath(path), draft).rules;\n    if (path[path.length - 1] % 2 === 1) {\n      parentRules[path[path.length - 1]] = value;\n    }\n    return;\n  } else {\n    const ruleOrGroup = findPath(path, draft);\n    const isGroup = \"rules\" in ruleOrGroup;\n    if (ruleOrGroup[prop] !== value) {\n      if (prop !== \"valueSource\") {\n        ruleOrGroup[prop] = value;\n      }\n      if (!isGroup) {\n        let resetValueSource = false;\n        let resetValue = false;\n        if (resetOnFieldChange && prop === \"field\") {\n          ruleOrGroup.operator = getRuleDefaultOperator(value);\n          resetValueSource = true;\n          resetValue = true;\n        }\n        if (resetOnOperatorChange && prop === \"operator\") {\n          resetValueSource = true;\n          resetValue = true;\n        }\n        const defaultValueSource = getValueSources(ruleOrGroup.field, ruleOrGroup.operator)[0];\n        if (resetValueSource && ruleOrGroup.valueSource && defaultValueSource !== ruleOrGroup.valueSource || prop === \"valueSource\" && value !== ruleOrGroup.valueSource) {\n          resetValue = !!ruleOrGroup.valueSource || !ruleOrGroup.valueSource && value !== defaultValueSource;\n          ruleOrGroup.valueSource = resetValueSource ? defaultValueSource : value;\n        }\n        if (resetValue) {\n          ruleOrGroup.value = getRuleDefaultValue(ruleOrGroup);\n        }\n      }\n    }\n  }\n});\nconst remove = (query, path) => {\n  if (path.length === 0 || !(\"combinator\" in query) && !findPath(path, query)) {\n    return query;\n  }\n  return produce(query, (draft) => {\n    const index = path[path.length - 1];\n    const parent = findPath(getParentPath(path), draft);\n    if (!(\"combinator\" in parent) && parent.rules.length > 1) {\n      const idxStartDelete = index === 0 ? 0 : index - 1;\n      parent.rules.splice(idxStartDelete, 2);\n    } else {\n      parent.rules.splice(index, 1);\n    }\n  });\n};\nconst move = (query, oldPath, newPath, { clone = false, combinators = defaultCombinators } = {}) => {\n  if (pathsAreEqual(oldPath, newPath)) {\n    return query;\n  }\n  const ruleOrGroupOriginal = findPath(oldPath, query);\n  if (!ruleOrGroupOriginal) {\n    return query;\n  }\n  const ruleOrGroup = clone ? \"rules\" in ruleOrGroupOriginal ? regenerateIDs(ruleOrGroupOriginal) : regenerateID(ruleOrGroupOriginal) : ruleOrGroupOriginal;\n  const commonAncestorPath = getCommonAncestorPath(oldPath, newPath);\n  const movingOnUp = newPath[commonAncestorPath.length] <= oldPath[commonAncestorPath.length];\n  return produce(query, (draft) => {\n    const independentCombinators = !(\"combinator\" in draft);\n    const parentOfRuleToRemove = findPath(getParentPath(oldPath), draft);\n    const ruleToRemoveIndex = oldPath[oldPath.length - 1];\n    const oldPrevCombinator = independentCombinators && ruleToRemoveIndex > 0 ? parentOfRuleToRemove.rules[ruleToRemoveIndex - 1] : null;\n    const oldNextCombinator = independentCombinators && ruleToRemoveIndex < parentOfRuleToRemove.rules.length - 1 ? parentOfRuleToRemove.rules[ruleToRemoveIndex + 1] : null;\n    if (!clone) {\n      const idxStartDelete = independentCombinators ? Math.max(0, ruleToRemoveIndex - 1) : ruleToRemoveIndex;\n      const deleteLength = independentCombinators ? 2 : 1;\n      parentOfRuleToRemove.rules.splice(idxStartDelete, deleteLength);\n    }\n    const newNewPath = [...newPath];\n    if (!movingOnUp && !clone) {\n      newNewPath[commonAncestorPath.length] -= independentCombinators ? 2 : 1;\n    }\n    const newNewParentPath = getParentPath(newNewPath);\n    const parentToInsertInto = findPath(newNewParentPath, draft);\n    const newIndex = newNewPath[newNewPath.length - 1];\n    const insertRuleOrGroup = (...args) => parentToInsertInto.rules.splice(newIndex, 0, ...args);\n    if (parentToInsertInto.rules.length === 0 || !independentCombinators) {\n      insertRuleOrGroup(ruleOrGroup);\n    } else {\n      if (newIndex === 0) {\n        if (ruleToRemoveIndex === 0 && oldNextCombinator) {\n          insertRuleOrGroup(ruleOrGroup, oldNextCombinator);\n        } else {\n          const newNextCombinator = parentToInsertInto.rules[1] || oldPrevCombinator || getFirstOption(combinators);\n          insertRuleOrGroup(ruleOrGroup, newNextCombinator);\n        }\n      } else {\n        if (oldPrevCombinator) {\n          insertRuleOrGroup(oldPrevCombinator, ruleOrGroup);\n        } else {\n          const newPrevCombinator = parentToInsertInto.rules[newIndex - 2] || oldNextCombinator || getFirstOption(combinators);\n          insertRuleOrGroup(newPrevCombinator, ruleOrGroup);\n        }\n      }\n    }\n  });\n};\nconst ValueSelector = ({\n  className,\n  handleOnChange,\n  options,\n  title,\n  value,\n  multiple,\n  disabled,\n  testID\n}) => {\n  const onChange = useMemo(() => {\n    if (multiple) {\n      return (e) => handleOnChange([...e.target.options].filter((o) => o.selected).map((o) => o.value).join(\",\"));\n    }\n    return (e) => handleOnChange(e.target.value);\n  }, [handleOnChange, multiple]);\n  return /* @__PURE__ */ jsx(\"select\", {\n    \"data-testid\": testID,\n    className,\n    value: multiple && value ? value.split(\",\") : value,\n    title,\n    disabled,\n    multiple: !!multiple,\n    onChange,\n    children: toOptions(options)\n  });\n};\nValueSelector.displayName = \"ValueSelector\";\nconst ValueEditor = (_a) => {\n  var _b = _a, {\n    operator,\n    value,\n    handleOnChange,\n    title,\n    className,\n    type,\n    inputType,\n    values,\n    fieldData,\n    disabled,\n    testID\n  } = _b, props = __objRest(_b, [\n    \"operator\",\n    \"value\",\n    \"handleOnChange\",\n    \"title\",\n    \"className\",\n    \"type\",\n    \"inputType\",\n    \"values\",\n    \"fieldData\",\n    \"disabled\",\n    \"testID\"\n  ]);\n  var _a2;\n  useEffect(() => {\n    if (inputType === \"number\" && ![\"between\", \"notBetween\", \"in\", \"notIn\"].includes(operator) && typeof value === \"string\" && value.includes(\",\")) {\n      handleOnChange(\"\");\n    }\n  }, [handleOnChange, inputType, operator, value]);\n  if (operator === \"null\" || operator === \"notNull\") {\n    return null;\n  }\n  const placeHolderText = (_a2 = fieldData == null ? void 0 : fieldData.placeholder) != null ? _a2 : \"\";\n  const inputTypeCoerced = [\"between\", \"notBetween\", \"in\", \"notIn\"].includes(operator) ? \"text\" : inputType || \"text\";\n  switch (type) {\n    case \"select\":\n    case \"multiselect\":\n      return /* @__PURE__ */ jsx(ValueSelector, __spreadProps(__spreadValues({}, props), {\n        testID,\n        className,\n        title,\n        handleOnChange,\n        disabled,\n        value,\n        options: values,\n        multiple: type === \"multiselect\"\n      }));\n    case \"textarea\":\n      return /* @__PURE__ */ jsx(\"textarea\", {\n        \"data-testid\": testID,\n        placeholder: placeHolderText,\n        value,\n        title,\n        className,\n        disabled,\n        onChange: (e) => handleOnChange(e.target.value)\n      });\n    case \"switch\":\n    case \"checkbox\":\n      return /* @__PURE__ */ jsx(\"input\", {\n        \"data-testid\": testID,\n        type: \"checkbox\",\n        className,\n        title,\n        onChange: (e) => handleOnChange(e.target.checked),\n        checked: !!value,\n        disabled\n      });\n    case \"radio\":\n      return /* @__PURE__ */ jsx(\"span\", {\n        \"data-testid\": testID,\n        className,\n        title,\n        children: values && values.map((v) => /* @__PURE__ */ jsxs(\"label\", {\n          children: [/* @__PURE__ */ jsx(\"input\", {\n            type: \"radio\",\n            value: v.name,\n            disabled,\n            checked: value === v.name,\n            onChange: (e) => handleOnChange(e.target.value)\n          }), v.label]\n        }, v.name))\n      });\n  }\n  return /* @__PURE__ */ jsx(\"input\", {\n    \"data-testid\": testID,\n    type: inputTypeCoerced,\n    placeholder: placeHolderText,\n    value,\n    title,\n    className,\n    disabled,\n    onChange: (e) => handleOnChange(e.target.value)\n  });\n};\nValueEditor.displayName = \"ValueEditor\";\nconst ActionElement = ({\n  className,\n  handleOnClick,\n  label,\n  title,\n  disabled,\n  disabledTranslation,\n  testID\n}) => /* @__PURE__ */ jsx(\"button\", {\n  type: \"button\",\n  \"data-testid\": testID,\n  disabled: disabled && !disabledTranslation,\n  className,\n  title: disabledTranslation && disabled ? disabledTranslation.title : title,\n  onClick: (e) => handleOnClick(e),\n  children: disabledTranslation && disabled ? disabledTranslation.label : label\n});\nActionElement.displayName = \"ActionElement\";\nconst NotToggle = ({\n  className,\n  handleOnChange,\n  title,\n  label,\n  checked,\n  disabled,\n  testID\n}) => /* @__PURE__ */ jsxs(\"label\", {\n  \"data-testid\": testID,\n  className,\n  title,\n  children: [/* @__PURE__ */ jsx(\"input\", {\n    type: \"checkbox\",\n    onChange: (e) => handleOnChange(e.target.checked),\n    checked: !!checked,\n    disabled\n  }), label]\n});\nNotToggle.displayName = \"NotToggle\";\nconst DragHandle = forwardRef(({\n  className,\n  label,\n  title,\n  testID\n}, dragRef) => /* @__PURE__ */ jsx(\"span\", {\n  \"data-testid\": testID,\n  ref: dragRef,\n  className,\n  title,\n  children: label\n}));\nDragHandle.displayName = \"DragHandle\";\nconst Rule = ({\n  id,\n  path,\n  field,\n  operator,\n  value,\n  translations,\n  schema,\n  disabled: disabledProp,\n  parentDisabled,\n  context,\n  valueSource\n}) => {\n  var _a, _b, _c, _d, _e, _f, _g;\n  const {\n    classNames,\n    controls,\n    fields,\n    fieldMap,\n    getInputType,\n    getOperators,\n    getValueEditorType,\n    getValueSources,\n    getValues,\n    moveRule,\n    onPropChange,\n    onRuleRemove,\n    autoSelectField,\n    showCloneButtons,\n    showLockButtons,\n    independentCombinators,\n    validationMap\n  } = schema;\n  const disabled = !!parentDisabled || !!disabledProp;\n  const dndRef = useRef(null);\n  const dragRef = useRef(null);\n  const [{\n    isDragging,\n    dragMonitorId\n  }, drag, preview] = useDrag(() => ({\n    type: DNDType.rule,\n    item: () => ({\n      path\n    }),\n    canDrag: !disabled,\n    collect: (monitor) => ({\n      isDragging: !disabled && monitor.isDragging(),\n      dragMonitorId: monitor.getHandlerId()\n    })\n  }), [disabled, path]);\n  const [{\n    isOver,\n    dropMonitorId\n  }, drop] = useDrop(() => ({\n    accept: [DNDType.rule, DNDType.ruleGroup],\n    canDrop: (item) => {\n      if (disabled)\n        return false;\n      const parentHoverPath = getParentPath(path);\n      const parentItemPath = getParentPath(item.path);\n      const hoverIndex = path[path.length - 1];\n      const itemIndex = item.path[item.path.length - 1];\n      return !(isAncestor(item.path, path) || pathsAreEqual(parentHoverPath, parentItemPath) && (hoverIndex === itemIndex || hoverIndex === itemIndex - 1 || independentCombinators && hoverIndex === itemIndex - 2));\n    },\n    collect: (monitor) => ({\n      isOver: monitor.canDrop() && monitor.isOver(),\n      dropMonitorId: monitor.getHandlerId()\n    }),\n    drop: (item, _monitor) => {\n      const parentHoverPath = getParentPath(path);\n      const hoverIndex = path[path.length - 1];\n      moveRule(item.path, [...parentHoverPath, hoverIndex + 1]);\n    }\n  }), [disabled, moveRule, path]);\n  drag(dragRef);\n  preview(drop(dndRef));\n  const generateOnChangeHandler = (prop) => (value2) => {\n    if (!disabled) {\n      onPropChange(prop, value2, path);\n    }\n  };\n  const cloneRule = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!disabled) {\n      const newPath = [...getParentPath(path), path[path.length - 1] + 1];\n      moveRule(path, newPath, true);\n    }\n  };\n  const toggleLockRule = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    onPropChange(\"disabled\", !disabled, path);\n  };\n  const removeRule = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!disabled) {\n      onRuleRemove(path);\n    }\n  };\n  const fieldData = (_a = fieldMap == null ? void 0 : fieldMap[field]) != null ? _a : {};\n  const inputType = (_b = fieldData.inputType) != null ? _b : getInputType(field, operator);\n  const operators = (_c = fieldData.operators) != null ? _c : getOperators(field);\n  const valueSources = typeof fieldData.valueSources === \"function\" ? fieldData.valueSources(operator) : (_d = fieldData.valueSources) != null ? _d : getValueSources(field, operator);\n  const valueEditorType = valueSource === \"field\" ? \"select\" : (_e = typeof fieldData.valueEditorType === \"function\" ? fieldData.valueEditorType(operator) : fieldData.valueEditorType) != null ? _e : getValueEditorType(field, operator);\n  const values = valueSource === \"field\" ? filterFieldsByComparator(fieldData, fields, operator) : (_f = fieldData.values) != null ? _f : getValues(field, operator);\n  const level = path.length;\n  const vsOptions = valueSources.map((vs) => ({\n    name: vs,\n    label: vs\n  }));\n  const validationResult = (_g = validationMap[id != null ? id : \"\"]) != null ? _g : typeof fieldData.validator === \"function\" ? fieldData.validator({\n    id,\n    field,\n    operator,\n    value\n  }) : null;\n  const validationClassName = getValidationClassNames(validationResult);\n  const dndDragging = isDragging ? standardClassnames.dndDragging : \"\";\n  const dndOver = isOver ? standardClassnames.dndOver : \"\";\n  const outerClassName = c(standardClassnames.rule, classNames.rule, disabled ? standardClassnames.disabled : \"\", validationClassName, dndDragging, dndOver);\n  return /* @__PURE__ */ jsxs(\"div\", {\n    ref: dndRef,\n    \"data-testid\": TestID.rule,\n    \"data-dragmonitorid\": dragMonitorId,\n    \"data-dropmonitorid\": dropMonitorId,\n    className: outerClassName,\n    \"data-rule-id\": id,\n    \"data-level\": level,\n    \"data-path\": JSON.stringify(path),\n    children: [/* @__PURE__ */ jsx(controls.dragHandle, {\n      testID: TestID.dragHandle,\n      ref: dragRef,\n      level,\n      path,\n      title: translations.dragHandle.title,\n      label: translations.dragHandle.label,\n      className: c(standardClassnames.dragHandle, classNames.dragHandle),\n      disabled,\n      context,\n      validation: validationResult\n    }), /* @__PURE__ */ jsx(controls.fieldSelector, {\n      testID: TestID.fields,\n      options: fields,\n      title: translations.fields.title,\n      value: field,\n      operator,\n      className: c(standardClassnames.fields, classNames.fields),\n      handleOnChange: generateOnChangeHandler(\"field\"),\n      level,\n      path,\n      disabled,\n      context,\n      validation: validationResult\n    }), (autoSelectField || fieldData.name !== \"~\") && /* @__PURE__ */ jsxs(Fragment, {\n      children: [/* @__PURE__ */ jsx(controls.operatorSelector, {\n        testID: TestID.operators,\n        field,\n        fieldData,\n        title: translations.operators.title,\n        options: operators,\n        value: operator,\n        className: c(standardClassnames.operators, classNames.operators),\n        handleOnChange: generateOnChangeHandler(\"operator\"),\n        level,\n        path,\n        disabled,\n        context,\n        validation: validationResult\n      }), ![\"null\", \"notNull\"].includes(operator) && valueSources.length > 1 && /* @__PURE__ */ jsx(controls.valueSourceSelector, {\n        testID: TestID.valueSourceSelector,\n        field,\n        fieldData,\n        title: translations.valueSourceSelector.title,\n        options: vsOptions,\n        value: valueSource != null ? valueSource : \"value\",\n        className: c(standardClassnames.valueSource, classNames.valueSource),\n        handleOnChange: generateOnChangeHandler(\"valueSource\"),\n        level,\n        path,\n        disabled,\n        context,\n        validation: validationResult\n      }), /* @__PURE__ */ jsx(controls.valueEditor, {\n        testID: TestID.valueEditor,\n        field,\n        fieldData,\n        title: translations.value.title,\n        operator,\n        value,\n        valueSource: valueSource != null ? valueSource : \"value\",\n        type: valueEditorType,\n        inputType,\n        values,\n        className: c(standardClassnames.value, classNames.value),\n        handleOnChange: generateOnChangeHandler(\"value\"),\n        level,\n        path,\n        disabled,\n        context,\n        validation: validationResult\n      })]\n    }), showCloneButtons && /* @__PURE__ */ jsx(controls.cloneRuleAction, {\n      testID: TestID.cloneRule,\n      label: translations.cloneRule.label,\n      title: translations.cloneRule.title,\n      className: c(standardClassnames.cloneRule, classNames.cloneRule),\n      handleOnClick: cloneRule,\n      level,\n      path,\n      disabled,\n      context,\n      validation: validationResult\n    }), showLockButtons && /* @__PURE__ */ jsx(controls.lockRuleAction, {\n      testID: TestID.lockRule,\n      label: translations.lockRule.label,\n      title: translations.lockRule.title,\n      className: c(standardClassnames.lockRule, classNames.lockRule),\n      handleOnClick: toggleLockRule,\n      level,\n      path,\n      disabled,\n      disabledTranslation: parentDisabled ? void 0 : translations.lockRuleDisabled,\n      context,\n      validation: validationResult\n    }), /* @__PURE__ */ jsx(controls.removeRuleAction, {\n      testID: TestID.removeRule,\n      label: translations.removeRule.label,\n      title: translations.removeRule.title,\n      className: c(standardClassnames.removeRule, classNames.removeRule),\n      handleOnClick: removeRule,\n      level,\n      path,\n      disabled,\n      context,\n      validation: validationResult\n    })]\n  });\n};\nRule.displayName = \"Rule\";\nconst InlineCombinator = (_c) => {\n  var _d = _c, {\n    component: CombinatorSelectorComponent,\n    path,\n    moveRule,\n    independentCombinators\n  } = _d, props = __objRest(_d, [\n    \"component\",\n    \"path\",\n    \"moveRule\",\n    \"independentCombinators\"\n  ]);\n  const [{\n    isOver,\n    dropMonitorId\n  }, drop] = useDrop(() => ({\n    accept: [DNDType.rule, DNDType.ruleGroup],\n    canDrop: (item) => {\n      const parentHoverPath = getParentPath(path);\n      const parentItemPath = getParentPath(item.path);\n      const hoverIndex = path[path.length - 1];\n      const itemIndex = item.path[item.path.length - 1];\n      return !(isAncestor(item.path, path) || pathsAreEqual(item.path, path) || pathsAreEqual(parentHoverPath, parentItemPath) && hoverIndex - 1 === itemIndex || independentCombinators && pathsAreEqual(parentHoverPath, parentItemPath) && hoverIndex === itemIndex - 1);\n    },\n    collect: (monitor) => ({\n      isOver: monitor.canDrop() && monitor.isOver(),\n      dropMonitorId: monitor.getHandlerId()\n    }),\n    drop: (item, _monitor) => {\n      const parentPath = getParentPath(path);\n      const index = path[path.length - 1];\n      moveRule(item.path, [...parentPath, index]);\n    }\n  }), [moveRule, path, independentCombinators]);\n  const dndOver = isOver ? standardClassnames.dndOver : \"\";\n  const wrapperClassName = c(dndOver, standardClassnames.betweenRules);\n  return /* @__PURE__ */ jsx(\"div\", {\n    ref: drop,\n    className: wrapperClassName,\n    \"data-dropmonitorid\": dropMonitorId,\n    \"data-testid\": TestID.inlineCombinator,\n    children: /* @__PURE__ */ jsx(CombinatorSelectorComponent, __spreadProps(__spreadValues({}, props), {\n      path,\n      testID: TestID.combinators\n    }))\n  });\n};\nInlineCombinator.displayName = \"InlineCombinator\";\nconst RuleGroup = ({\n  id,\n  path,\n  combinator = \"and\",\n  rules,\n  translations,\n  schema,\n  disabled: disabledProp,\n  parentDisabled,\n  not,\n  context\n}) => {\n  const {\n    classNames,\n    combinators,\n    controls,\n    createRule,\n    createRuleGroup,\n    independentCombinators,\n    onGroupAdd,\n    onGroupRemove,\n    onPropChange,\n    onRuleAdd,\n    moveRule,\n    showCombinatorsBetweenRules,\n    showNotToggle,\n    showCloneButtons,\n    showLockButtons,\n    validationMap,\n    disabledPaths\n  } = schema;\n  const disabled = !!parentDisabled || !!disabledProp;\n  const previewRef = useRef(null);\n  const dragRef = useRef(null);\n  const dropRef = useRef(null);\n  const [{\n    isDragging,\n    dragMonitorId\n  }, drag, preview] = useDrag(() => ({\n    type: DNDType.ruleGroup,\n    item: () => ({\n      path\n    }),\n    canDrag: !disabled,\n    collect: (monitor) => ({\n      isDragging: !disabled && monitor.isDragging(),\n      dragMonitorId: monitor.getHandlerId()\n    })\n  }), [disabled, path]);\n  const [{\n    isOver,\n    dropMonitorId\n  }, drop] = useDrop(() => ({\n    accept: [DNDType.rule, DNDType.ruleGroup],\n    canDrop: (item) => {\n      if (disabled)\n        return false;\n      const parentItemPath = getParentPath(item.path);\n      const itemIndex = item.path[item.path.length - 1];\n      return !(isAncestor(item.path, path) || pathsAreEqual(path, parentItemPath) && itemIndex === 0 || pathsAreEqual(path, item.path));\n    },\n    collect: (monitor) => ({\n      isOver: monitor.canDrop() && monitor.isOver(),\n      dropMonitorId: monitor.getHandlerId()\n    }),\n    drop: (item, _monitor) => !disabled && moveRule(item.path, [...path, 0])\n  }), [disabled, moveRule, path]);\n  if (path.length > 0) {\n    drag(dragRef);\n    preview(previewRef);\n  }\n  drop(dropRef);\n  const onCombinatorChange = (value) => {\n    if (!disabled) {\n      onPropChange(\"combinator\", value, path);\n    }\n  };\n  const onIndependentCombinatorChange = (value, index) => {\n    if (!disabled) {\n      onPropChange(\"combinator\", value, path.concat([index]));\n    }\n  };\n  const onNotToggleChange = (checked) => {\n    if (!disabled) {\n      onPropChange(\"not\", checked, path);\n    }\n  };\n  const addRule = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!disabled) {\n      const newRule = createRule();\n      onRuleAdd(newRule, path);\n    }\n  };\n  const addGroup = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!disabled) {\n      const newGroup = createRuleGroup();\n      onGroupAdd(newGroup, path);\n    }\n  };\n  const cloneGroup = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!disabled) {\n      const newPath = [...getParentPath(path), path[path.length - 1] + 1];\n      moveRule(path, newPath, true);\n    }\n  };\n  const toggleLockGroup = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    onPropChange(\"disabled\", !disabled, path);\n  };\n  const removeGroup = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    if (!disabled) {\n      onGroupRemove(path);\n    }\n  };\n  const level = path.length;\n  const validationResult = validationMap[id != null ? id : \"\"];\n  const validationClassName = getValidationClassNames(validationResult);\n  const dndDragging = isDragging ? standardClassnames.dndDragging : \"\";\n  const dndOver = isOver ? standardClassnames.dndOver : \"\";\n  const outerClassName = c(standardClassnames.ruleGroup, classNames.ruleGroup, disabled ? standardClassnames.disabled : \"\", validationClassName, dndDragging);\n  return /* @__PURE__ */ jsxs(\"div\", {\n    ref: previewRef,\n    className: outerClassName,\n    \"data-testid\": TestID.ruleGroup,\n    \"data-dragmonitorid\": dragMonitorId,\n    \"data-dropmonitorid\": dropMonitorId,\n    \"data-rule-group-id\": id,\n    \"data-level\": level,\n    \"data-path\": JSON.stringify(path),\n    children: [/* @__PURE__ */ jsxs(\"div\", {\n      ref: dropRef,\n      className: c(standardClassnames.header, classNames.header, dndOver),\n      children: [level > 0 && /* @__PURE__ */ jsx(controls.dragHandle, {\n        testID: TestID.dragHandle,\n        ref: dragRef,\n        level,\n        path,\n        title: translations.dragHandle.title,\n        label: translations.dragHandle.label,\n        className: c(standardClassnames.dragHandle, classNames.dragHandle),\n        disabled,\n        context,\n        validation: validationResult\n      }), !showCombinatorsBetweenRules && !independentCombinators && /* @__PURE__ */ jsx(controls.combinatorSelector, {\n        testID: TestID.combinators,\n        options: combinators,\n        value: combinator,\n        title: translations.combinators.title,\n        className: c(standardClassnames.combinators, classNames.combinators),\n        handleOnChange: onCombinatorChange,\n        rules,\n        level,\n        path,\n        disabled,\n        context,\n        validation: validationResult\n      }), showNotToggle && /* @__PURE__ */ jsx(controls.notToggle, {\n        testID: TestID.notToggle,\n        className: c(standardClassnames.notToggle, classNames.notToggle),\n        title: translations.notToggle.title,\n        label: translations.notToggle.label,\n        checked: not,\n        handleOnChange: onNotToggleChange,\n        level,\n        disabled,\n        path,\n        context,\n        validation: validationResult\n      }), /* @__PURE__ */ jsx(controls.addRuleAction, {\n        testID: TestID.addRule,\n        label: translations.addRule.label,\n        title: translations.addRule.title,\n        className: c(standardClassnames.addRule, classNames.addRule),\n        handleOnClick: addRule,\n        rules,\n        level,\n        path,\n        disabled,\n        context,\n        validation: validationResult\n      }), /* @__PURE__ */ jsx(controls.addGroupAction, {\n        testID: TestID.addGroup,\n        label: translations.addGroup.label,\n        title: translations.addGroup.title,\n        className: c(standardClassnames.addGroup, classNames.addGroup),\n        handleOnClick: addGroup,\n        rules,\n        level,\n        path,\n        disabled,\n        context,\n        validation: validationResult\n      }), showCloneButtons && path.length >= 1 && /* @__PURE__ */ jsx(controls.cloneGroupAction, {\n        testID: TestID.cloneGroup,\n        label: translations.cloneRuleGroup.label,\n        title: translations.cloneRuleGroup.title,\n        className: c(standardClassnames.cloneGroup, classNames.cloneGroup),\n        handleOnClick: cloneGroup,\n        rules,\n        level,\n        path,\n        disabled,\n        context,\n        validation: validationResult\n      }), showLockButtons && /* @__PURE__ */ jsx(controls.lockGroupAction, {\n        testID: TestID.lockGroup,\n        label: translations.lockGroup.label,\n        title: translations.lockGroup.title,\n        className: c(standardClassnames.lockGroup, classNames.lockGroup),\n        handleOnClick: toggleLockGroup,\n        rules,\n        level,\n        path,\n        disabled,\n        disabledTranslation: parentDisabled ? void 0 : translations.lockGroupDisabled,\n        context,\n        validation: validationResult\n      }), path.length >= 1 && /* @__PURE__ */ jsx(controls.removeGroupAction, {\n        testID: TestID.removeGroup,\n        label: translations.removeGroup.label,\n        title: translations.removeGroup.title,\n        className: c(standardClassnames.removeGroup, classNames.removeGroup),\n        handleOnClick: removeGroup,\n        rules,\n        level,\n        path,\n        disabled,\n        context,\n        validation: validationResult\n      })]\n    }), /* @__PURE__ */ jsx(\"div\", {\n      className: c(standardClassnames.body, classNames.body),\n      children: rules.map((r, idx) => {\n        const thisPath = [...path, idx];\n        const thisPathDisabled = disabled || typeof r !== \"string\" && r.disabled || disabledPaths.some((p2) => pathsAreEqual(thisPath, p2));\n        const key = thisPath.join(\"-\");\n        return /* @__PURE__ */ jsxs(Fragment$1, {\n          children: [idx > 0 && !independentCombinators && showCombinatorsBetweenRules && /* @__PURE__ */ jsx(InlineCombinator, {\n            options: combinators,\n            value: combinator,\n            title: translations.combinators.title,\n            className: c(standardClassnames.combinators, classNames.combinators),\n            handleOnChange: onCombinatorChange,\n            rules,\n            level,\n            context,\n            validation: validationResult,\n            component: controls.combinatorSelector,\n            moveRule,\n            path: thisPath,\n            disabled: thisPathDisabled,\n            independentCombinators\n          }), typeof r === \"string\" ? /* @__PURE__ */ jsx(InlineCombinator, {\n            options: combinators,\n            value: r,\n            title: translations.combinators.title,\n            className: c(standardClassnames.combinators, classNames.combinators),\n            handleOnChange: (val) => onIndependentCombinatorChange(val, idx),\n            rules,\n            level,\n            context,\n            validation: validationResult,\n            component: controls.combinatorSelector,\n            moveRule,\n            path: thisPath,\n            disabled: thisPathDisabled,\n            independentCombinators\n          }) : \"rules\" in r ? /* @__PURE__ */ jsx(controls.ruleGroup, {\n            id: r.id,\n            schema,\n            path: thisPath,\n            combinator: \"combinator\" in r ? r.combinator : void 0,\n            translations,\n            rules: r.rules,\n            disabled: thisPathDisabled,\n            parentDisabled: parentDisabled || disabled,\n            not: !!r.not,\n            context\n          }) : /* @__PURE__ */ jsx(controls.rule, {\n            id: r.id,\n            field: r.field,\n            value: r.value,\n            operator: r.operator,\n            schema,\n            path: thisPath,\n            disabled: thisPathDisabled,\n            parentDisabled: parentDisabled || disabled,\n            translations,\n            context,\n            valueSource: r.valueSource\n          })]\n        }, key);\n      })\n    })]\n  });\n};\nRuleGroup.displayName = \"RuleGroup\";\nconst defaultPlaceholderFieldLabel = \"------\";\nconst defaultPlaceholderFieldGroupLabel = defaultPlaceholderFieldLabel;\nconst defaultTranslations = {\n  fields: {\n    title: \"Fields\",\n    placeholderLabel: defaultPlaceholderFieldLabel,\n    placeholderGroupLabel: defaultPlaceholderFieldGroupLabel\n  },\n  operators: {\n    title: \"Operators\"\n  },\n  value: {\n    title: \"Value\"\n  },\n  removeRule: {\n    label: \"x\",\n    title: \"Remove rule\"\n  },\n  removeGroup: {\n    label: \"x\",\n    title: \"Remove group\"\n  },\n  addRule: {\n    label: \"+Rule\",\n    title: \"Add rule\"\n  },\n  addGroup: {\n    label: \"+Group\",\n    title: \"Add group\"\n  },\n  combinators: {\n    title: \"Combinators\"\n  },\n  notToggle: {\n    label: \"Not\",\n    title: \"Invert this group\"\n  },\n  cloneRule: {\n    label: \"\\u29C9\",\n    title: \"Clone rule\"\n  },\n  cloneRuleGroup: {\n    label: \"\\u29C9\",\n    title: \"Clone group\"\n  },\n  dragHandle: {\n    label: \"\\u205E\\u205E\",\n    title: \"Drag handle\"\n  },\n  lockRule: {\n    label: \"\\u{1F513}\",\n    title: \"Lock rule\"\n  },\n  lockGroup: {\n    label: \"\\u{1F513}\",\n    title: \"Lock group\"\n  },\n  lockRuleDisabled: {\n    label: \"\\u{1F512}\",\n    title: \"Unlock rule\"\n  },\n  lockGroupDisabled: {\n    label: \"\\u{1F512}\",\n    title: \"Unlock group\"\n  },\n  valueSourceSelector: {\n    title: \"Value source\"\n  }\n};\nconst defaultOperators = [\n  { name: \"=\", label: \"=\" },\n  { name: \"!=\", label: \"!=\" },\n  { name: \"<\", label: \"<\" },\n  { name: \">\", label: \">\" },\n  { name: \"<=\", label: \"<=\" },\n  { name: \">=\", label: \">=\" },\n  { name: \"contains\", label: \"contains\" },\n  { name: \"beginsWith\", label: \"begins with\" },\n  { name: \"endsWith\", label: \"ends with\" },\n  { name: \"doesNotContain\", label: \"does not contain\" },\n  { name: \"doesNotBeginWith\", label: \"does not begin with\" },\n  { name: \"doesNotEndWith\", label: \"does not end with\" },\n  { name: \"null\", label: \"is null\" },\n  { name: \"notNull\", label: \"is not null\" },\n  { name: \"in\", label: \"in\" },\n  { name: \"notIn\", label: \"not in\" },\n  { name: \"between\", label: \"between\" },\n  { name: \"notBetween\", label: \"not between\" }\n];\nconst defaultCombinators = [\n  { name: \"and\", label: \"AND\" },\n  { name: \"or\", label: \"OR\" }\n];\nconst standardClassnames = {\n  queryBuilder: \"queryBuilder\",\n  ruleGroup: \"ruleGroup\",\n  header: \"ruleGroup-header\",\n  body: \"ruleGroup-body\",\n  combinators: \"ruleGroup-combinators\",\n  addRule: \"ruleGroup-addRule\",\n  addGroup: \"ruleGroup-addGroup\",\n  cloneRule: \"rule-cloneRule\",\n  cloneGroup: \"ruleGroup-cloneGroup\",\n  removeGroup: \"ruleGroup-remove\",\n  notToggle: \"ruleGroup-notToggle\",\n  rule: \"rule\",\n  fields: \"rule-fields\",\n  operators: \"rule-operators\",\n  value: \"rule-value\",\n  removeRule: \"rule-remove\",\n  betweenRules: \"betweenRules\",\n  valid: \"queryBuilder-valid\",\n  invalid: \"queryBuilder-invalid\",\n  dndDragging: \"dndDragging\",\n  dndOver: \"dndOver\",\n  dragHandle: \"queryBuilder-dragHandle\",\n  disabled: \"queryBuilder-disabled\",\n  lockRule: \"rule-lock\",\n  lockGroup: \"ruleGroup-lock\",\n  valueSource: \"rule-valueSource\"\n};\nconst defaultControlClassnames = {\n  queryBuilder: \"\",\n  ruleGroup: \"\",\n  header: \"\",\n  body: \"\",\n  combinators: \"\",\n  addRule: \"\",\n  addGroup: \"\",\n  cloneRule: \"\",\n  cloneGroup: \"\",\n  removeGroup: \"\",\n  notToggle: \"\",\n  rule: \"\",\n  fields: \"\",\n  operators: \"\",\n  value: \"\",\n  removeRule: \"\",\n  dragHandle: \"\",\n  lockRule: \"\",\n  lockGroup: \"\",\n  valueSource: \"\"\n};\nconst defaultControlElements = {\n  addGroupAction: ActionElement,\n  removeGroupAction: ActionElement,\n  cloneGroupAction: ActionElement,\n  cloneRuleAction: ActionElement,\n  addRuleAction: ActionElement,\n  removeRuleAction: ActionElement,\n  combinatorSelector: ValueSelector,\n  fieldSelector: ValueSelector,\n  operatorSelector: ValueSelector,\n  valueEditor: ValueEditor,\n  notToggle: NotToggle,\n  ruleGroup: RuleGroup,\n  rule: Rule,\n  dragHandle: DragHandle,\n  lockRuleAction: ActionElement,\n  lockGroupAction: ActionElement,\n  valueSourceSelector: ValueSelector\n};\nconst groupInvalidReasons = {\n  empty: \"empty\",\n  invalidCombinator: \"invalid combinator\",\n  invalidIndependentCombinators: \"invalid independent combinators\"\n};\nconst DNDType = {\n  rule: \"rule\",\n  ruleGroup: \"ruleGroup\"\n};\nconst TestID = {\n  rule: \"rule\",\n  ruleGroup: \"rule-group\",\n  inlineCombinator: \"inline-combinator\",\n  addGroup: \"add-group\",\n  removeGroup: \"remove-group\",\n  cloneGroup: \"clone-group\",\n  cloneRule: \"clone-rule\",\n  addRule: \"add-rule\",\n  removeRule: \"remove-rule\",\n  combinators: \"combinators\",\n  fields: \"fields\",\n  operators: \"operators\",\n  valueEditor: \"value-editor\",\n  notToggle: \"not-toggle\",\n  dragHandle: \"drag-handle\",\n  lockRule: \"lock-rule\",\n  lockGroup: \"lock-group\",\n  valueSourceSelector: \"value-source-selector\"\n};\nenableES5();\nconst QueryBuilderWithoutDndProvider = ({\n  debugMode = false,\n  defaultQuery,\n  query,\n  fields: fProp,\n  operators = defaultOperators,\n  combinators = defaultCombinators,\n  translations: translationsProp = defaultTranslations,\n  enableMountQueryChange = true,\n  controlElements,\n  getDefaultField,\n  getDefaultOperator,\n  getDefaultValue,\n  getOperators,\n  getValueEditorType,\n  getValueSources,\n  getInputType,\n  getValues,\n  onAddRule = (r) => r,\n  onAddGroup = (rg) => rg,\n  onQueryChange = () => {\n  },\n  controlClassnames,\n  showCombinatorsBetweenRules = false,\n  showNotToggle = false,\n  showCloneButtons = false,\n  showLockButtons = false,\n  resetOnFieldChange = true,\n  resetOnOperatorChange = false,\n  autoSelectField = true,\n  addRuleToNewGroups = false,\n  enableDragAndDrop = false,\n  independentCombinators,\n  disabled = false,\n  validator,\n  context\n}) => {\n  const translations = useMemo(() => {\n    const translationsTemp = defaultTranslations;\n    const translationsPropKeys = Object.keys(translationsProp);\n    for (const t of translationsPropKeys) {\n      translationsTemp[t] = __spreadValues(__spreadValues({}, defaultTranslations[t]), translationsProp[t]);\n    }\n    return translationsTemp;\n  }, [translationsProp]);\n  const defaultFields = useMemo(() => [{\n    id: \"~\",\n    name: \"~\",\n    label: translations.fields.placeholderLabel\n  }], [translations.fields.placeholderLabel]);\n  const fieldsProp = fProp != null ? fProp : defaultFields;\n  const fields = useMemo(() => {\n    let f2 = Array.isArray(fieldsProp) ? fieldsProp : Object.keys(fieldsProp).map((fld) => __spreadProps(__spreadValues({}, fieldsProp[fld]), {\n      name: fld\n    })).sort((a, b) => a.label.localeCompare(b.label));\n    if (!autoSelectField) {\n      if (isOptionGroupArray(f2)) {\n        f2 = [{\n          label: translations.fields.placeholderGroupLabel,\n          options: defaultFields\n        }, ...f2];\n      } else {\n        f2 = [...defaultFields, ...f2];\n      }\n    }\n    return isOptionGroupArray(f2) ? uniqOptGroups(f2) : uniqByName(f2);\n  }, [autoSelectField, defaultFields, fieldsProp, translations.fields.placeholderGroupLabel]);\n  const fieldMap = useMemo(() => {\n    if (!Array.isArray(fieldsProp))\n      return fieldsProp;\n    const fm = {};\n    if (isOptionGroupArray(fields)) {\n      fields.forEach((f2) => f2.options.forEach((opt) => fm[opt.name] = opt));\n    } else {\n      fields.forEach((f2) => fm[f2.name] = f2);\n    }\n    return fm;\n  }, [fields, fieldsProp]);\n  const queryDisabled = useMemo(() => disabled === true || Array.isArray(disabled) && disabled.some((p2) => p2.length === 0), [disabled]);\n  const disabledPaths = useMemo(() => Array.isArray(disabled) && disabled || [], [disabled]);\n  const getOperatorsMain = useCallback((field) => {\n    const fieldData = fieldMap[field];\n    if (fieldData == null ? void 0 : fieldData.operators) {\n      return fieldData.operators;\n    }\n    if (getOperators) {\n      const ops = getOperators(field);\n      if (ops)\n        return ops;\n    }\n    return operators;\n  }, [fieldMap, getOperators, operators]);\n  const getRuleDefaultOperator = useCallback((field) => {\n    var _a, _b;\n    const fieldData = fieldMap[field];\n    if (fieldData == null ? void 0 : fieldData.defaultOperator) {\n      return fieldData.defaultOperator;\n    }\n    if (getDefaultOperator) {\n      if (typeof getDefaultOperator === \"function\") {\n        return getDefaultOperator(field);\n      } else {\n        return getDefaultOperator;\n      }\n    }\n    const operators2 = (_a = getOperatorsMain(field)) != null ? _a : [];\n    return operators2.length ? (_b = getFirstOption(operators2)) != null ? _b : \"\" : \"\";\n  }, [fieldMap, getDefaultOperator, getOperatorsMain]);\n  const getValueEditorTypeMain = useCallback((field, operator) => {\n    if (getValueEditorType) {\n      const vet = getValueEditorType(field, operator);\n      if (vet)\n        return vet;\n    }\n    return \"text\";\n  }, [getValueEditorType]);\n  const getValueSourcesMain = useCallback((field, operator) => getValueSourcesUtil(fieldMap[field], operator, getValueSources), [fieldMap, getValueSources]);\n  const getValuesMain = useCallback((field, operator) => {\n    const fieldData = fieldMap[field];\n    if (fieldData == null ? void 0 : fieldData.values) {\n      return fieldData.values;\n    }\n    if (getValues) {\n      const vals = getValues(field, operator);\n      if (vals)\n        return vals;\n    }\n    return [];\n  }, [fieldMap, getValues]);\n  const getRuleDefaultValue = useCallback((rule) => {\n    const fieldData = fieldMap[rule.field];\n    if ((fieldData == null ? void 0 : fieldData.defaultValue) !== void 0 && fieldData.defaultValue !== null) {\n      return fieldData.defaultValue;\n    } else if (getDefaultValue) {\n      return getDefaultValue(rule);\n    }\n    let value = \"\";\n    const values = getValuesMain(rule.field, rule.operator);\n    if (rule.valueSource === \"field\") {\n      const filteredFields = filterFieldsByComparator(fieldData, fields, rule.operator);\n      if (filteredFields.length > 0) {\n        value = getFirstOption(filteredFields);\n      } else {\n        value = \"\";\n      }\n    } else if (values.length) {\n      value = getFirstOption(values);\n    } else {\n      const editorType = getValueEditorTypeMain(rule.field, rule.operator);\n      if (editorType === \"checkbox\") {\n        value = false;\n      }\n    }\n    return value;\n  }, [fieldMap, fields, getDefaultValue, getValueEditorTypeMain, getValuesMain]);\n  const getInputTypeMain = useCallback((field, operator) => {\n    if (getInputType) {\n      const inputType = getInputType(field, operator);\n      if (inputType)\n        return inputType;\n    }\n    return \"text\";\n  }, [getInputType]);\n  const createRule = useCallback(() => {\n    var _a, _b;\n    let field = \"\";\n    if ((fields == null ? void 0 : fields.length) > 0 && fields[0]) {\n      field = (_a = getFirstOption(fields)) != null ? _a : \"\";\n    }\n    if (getDefaultField) {\n      if (typeof getDefaultField === \"function\") {\n        field = getDefaultField(fields);\n      } else {\n        field = getDefaultField;\n      }\n    }\n    const operator = getRuleDefaultOperator(field);\n    const valueSource = (_b = getValueSourcesMain(field, operator)[0]) != null ? _b : \"value\";\n    const newRule = {\n      id: `r-${generateID()}`,\n      field,\n      operator,\n      valueSource,\n      value: \"\"\n    };\n    const value = getRuleDefaultValue(newRule);\n    return __spreadProps(__spreadValues({}, newRule), {\n      value\n    });\n  }, [fields, getDefaultField, getRuleDefaultOperator, getRuleDefaultValue, getValueSourcesMain]);\n  const createRuleGroup = useCallback(() => {\n    var _a;\n    if (independentCombinators) {\n      return {\n        id: `g-${generateID()}`,\n        rules: addRuleToNewGroups ? [createRule()] : [],\n        not: false\n      };\n    }\n    return {\n      id: `g-${generateID()}`,\n      rules: addRuleToNewGroups ? [createRule()] : [],\n      combinator: (_a = getFirstOption(combinators)) != null ? _a : \"\",\n      not: false\n    };\n  }, [addRuleToNewGroups, combinators, createRule, independentCombinators]);\n  const isFirstRender = useRef(true);\n  const [queryState, setQueryState] = useState(defaultQuery != null ? defaultQuery : createRuleGroup());\n  const root = query ? isFirstRender.current ? prepareRuleGroup(query) : query : queryState;\n  isFirstRender.current = false;\n  useEffect(() => {\n    if (enableMountQueryChange) {\n      onQueryChange(root);\n    }\n  }, []);\n  const dispatch = useCallback((newQuery) => {\n    if (!query) {\n      setQueryState(newQuery);\n    }\n    onQueryChange(newQuery);\n  }, [onQueryChange, query]);\n  const onRuleAdd = (rule, parentPath) => {\n    if (pathIsDisabled(parentPath, root) || queryDisabled)\n      return;\n    const newRule = onAddRule(rule, parentPath, root);\n    if (!newRule)\n      return;\n    const newQuery = add(root, newRule, parentPath);\n    dispatch(newQuery);\n  };\n  const onGroupAdd = (group, parentPath) => {\n    if (pathIsDisabled(parentPath, root) || queryDisabled)\n      return;\n    const newGroup = onAddGroup(group, parentPath, root);\n    if (!newGroup)\n      return;\n    const newQuery = add(root, newGroup, parentPath);\n    dispatch(newQuery);\n  };\n  const onPropChange = (prop, value, path) => {\n    if (pathIsDisabled(path, root) && prop !== \"disabled\" || queryDisabled)\n      return;\n    const newQuery = update(root, prop, value, path, {\n      resetOnFieldChange,\n      resetOnOperatorChange,\n      getRuleDefaultOperator,\n      getValueSources: getValueSourcesMain,\n      getRuleDefaultValue\n    });\n    dispatch(newQuery);\n  };\n  const onRuleOrGroupRemove = (path) => {\n    if (pathIsDisabled(path, root) || queryDisabled)\n      return;\n    const newQuery = remove(root, path);\n    dispatch(newQuery);\n  };\n  const moveRule = (oldPath, newPath, clone) => {\n    if (pathIsDisabled(oldPath, root) || pathIsDisabled(newPath, root) || queryDisabled)\n      return;\n    const newQuery = move(root, oldPath, newPath, {\n      clone,\n      combinators\n    });\n    dispatch(newQuery);\n  };\n  const validationResult = useMemo(() => typeof validator === \"function\" ? validator(root) : {}, [root, validator]);\n  const validationMap = useMemo(() => typeof validationResult === \"object\" ? validationResult : {}, [validationResult]);\n  const classNames = useMemo(() => __spreadValues(__spreadValues({}, defaultControlClassnames), controlClassnames), [controlClassnames]);\n  const controls = useMemo(() => __spreadValues(__spreadValues({}, defaultControlElements), controlElements), [controlElements]);\n  const schema = {\n    fields,\n    fieldMap,\n    combinators,\n    classNames,\n    createRule,\n    createRuleGroup,\n    onRuleAdd,\n    onGroupAdd,\n    onRuleRemove: onRuleOrGroupRemove,\n    onGroupRemove: onRuleOrGroupRemove,\n    onPropChange,\n    isRuleGroup,\n    controls,\n    getOperators: getOperatorsMain,\n    getValueEditorType: getValueEditorTypeMain,\n    getValueSources: getValueSourcesMain,\n    getInputType: getInputTypeMain,\n    getValues: getValuesMain,\n    moveRule,\n    showCombinatorsBetweenRules,\n    showNotToggle,\n    showCloneButtons,\n    showLockButtons,\n    autoSelectField,\n    addRuleToNewGroups,\n    enableDragAndDrop,\n    independentCombinators: !!independentCombinators,\n    validationMap,\n    disabledPaths\n  };\n  const wrapperClassName = useMemo(() => c(standardClassnames.queryBuilder, classNames.queryBuilder, root.disabled || queryDisabled ? standardClassnames.disabled : \"\", typeof validationResult === \"boolean\" ? validationResult ? standardClassnames.valid : standardClassnames.invalid : \"\"), [classNames.queryBuilder, queryDisabled, root.disabled, validationResult]);\n  return /* @__PURE__ */ jsx(DndContext.Consumer, {\n    children: () => /* @__PURE__ */ jsx(\"div\", {\n      className: wrapperClassName,\n      \"data-dnd\": enableDragAndDrop ? \"enabled\" : \"disabled\",\n      \"data-inlinecombinators\": independentCombinators || showCombinatorsBetweenRules ? \"enabled\" : \"disabled\",\n      children: /* @__PURE__ */ jsx(controls.ruleGroup, {\n        translations,\n        rules: root.rules,\n        combinator: \"combinator\" in root ? root.combinator : void 0,\n        schema,\n        id: root.id,\n        path: [],\n        not: !!root.not,\n        disabled: !!root.disabled || queryDisabled,\n        parentDisabled: queryDisabled,\n        context\n      })\n    })\n  });\n};\nQueryBuilderWithoutDndProvider.displayName = \"QueryBuilderWithoutDndProvider\";\nconst QueryBuilder = (_e) => {\n  var _f = _e, {\n    debugMode = false\n  } = _f, props = __objRest(_f, [\n    \"debugMode\"\n  ]);\n  return /* @__PURE__ */ jsx(DndProvider, {\n    backend: HTML5Backend,\n    debugMode,\n    children: /* @__PURE__ */ jsx(QueryBuilderWithoutDndProvider, __spreadProps(__spreadValues({}, props), {\n      debugMode\n    }))\n  });\n};\nQueryBuilder.displayName = \"QueryBuilder\";\nexport { ActionElement, DNDType, DragHandle, InlineCombinator, NotToggle, QueryBuilder, QueryBuilderWithoutDndProvider, Rule, RuleGroup, TestID, ValueEditor, ValueSelector, add, c, convertFromIC, convertQuery, convertToIC, QueryBuilder as default, defaultCELValueProcessor, defaultCombinators, defaultControlClassnames, defaultControlElements, defaultMongoDBValueProcessor, defaultOperators, defaultPlaceholderFieldGroupLabel, defaultPlaceholderFieldLabel, defaultTranslations, defaultValidator, defaultValueProcessor, filterFieldsByComparator, findPath, formatQuery, generateID, getCommonAncestorPath, getFirstOption, getParentPath, getValidationClassNames, getValueSourcesUtil, groupInvalidReasons, isAncestor, isOptionGroupArray, isRuleGroup, isRuleGroupType, isRuleGroupTypeIC, isRuleOrGroupValid, isValidationResult, move, parseSQL, pathIsDisabled, pathsAreEqual, prepareRule, prepareRuleGroup, prepareRuleOrGroup, regenerateID, regenerateIDs, remove, standardClassnames, toOptions, uniqByName, uniqOptGroups, update };\n//# sourceMappingURL=index.es.js.map\n","import { useEffect } from 'react';\nimport { ValueEditorProps, ValueSelector } from 'react-querybuilder';\n\nexport const BootstrapValueEditor = ({\n  fieldData,\n  operator,\n  value,\n  handleOnChange,\n  title,\n  className,\n  type,\n  inputType,\n  values,\n  disabled,\n  ...props\n}: ValueEditorProps) => {\n  useEffect(() => {\n    if (\n      inputType === 'number' &&\n      !['between', 'notBetween', 'in', 'notIn'].includes(operator) &&\n      typeof value === 'string' &&\n      value.includes(',')\n    ) {\n      handleOnChange('');\n    }\n  }, [inputType, operator, value, handleOnChange]);\n\n  if (operator === 'null' || operator === 'notNull') {\n    return null;\n  }\n\n  const placeHolderText = fieldData?.placeholder ?? '';\n  const inputTypeCoerced = ['between', 'notBetween', 'in', 'notIn'].includes(operator)\n    ? 'text'\n    : inputType || 'text';\n\n  switch (type) {\n    case 'select':\n    case 'multiselect':\n      return (\n        <ValueSelector\n          {...props}\n          className={`${className} form-select form-select-sm`}\n          title={title}\n          handleOnChange={handleOnChange}\n          value={value}\n          disabled={disabled}\n          multiple={type === 'multiselect'}\n          options={values!}\n        />\n      );\n\n    case 'textarea':\n      return (\n        <textarea\n          value={value}\n          title={title}\n          className={className}\n          disabled={disabled}\n          placeholder={placeHolderText}\n          onChange={e => handleOnChange(e.target.value)}\n        />\n      );\n\n    case 'switch':\n      return (\n        <span className={`custom-control custom-switch ${className}`}>\n          <input\n            type=\"checkbox\"\n            className={`form-check-input custom-control-input`}\n            title={title}\n            disabled={disabled}\n            onChange={e => handleOnChange(e.target.checked)}\n            checked={!!value}\n          />\n        </span>\n      );\n\n    case 'checkbox':\n      return (\n        <input\n          type=\"checkbox\"\n          className={`form-check-input ${className}`}\n          title={title}\n          disabled={disabled}\n          onChange={e => handleOnChange(e.target.checked)}\n          checked={!!value}\n        />\n      );\n\n    case 'radio':\n      return (\n        <span title={title}>\n          {values!.map(v => (\n            <div key={v.name} className=\"form-check form-check-inline\">\n              <input\n                className=\"form-check-input\"\n                type=\"radio\"\n                id={v.name}\n                value={v.name}\n                checked={value === v.name}\n                disabled={disabled}\n                onChange={e => handleOnChange(e.target.value)}\n              />\n              <label className=\"form-check-label\" htmlFor={v.name}>\n                {v.label}\n              </label>\n            </div>\n          ))}\n        </span>\n      );\n  }\n\n  return (\n    <input\n      type={inputTypeCoerced}\n      value={value}\n      title={title}\n      className={className}\n      disabled={disabled}\n      placeholder={placeHolderText}\n      onChange={e => handleOnChange(e.target.value)}\n    />\n  );\n};\n\nBootstrapValueEditor.displayName = 'BootstrapValueEditor';\n","import type { Classnames, Controls } from 'react-querybuilder';\nimport { BootstrapDragHandle } from './BootstrapDragHandle';\nimport { BootstrapNotToggle } from './BootstrapNotToggle';\nimport { BootstrapValueEditor } from './BootstrapValueEditor';\n\nexport const bootstrapControlElements: Partial<Controls> = {\n  dragHandle: BootstrapDragHandle,\n  notToggle: BootstrapNotToggle,\n  valueEditor: BootstrapValueEditor,\n};\n\nexport const bootstrapControlClassnames: Partial<Classnames> = {\n  addGroup: 'btn btn-secondary btn-sm',\n  addRule: 'btn btn-primary btn-sm',\n  cloneGroup: 'btn btn-secondary btn-sm',\n  cloneRule: 'btn btn-secondary btn-sm',\n  lockGroup: 'btn btn-secondary btn-sm',\n  lockRule: 'btn btn-secondary btn-sm',\n  removeGroup: 'btn btn-danger btn-sm',\n  removeRule: 'btn btn-danger btn-sm',\n  combinators: 'form-select form-select-sm',\n  fields: 'form-select form-select-sm',\n  operators: 'form-select form-select-sm',\n  value: 'form-control form-control-sm',\n  valueSource: 'form-select form-select-sm',\n};\n\nexport { BootstrapDragHandle, BootstrapNotToggle, BootstrapValueEditor };\n","import { bootstrapControlClassnames } from '@react-querybuilder/bootstrap/src';\nimport { lazy } from 'react';\nimport type { QueryBuilderProps } from 'react-querybuilder/src';\nimport { StyleName } from '../constants';\n\nconst AntDActionElement = lazy(() => import('./AntDActionElement'));\nconst AntDDragHandle = lazy(() => import('./AntDDragHandle'));\nconst AntDNotToggle = lazy(() => import('./AntDNotToggle'));\nconst AntDValueEditor = lazy(() => import('./AntDValueEditor'));\nconst AntDValueSelector = lazy(() => import('./AntDValueSelector'));\nconst BootstrapDragHandle = lazy(() => import('./BootstrapDragHandle'));\nconst BootstrapNotToggle = lazy(() => import('./BootstrapNotToggle'));\nconst BootstrapValueEditor = lazy(() => import('./BootstrapValueEditor'));\nconst BulmaActionElement = lazy(() => import('./BulmaActionElement'));\nconst BulmaNotToggle = lazy(() => import('./BulmaNotToggle'));\nconst BulmaValueEditor = lazy(() => import('./BulmaValueEditor'));\nconst BulmaValueSelector = lazy(() => import('./BulmaValueSelector'));\nconst ChakraActionElement = lazy(() => import('./ChakraActionElement'));\nconst ChakraDragHandle = lazy(() => import('./ChakraDragHandle'));\nconst ChakraNotToggle = lazy(() => import('./ChakraNotToggle'));\nconst ChakraValueEditor = lazy(() => import('./ChakraValueEditor'));\nconst ChakraValueSelector = lazy(() => import('./ChakraValueSelector'));\nconst MaterialActionElement = lazy(() => import('./MaterialActionElement'));\nconst MaterialDragHandle = lazy(() => import('./MaterialDragHandle'));\nconst MaterialNotToggle = lazy(() => import('./MaterialNotToggle'));\nconst MaterialValueEditor = lazy(() => import('./MaterialValueEditor'));\nconst MaterialValueSelector = lazy(() => import('./MaterialValueSelector'));\n\nexport const styleConfigs: Record<StyleName, QueryBuilderProps> = {\n  default: {},\n  bootstrap: {\n    controlClassnames: bootstrapControlClassnames,\n    controlElements: {\n      dragHandle: BootstrapDragHandle,\n      notToggle: BootstrapNotToggle,\n      valueEditor: BootstrapValueEditor,\n    },\n  },\n  antd: {\n    controlElements: {\n      addGroupAction: AntDActionElement,\n      addRuleAction: AntDActionElement,\n      cloneGroupAction: AntDActionElement,\n      cloneRuleAction: AntDActionElement,\n      lockGroupAction: AntDActionElement,\n      lockRuleAction: AntDActionElement,\n      combinatorSelector: AntDValueSelector,\n      fieldSelector: AntDValueSelector,\n      notToggle: AntDNotToggle,\n      operatorSelector: AntDValueSelector,\n      removeGroupAction: AntDActionElement,\n      removeRuleAction: AntDActionElement,\n      valueEditor: AntDValueEditor,\n      dragHandle: AntDDragHandle,\n      valueSourceSelector: AntDValueSelector,\n    },\n  },\n  material: {\n    controlElements: {\n      addGroupAction: MaterialActionElement,\n      addRuleAction: MaterialActionElement,\n      cloneGroupAction: MaterialActionElement,\n      cloneRuleAction: MaterialActionElement,\n      lockGroupAction: MaterialActionElement,\n      lockRuleAction: MaterialActionElement,\n      combinatorSelector: MaterialValueSelector,\n      fieldSelector: MaterialValueSelector,\n      notToggle: MaterialNotToggle,\n      operatorSelector: MaterialValueSelector,\n      removeGroupAction: MaterialActionElement,\n      removeRuleAction: MaterialActionElement,\n      valueEditor: MaterialValueEditor,\n      dragHandle: MaterialDragHandle,\n      valueSourceSelector: MaterialValueSelector,\n    },\n  },\n  chakra: {\n    controlElements: {\n      addGroupAction: ChakraActionElement,\n      addRuleAction: ChakraActionElement,\n      cloneGroupAction: ChakraActionElement,\n      cloneRuleAction: ChakraActionElement,\n      lockGroupAction: ChakraActionElement,\n      lockRuleAction: ChakraActionElement,\n      combinatorSelector: ChakraValueSelector,\n      fieldSelector: ChakraValueSelector,\n      notToggle: ChakraNotToggle,\n      operatorSelector: ChakraValueSelector,\n      removeGroupAction: ChakraActionElement,\n      removeRuleAction: ChakraActionElement,\n      valueEditor: ChakraValueEditor,\n      dragHandle: ChakraDragHandle,\n      valueSourceSelector: ChakraValueSelector,\n    },\n  },\n  bulma: {\n    controlElements: {\n      addGroupAction: BulmaActionElement,\n      addRuleAction: BulmaActionElement,\n      cloneGroupAction: BulmaActionElement,\n      cloneRuleAction: BulmaActionElement,\n      lockGroupAction: BulmaActionElement,\n      lockRuleAction: BulmaActionElement,\n      combinatorSelector: BulmaValueSelector,\n      fieldSelector: BulmaValueSelector,\n      notToggle: BulmaNotToggle,\n      operatorSelector: BulmaValueSelector,\n      removeGroupAction: BulmaActionElement,\n      removeRuleAction: BulmaActionElement,\n      valueEditor: BulmaValueEditor,\n      valueSourceSelector: BulmaValueSelector,\n    },\n  },\n};\n","import { LinkOutlined, QuestionCircleOutlined } from '@ant-design/icons';\nimport { ChakraProvider, extendTheme } from '@chakra-ui/react';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  Input,\n  Layout,\n  Modal,\n  Radio,\n  Select,\n  Spin,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport 'antd/dist/antd.compact.css';\nimport queryString from 'query-string';\nimport {\n  StrictMode,\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useState,\n  type ReactNode,\n} from 'react';\nimport { render } from 'react-dom';\nimport {\n  defaultOptions,\n  fields,\n  formatMap,\n  getFormatQueryString,\n  initialQuery,\n  initialQueryIC,\n  optionOrder,\n  optionsMetadata,\n  optionsReducer,\n  type CommonRQBProps,\n  type DemoOptions,\n} from 'react-querybuilder/dev';\nimport 'react-querybuilder/src/query-builder.scss';\nimport {\n  defaultValidator,\n  formatQuery,\n  parseSQL,\n  QueryBuilder,\n  type ExportFormat,\n  type FormatQueryOptions,\n} from 'react-querybuilder/src';\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport json from 'react-syntax-highlighter/dist/esm/languages/hljs/json';\nimport sql from 'react-syntax-highlighter/dist/esm/languages/hljs/sql';\nimport { vs } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport { styleConfigs } from './components';\nimport { docsLink, npmLink, styleNameMap, type StyleName } from './constants';\n\nconst { TextArea } = Input;\nconst { Header, Sider, Content } = Layout;\nconst { Option } = Select;\nconst { Link, Text, Title } = Typography;\n\nconst muiTheme = createTheme();\nconst chakraTheme = extendTheme({\n  config: {\n    initialColorMode: 'light',\n    useSystemColorMode: false,\n  },\n});\n\nSyntaxHighlighter.registerLanguage('json', json);\nSyntaxHighlighter.registerLanguage('json_without_ids', json);\nSyntaxHighlighter.registerLanguage('mongodb', json);\nSyntaxHighlighter.registerLanguage('parameterized', json);\nSyntaxHighlighter.registerLanguage('parameterized_named', json);\nSyntaxHighlighter.registerLanguage('sql', sql);\n\nconst shStyle = {\n  ...vs,\n  hljs: {\n    ...vs.hljs,\n    backgroundColor: '#eeeeee',\n    border: '1px solid gray',\n    borderRadius: 4,\n    fontFamily: \"Consolas, 'Courier New', monospace\",\n    fontSize: 'small',\n    padding: '1rem',\n    minWidth: 405,\n    whiteSpace: 'pre-wrap',\n  },\n};\n\nconst CustomFragment = (props: { children?: ReactNode }) => <>{props.children}</>;\n\nconst permalinkText = 'Copy link';\nconst permalinkCopiedText = 'Copied!';\n\nconst getOptionsFromHash = (hash: Partial<DemoOptions>) => {\n  const optionsFromHash = defaultOptions;\n  for (const opt of optionOrder) {\n    optionsFromHash[opt] = (hash[opt] ?? `${defaultOptions[opt]}`) === 'true';\n  }\n  return optionsFromHash;\n};\n\nconst initialSQL = `SELECT *\\n  FROM my_table\\n WHERE ${formatQuery(initialQuery, 'sql')};`;\n\n// Initialize options from URL hash\nconst initialOptions = getOptionsFromHash(queryString.parse(location.hash));\n\nconst App = () => {\n  const [query, setQuery] = useState(initialQuery);\n  const [queryIC, setQueryIC] = useState(initialQueryIC);\n  const [format, setFormat] = useState<ExportFormat>('json_without_ids');\n  const [options, setOptions] = useReducer(optionsReducer, initialOptions);\n  const [isSQLModalVisible, setIsSQLModalVisible] = useState(false);\n  const [sql, setSQL] = useState(initialSQL);\n  const [sqlParseError, setSQLParseError] = useState('');\n  const [style, setStyle] = useState<StyleName>('default');\n  const [copyPermalinkText, setCopyPermalinkText] = useState(permalinkText);\n\n  const permalinkHash = useMemo(() => `#${queryString.stringify(options)}`, [options]);\n\n  useEffect(() => {\n    history.pushState(null, '', permalinkHash);\n    const updateOptionsFromHash = (e: HashChangeEvent) => {\n      const opts = getOptionsFromHash(\n        queryString.parse(\n          queryString.parseUrl(e.newURL, { parseFragmentIdentifier: true }).fragmentIdentifier ?? ''\n        )\n      );\n      setOptions({ type: 'replace', payload: opts });\n    };\n    window.addEventListener('hashchange', updateOptionsFromHash);\n\n    return () => window.removeEventListener('hashchange', updateOptionsFromHash);\n  }, [permalinkHash]);\n\n  const optionsInfo = useMemo(\n    () =>\n      optionOrder.map(opt => ({\n        ...optionsMetadata[opt],\n        default: defaultOptions[opt],\n        checked: options[opt],\n        setter: (v: boolean) =>\n          setOptions({ type: 'update', payload: { optionName: opt, value: v } }),\n      })),\n    [options]\n  );\n\n  const formatOptions = useMemo(\n    (): FormatQueryOptions => ({\n      format,\n      fields: options.validateQuery ? fields : undefined,\n      parseNumbers: options.parseNumbers,\n    }),\n    [format, options.parseNumbers, options.validateQuery]\n  );\n  const q = options.independentCombinators ? queryIC : query;\n  const formatString = useMemo(() => getFormatQueryString(q, formatOptions), [formatOptions, q]);\n\n  const qbWrapperClassName = `with-${style}${options.validateQuery ? ' validateQuery' : ''}`;\n\n  const loadFromSQL = useCallback(() => {\n    try {\n      const q = parseSQL(sql);\n      const qIC = parseSQL(sql, { independentCombinators: true });\n      setQuery(q);\n      setQueryIC(qIC);\n      setIsSQLModalVisible(false);\n      setSQLParseError('');\n    } catch (err) {\n      setSQLParseError((err as Error).message);\n    }\n  }, [sql]);\n\n  const onClickCopyPermalink = async () => {\n    try {\n      await navigator.clipboard.writeText(`${location.origin}${location.pathname}${permalinkHash}`);\n      setCopyPermalinkText(permalinkCopiedText);\n    } catch (e) {\n      console.error('Clipboard error', e);\n    }\n    setTimeout(() => setCopyPermalinkText(permalinkText), 1214);\n  };\n\n  const MUIThemeProvider = useMemo(\n    () => (style === 'material' ? ThemeProvider : CustomFragment),\n    [style]\n  );\n  const ChakraStyleProvider = useMemo(\n    () => (style === 'chakra' ? ChakraProvider : CustomFragment),\n    [style]\n  );\n\n  const commonRQBProps = useMemo(\n    (): CommonRQBProps => ({\n      ...styleConfigs[style],\n      fields,\n      ...options,\n      validator: options.validateQuery ? defaultValidator : undefined,\n    }),\n    [style, options]\n  );\n\n  const loadingPlaceholder = useCallback(\n    () => (\n      <div className=\"loading-placeholder\">\n        <Spin />\n        <div>Loading {styleNameMap[style]} components...</div>\n      </div>\n    ),\n    [style]\n  );\n\n  return (\n    <>\n      <Layout>\n        <Header>\n          <Title level={3} style={{ display: 'inline-block' }}>\n            <a href={docsLink}>React Query Builder Demo</a>\n          </Title>\n        </Header>\n        <Layout>\n          <Sider theme=\"light\" width={260} style={{ padding: '1rem' }}>\n            <Title level={4}>\n              Style\n              {'\\u00a0'}\n              <a href={`${docsLink}/docs/compat`} target=\"_blank\" rel=\"noreferrer\">\n                <Tooltip\n                  title=\"Use first-party alternate QueryBuilder components designed for popular style libraries (click for documentation)\"\n                  placement=\"right\">\n                  <QuestionCircleOutlined />\n                </Tooltip>\n              </a>\n            </Title>\n            <Select\n              value={style}\n              onChange={setStyle}\n              dropdownMatchSelectWidth={false}\n              style={{ minWidth: 100 }}>\n              {(['default', 'bootstrap', 'material', 'antd', 'chakra', 'bulma'] as StyleName[]).map(\n                s => (\n                  <Option key={s} value={s}>\n                    {styleNameMap[s]}\n                  </Option>\n                )\n              )}\n            </Select>\n            <Title level={4} style={{ marginTop: '1rem' }}>\n              Options\n              {'\\u00a0'}\n              <a href={`${docsLink}/docs/api/querybuilder`} target=\"_blank\" rel=\"noreferrer\">\n                <Tooltip\n                  title=\"Boolean props on the QueryBuilder component (click for documentation)\"\n                  placement=\"right\">\n                  <QuestionCircleOutlined />\n                </Tooltip>\n              </a>\n            </Title>\n            <div>\n              {optionsInfo.map(({ checked, label, link, setter, title }) => (\n                <div key={label}>\n                  <Checkbox checked={checked} onChange={e => setter(e.target.checked)}>\n                    {label}\n                    {'\\u00a0'}\n                    <a href={`${docsLink}${link}`} target=\"_blank\" rel=\"noreferrer\">\n                      <Tooltip title={`${title} (click for documentation)`} placement=\"right\">\n                        <QuestionCircleOutlined />\n                      </Tooltip>\n                    </a>\n                  </Checkbox>\n                </div>\n              ))}\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  justifyContent: 'space-between',\n                  marginTop: '0.5rem',\n                }}>\n                <Tooltip title=\"Reset the options above to their default values\" placement=\"right\">\n                  <Button type=\"default\" onClick={() => setOptions({ type: 'reset' })}>\n                    Reset\n                  </Button>\n                </Tooltip>\n                <Tooltip\n                  title={`Enable all features except \"${optionsMetadata.disabled.label}\"`}\n                  placement=\"right\">\n                  <Button type=\"default\" onClick={() => setOptions({ type: 'all' })}>\n                    Select all\n                  </Button>\n                </Tooltip>\n                <Tooltip\n                  title=\"Copy a URL that will load this demo with the options set as they are currently\"\n                  placement=\"right\">\n                  <Button type=\"default\" onClick={onClickCopyPermalink}>\n                    {copyPermalinkText}\n                  </Button>\n                </Tooltip>\n              </div>\n            </div>\n            <Title level={4} style={{ marginTop: '1rem' }}>\n              Export\n              {'\\u00a0'}\n              <a href={`${docsLink}/docs/api/export`} target=\"_blank\" rel=\"noreferrer\">\n                <Tooltip\n                  title={`The export format of the formatQuery function (click for documentation)`}\n                  placement=\"right\">\n                  <QuestionCircleOutlined />\n                </Tooltip>\n              </a>\n            </Title>\n            <div\n              style={{ display: 'flex', justifyContent: 'space-between', flexDirection: 'column' }}>\n              {formatMap.map(([fmt, lbl]) => (\n                <Radio key={fmt} checked={format === fmt} onChange={() => setFormat(fmt)}>\n                  {lbl}\n                  {'\\u00a0'}\n                  <Tooltip title={`formatQuery(query, \"${fmt}\")`} placement=\"right\">\n                    <QuestionCircleOutlined />\n                  </Tooltip>\n                </Radio>\n              ))}\n            </div>\n            <Title level={4} style={{ marginTop: '1rem' }}>\n              Import\n              {'\\u00a0'}\n              <a href={`${docsLink}/docs/api/import`} target=\"_blank\" rel=\"noreferrer\">\n                <Tooltip\n                  title={`Use the parseSQL method to set the query from SQL (click for documentation)`}\n                  placement=\"right\">\n                  <QuestionCircleOutlined />\n                </Tooltip>\n              </a>\n            </Title>\n            <Button onClick={() => setIsSQLModalVisible(true)}>Load from SQL</Button>\n            <Title level={4} style={{ marginTop: '1rem' }}>\n              Installation{'\\u00a0'}\n              <Link href={npmLink} target=\"_blank\">\n                <LinkOutlined />\n              </Link>\n            </Title>\n            <pre>npm i react-querybuilder</pre>\n            OR\n            <pre>yarn add react-querybuilder</pre>\n            <Title level={4} style={{ marginTop: '1rem' }}>\n              Links\n            </Title>\n            <p>\n              <a href=\"ie11.html\">IE-compatible demo</a>\n            </p>\n            <p>\n              UMD build: <a href=\"umd.html\">demo</a> / <a href={`${docsLink}/docs/umd`}>docs</a>\n            </p>\n          </Sider>\n          <Content style={{ backgroundColor: '#ffffff', padding: '1rem 1rem 0 0' }}>\n            <ChakraStyleProvider theme={chakraTheme}>\n              <MUIThemeProvider theme={muiTheme}>\n                <Suspense fallback={loadingPlaceholder}>\n                  <div className={qbWrapperClassName}>\n                    <form className=\"form-inline\" style={{ marginTop: '1rem' }}>\n                      {options.independentCombinators ? (\n                        <QueryBuilder\n                          {...commonRQBProps}\n                          independentCombinators\n                          key={`queryIC-${style}`}\n                          query={queryIC}\n                          onQueryChange={q => setQueryIC(q)}\n                        />\n                      ) : (\n                        <QueryBuilder\n                          {...commonRQBProps}\n                          independentCombinators={false}\n                          key={`query-${style}`}\n                          query={query}\n                          onQueryChange={q => setQuery(q)}\n                        />\n                      )}\n                    </form>\n                  </div>\n                </Suspense>\n              </MUIThemeProvider>\n            </ChakraStyleProvider>\n            {style !== 'default' && (\n              <>\n                To use the official React Query Builder components for {styleNameMap[style]} in your\n                project, install{' '}\n                <Link\n                  target=\"_blank\"\n                  href={`https://www.npmjs.com/package/@react-querybuilder/${style}`}>\n                  @react-querybuilder/{style}\n                </Link>\n                .\n              </>\n            )}\n            <Divider />\n            <SyntaxHighlighter language={format} style={shStyle}>\n              {formatString}\n            </SyntaxHighlighter>\n          </Content>\n        </Layout>\n      </Layout>\n      <Modal\n        title=\"Load Query From SQL\"\n        visible={isSQLModalVisible}\n        onOk={loadFromSQL}\n        onCancel={() => setIsSQLModalVisible(false)}>\n        <TextArea\n          value={sql}\n          onChange={e => setSQL(e.target.value)}\n          spellCheck={false}\n          style={{ height: 200, fontFamily: 'monospace' }}\n        />\n        <Text italic>\n          SQL string can either be the full <Text code>SELECT</Text> statement or the{' '}\n          <Text code>WHERE</Text> clause by itself (without the word &quot;WHERE&quot; -- just the\n          clauses). A trailing semicolon is also optional.\n        </Text>\n        {!!sqlParseError && <pre>{sqlParseError}</pre>}\n      </Modal>\n    </>\n  );\n};\n\nrender(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('app')\n);\n"],"names":["isOptionGroupArray","BootstrapDragHandle","forwardRef","className","title","dragRef","displayName","BootstrapNotToggle","handleOnChange","label","checked","disabled","id","useRef","Math","random","_jsx","current","e","target","require$$0","useMemo","enableES5","BootstrapValueEditor","fieldData","operator","value","type","inputType","values","props","useEffect","includes","placeHolderText","placeholder","inputTypeCoerced","map","v","name","lazy","TextArea","Input","Header","Sider","Content","Layout","Option","Select","Link","Text","Title","Typography","muiTheme","createTheme","chakraTheme","extendTheme","config","initialColorMode","useSystemColorMode","SyntaxHighlighter","registerLanguage","json","sql","shStyle","vs","hljs","backgroundColor","border","borderRadius","fontFamily","fontSize","padding","minWidth","whiteSpace","CustomFragment","_Fragment","children","permalinkText","permalinkCopiedText","getOptionsFromHash","hash","optionsFromHash","defaultOptions","opt","optionOrder","initialSQL","formatQuery","initialQuery","initialOptions","queryString","parse","location","App","query","setQuery","useState","queryIC","setQueryIC","initialQueryIC","format","setFormat","options","setOptions","useReducer","optionsReducer","isSQLModalVisible","setIsSQLModalVisible","setSQL","sqlParseError","setSQLParseError","style","setStyle","copyPermalinkText","setCopyPermalinkText","permalinkHash","stringify","pushState","updateOptionsFromHash","opts","parseUrl","newURL","parseFragmentIdentifier","fragmentIdentifier","payload","addEventListener","window","removeEventListener","optionsInfo","optionsMetadata","default","setter","optionName","formatOptions","fields","validateQuery","undefined","parseNumbers","q","independentCombinators","formatString","getFormatQueryString","qbWrapperClassName","loadFromSQL","useCallback","parseSQL","qIC","err","message","onClickCopyPermalink","navigator","clipboard","writeText","origin","pathname","error","setTimeout","MUIThemeProvider","ThemeProvider","ChakraStyleProvider","ChakraProvider","commonRQBProps","styleConfigs","validator","defaultValidator","loadingPlaceholder","_jsxs","styleNameMap","display","docsLink","s","marginTop","link","flexDirection","justifyContent","formatMap","fmt","lbl","npmLink","Suspense","_createElement","height","render","StrictMode","document","getElementById"],"mappings":"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,CAAC,EAAG,EAAE,EAAG,EAAM,CAAC,EAAG,EAAE,EAAG,EAAM,CAAC,EAAG,EAAE,EAAG,EAAM,CAAC,EAAG,EAAE,EAAG,EAAM,CAAC,EAAG,EAAE,EAAG,EAAM,CAAC,EAAG,EAAE,EAAG,EAAM,CAAC,EAAG,EAAE,EAAG,EAAM,CAAC,EAAG,EAAE,EAAG,EAAM,CAAC,EAAG,EAAE,EAAG,GAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAG,EAAG,GAAM,CAAC,EAAG,EAAG,GAAI,GAAI,IAAK,IAAK,GAAG,EAAG,GAAM,CAAC,EAAG,GAAG,EAAG,GAAM,CAAC,EAAG,EAAE,EAAG,GAAM,CAAC,EAAG,EAAE,EAAG,GAAM,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAAG,EAAM,CAAC,EAAG,EAAE,EAAG,EAAM,CAAC,EAAG,EAAE,EAAG,GAAM,CAAC,EAAG,EAAE,EAAG,GAAM,CAAC,EAAG,EAAE,EAAG,GAAM,CAAC,EAAG,EAAE,EAAG,GAAM,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAAG,GAAM,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAAG,GAAM,CAAC,EAAG,GAAG,EAAG,GAAM,CAAC,EAAG,GAAG,EAAG,GAAM,CAAC,EAAG,GAAG,EAAG,GAAM,CAAC,EAAG,EAAE,EAAG,GAAM,CAAC,EAAG,EAAE,EAAG,GAAM,CAAC,EAAG,EAAE,EAAG,GAAM,CAAC,EAAG,GAAG,EAAG,GAAM,CAAC,EAAG,GAAG,EAAG,GAAM,CAAC,EAAG,GAAG,EAAG,GAAM,CAAC,EAAG,GAAG,EAAG,GAAM,CAAC,EAAG,GAAG,EAAG,GAAM,CAAC,EAAG,GAAG,EAAG,GAAM,CAAC,EAAG,GAAG,EAAG,GAAO,CAAC,EAAG,GAAG,EAAG,GAAO,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAAG,EAAO,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAAG,GAAO,CAAC,EAAG,GAAG,EAAG,EAAO,CAAC,EAAG,GAAG,EAAG,GAAO,CAAC,EAAG,EAAE,EAAG,GAAO,CAAC,EAAG,GAAG,EAAG,GAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAG,EAAG,GAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAG,EAAG,GAAO,CAAC,EAAG,GAAG,EAAG,GAAO,CAAC,GAAI,EAAE,EAAG,GAAO,CAAC,EAAG,EAAE,EAAG,GAAO,CAAC,EAAG,GAAG,EAAG,GAAO,CAAC,EAAG,GAAG,EAAG,GAAO,CAAC,EAAG,GAAG,EAAG,GAAO,CAAC,EAAG,EAAG,IAAK,GAAG,EAAG,GAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAG,EAAG,GAAO,CAAC,EAAG,EAAG,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAAG,GAAO,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAAG,GAAO,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAAG,GAAO,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAAG,GAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAG,EAAG,GAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAG,EAAG,GAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAG,EAAG,GAAO,CAAC,GAAI,GAAI,EAAE,EAAG,GAAO,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAG,EAAG,GAAO,CAAC,EAAG,GAAG,EAAG,GAAO,CAAC,EAAG,GAAG,EAAG,GAAO,CAAC,EAAG,EAAG,GAAI,EAAE,EAAG,GAAO,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAG,EAAG,GAAO,CAAC,EAAG,GAAG,EAAG,GAAO,CAAC,EAAG,GAAG,EAAG,GAAO,CAAC,EAAG,GAAG,EAAG,GAAO,CAAC,EAAG,GAAG,EAAG,GAAO,CAAC,EAAG,GAAG,EAAG,GAAO,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAG,EAAG,GAAO,CAAC,EAAG,GAAG,EAAG,GAAO,CAAC,EAAG,GAAG,EAAG,GAAO,CAAC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AG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,GAAI,CAAC,EAAG,CAAC,GAAI,EAAE,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EAAG,CAAC,IAAK,CAAC,EA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"}