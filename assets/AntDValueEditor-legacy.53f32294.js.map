{"version":3,"file":"AntDValueEditor-legacy.53f32294.js","sources":["../../../antd/src/AntDActionElement.tsx","../../../antd/src/AntDDragHandle.tsx","../../../antd/src/AntDNotToggle.tsx","../../../antd/src/utils.tsx","../../../antd/src/AntDValueSelector.tsx","../../../antd/src/AntDValueEditor.tsx"],"sourcesContent":["import { Button } from 'antd';\nimport type { ActionProps } from 'react-querybuilder';\n\nexport const AntDActionElement = ({\n  className,\n  handleOnClick,\n  label,\n  title,\n  disabled,\n  disabledTranslation,\n}: ActionProps) => (\n  <Button\n    type=\"primary\"\n    className={className}\n    title={disabledTranslation && disabled ? disabledTranslation.title : title}\n    onClick={e => handleOnClick(e)}\n    disabled={disabled && !disabledTranslation}>\n    {disabledTranslation && disabled ? disabledTranslation.label : label}\n  </Button>\n);\n\nAntDActionElement.displayName = 'AntDActionElement';\n","import { HolderOutlined } from '@ant-design/icons';\nimport { forwardRef } from 'react';\nimport type { DragHandleProps } from 'react-querybuilder';\n\nexport const AntDDragHandle = forwardRef<HTMLSpanElement, DragHandleProps>(\n  ({ className, title }, dragRef) => (\n    <span ref={dragRef} className={className} title={title}>\n      <HolderOutlined />\n    </span>\n  )\n);\n\nAntDDragHandle.displayName = 'AntDDragHandle';\n","import { Switch } from 'antd';\nimport type { NotToggleProps } from 'react-querybuilder';\n\nexport const AntDNotToggle = ({\n  className,\n  handleOnChange,\n  label,\n  checked,\n  title,\n  disabled,\n}: NotToggleProps) => (\n  <Switch\n    title={title}\n    className={className}\n    onChange={v => handleOnChange(v)}\n    checked={!!checked}\n    disabled={disabled}\n    checkedChildren={label}\n    unCheckedChildren=\"=\"\n  />\n);\n\nAntDNotToggle.displayName = 'AntDNotToggle';\n","import { Select } from 'antd';\nimport type { Field, NameLabelPair, OptionGroup } from 'react-querybuilder';\n\nconst { OptGroup, Option } = Select;\n\nexport const isOptionGroupArray = (arr: Field['values']): arr is OptionGroup[] =>\n  Array.isArray(arr) && arr.length > 0 && 'options' in arr[0];\n\nexport const toOptions = (arr?: NameLabelPair[] | OptionGroup[]) =>\n  isOptionGroupArray(arr)\n    ? arr.map(og => (\n        <OptGroup key={og.label} label={og.label}>\n          {og.options.map(opt => (\n            <Option key={opt.name} value={opt.name}>\n              {opt.label}\n            </Option>\n          ))}\n        </OptGroup>\n      ))\n    : Array.isArray(arr)\n    ? arr.map(opt => (\n        <Option key={opt.name} value={opt.name}>\n          {opt.label}\n        </Option>\n      ))\n    : /* istanbul ignore next */ null;\n","import { Select } from 'antd';\nimport { useMemo } from 'react';\nimport type { ValueSelectorProps } from 'react-querybuilder';\nimport { toOptions } from './utils';\n\nexport const AntDValueSelector = ({\n  className,\n  handleOnChange,\n  options,\n  value,\n  title,\n  disabled,\n  multiple,\n}: ValueSelectorProps) => {\n  const onChange = useMemo(() => {\n    if (multiple) {\n      return (v: string | string[]) =>\n        handleOnChange(Array.isArray(v) ? v.join(',') : /* istanbul ignore next */ v);\n    }\n    return (v: string) => handleOnChange(v);\n  }, [handleOnChange, multiple]);\n\n  const val = multiple\n    ? Array.isArray(value)\n      ? /* istanbul ignore next */ value\n      : value?.split(',')\n    : value;\n\n  const modeObj = multiple ? { mode: 'multiple' as const } : {};\n\n  return (\n    <span title={title} className={className}>\n      <Select\n        {...modeObj}\n        dropdownMatchSelectWidth={false}\n        disabled={disabled}\n        value={val as any}\n        onChange={onChange}>\n        {toOptions(options)}\n      </Select>\n    </span>\n  );\n};\n\nAntDValueSelector.displayName = 'AntDValueSelector';\n","import { Checkbox, DatePicker, Input, Radio, Switch, TimePicker } from 'antd';\nimport moment from 'moment';\nimport { useEffect } from 'react';\nimport type { ValueEditorProps } from 'react-querybuilder';\nimport { AntDValueSelector } from './AntDValueSelector';\n\nexport const AntDValueEditor = ({\n  fieldData,\n  operator,\n  value,\n  handleOnChange,\n  title,\n  className,\n  type,\n  inputType,\n  values,\n  disabled,\n  ...props\n}: ValueEditorProps) => {\n  useEffect(() => {\n    if (\n      inputType === 'number' &&\n      !['between', 'notBetween', 'in', 'notIn'].includes(operator) &&\n      typeof value === 'string' &&\n      value.includes(',')\n    ) {\n      handleOnChange('');\n    }\n  }, [inputType, operator, value, handleOnChange]);\n\n  if (operator === 'null' || operator === 'notNull') {\n    return null;\n  }\n\n  const placeHolderText = fieldData?.placeholder ?? '';\n  const inputTypeCoerced =\n    ['between', 'notBetween', 'in', 'notIn'].includes(operator) &&\n    // This next line is not in the default ValueEditor -- we can use\n    // antd's RangePicker to handle \"between\" and \"notBetween\".\n    !['date', 'datetime-local'].includes(`${inputType}`)\n      ? 'text'\n      : inputType || 'text';\n\n  switch (type) {\n    case 'select':\n    case 'multiselect':\n      return (\n        <AntDValueSelector\n          {...props}\n          className={className}\n          handleOnChange={handleOnChange}\n          options={values!}\n          value={value}\n          title={title}\n          disabled={disabled}\n          multiple={type === 'multiselect'}\n        />\n      );\n\n    case 'textarea':\n      return (\n        <Input.TextArea\n          value={value}\n          title={title}\n          className={className}\n          disabled={disabled}\n          placeholder={placeHolderText}\n          onChange={e => handleOnChange(e.target.value)}\n        />\n      );\n\n    case 'switch':\n      return (\n        <Switch\n          checked={!!value}\n          title={title}\n          className={className}\n          disabled={disabled}\n          onChange={v => handleOnChange(v)}\n        />\n      );\n\n    case 'checkbox':\n      return (\n        <span title={title} className={className}>\n          <Checkbox\n            type=\"checkbox\"\n            disabled={disabled}\n            onChange={e => handleOnChange(e.target.checked)}\n            checked={!!value}\n          />\n        </span>\n      );\n\n    case 'radio':\n      return (\n        <span className={className} title={title}>\n          {values!.map(v => (\n            <Radio\n              key={v.name}\n              value={v.name}\n              checked={value === v.name}\n              disabled={disabled}\n              onChange={e => handleOnChange(e.target.value)}>\n              {v.label}\n            </Radio>\n          ))}\n        </span>\n      );\n  }\n\n  switch (inputTypeCoerced) {\n    case 'date':\n    case 'datetime-local':\n      return operator === 'between' || operator === 'notBetween' ? (\n        <DatePicker.RangePicker\n          value={\n            typeof value === 'string' && /^[^,]+,[^,]+$/.test(value)\n              ? (value.split(',').map(v => moment(v)) as [moment.Moment, moment.Moment])\n              : undefined\n          }\n          showTime={inputTypeCoerced === 'datetime-local'}\n          className={className}\n          disabled={disabled}\n          placeholder={[placeHolderText, placeHolderText]}\n          onChange={dates =>\n            handleOnChange(dates?.map(d => d?.format(moment.HTML5_FMT.DATE)).join(','))\n          }\n        />\n      ) : (\n        <DatePicker\n          value={value ? moment(value) : null}\n          showTime={inputTypeCoerced === 'datetime-local'}\n          className={className}\n          disabled={disabled}\n          placeholder={placeHolderText}\n          onChange={(_d, dateString) => handleOnChange(dateString)}\n        />\n      );\n\n    case 'time':\n      return (\n        <TimePicker\n          value={value ? moment(value, 'HH:mm') : null}\n          className={className}\n          disabled={disabled}\n          placeholder={placeHolderText}\n          onChange={d => handleOnChange(d?.format('HH:mm') ?? '')}\n        />\n      );\n  }\n\n  return (\n    <Input\n      type={inputTypeCoerced}\n      value={value}\n      title={title}\n      className={className}\n      disabled={disabled}\n      placeholder={placeHolderText}\n      onChange={e => handleOnChange(e.target.value)}\n    />\n  );\n};\n\nAntDValueEditor.displayName = 'AntDValueEditor';\n"],"names":["className","handleOnClick","label","title","_ref","disabled","disabledTranslation","Button","type","onClick","e","children","displayName","AntDDragHandle","forwardRef","dragRef","_ref2","ref","_jsx","HolderOutlined","handleOnChange","_ref3","checked","Switch","onChange","v","checkedChildren","unCheckedChildren","Select","OptGroup","Option","_Select","toOptions","arr","isOptionGroupArray","Array","isArray","length","map","og","options","opt","value","name","AntDValueSelector","_ref4","multiple","useMemo","join","val","split","modeObj","mode","dropdownMatchSelectWidth","_ref5","fieldData","operator","inputType","values","props","_objectWithoutProperties","_excluded","useEffect","includes","placeHolderText","placeholder","inputTypeCoerced","Input","TextArea","target","Checkbox","Radio","DatePicker","RangePicker","test","moment","undefined","showTime","dates","d","format","HTML5_FMT","DATE","_d","dateString","TimePicker"],"mappings":"g5CAGiC,SAC/BA,GAAAA,IAAAA,EAAAA,EAAAA,UACAC,IAAAA,cACAC,EAAAA,EAAAA,MACAC,EAJ+BC,EAI/BD,MACAE,IAAAA,SACAC,EAAAA,EAAAA,6BAECC,EAAD,CACEC,KAAK,UACLR,UAAAA,EACAG,MAAOG,GAAuBD,EAAWC,EAAoBH,MAAQA,EACrEM,QAASC,SAAKT,GAALS,OAAKT,EAAcS,IAC5BL,SAAUA,IAAaC,EALzBK,SAMGL,GAAuBD,EAAWC,EAAoBJ,MAAQA,OAIjDU,YAAc,oBCjBnBC,EAAAA,IAAiBC,sBAC5B,WAAuBC,GAAvB,IAAGf,EAAHgB,EAAGhB,UAAWG,IAAAA,MAAd,SACE,OAAA,CAAMc,IAAKF,EAASf,UAAAA,EAAsBG,MAAAA,EAA1CQ,SACEO,EAACC,EAAD,UAKSP,YAAc,wBCTA,gBAC3BZ,IAAAA,UACAoB,EAAAA,EAAAA,eACAlB,EAH2BmB,EAG3BnB,MACAoB,IAAAA,QACAnB,EAAAA,EAAAA,MACAE,EAN2BgB,EAM3BhB,kBAECkB,EAAD,CACEpB,MAAAA,EACAH,UAAAA,EACAwB,SAAUC,SAAKL,GAALK,OAAKL,EAAeK,IAC9BH,UAAWA,EACXjB,SAAAA,EACAqB,gBAAiBxB,EACjByB,kBAAkB,SAIRf,YAAc,gBCnB5B,MAA6BgB,EAArBC,EAAAA,EAAAA,SAAUC,EAAlBC,EAAkBD,OAKLE,EAAY,SAACC,GACxBC,OAJgC,SAACD,GAAD,OAChCE,MAAMC,QAAQH,IAAQA,EAAII,OAAS,GAAK,YAAaJ,EAAI,GAGzDC,CAAmBD,GACfA,EAAIK,KAAIC,SACNA,GADMA,OACNrB,EAACW,EAAD,CAAyB3B,MAAOqC,EAAGrC,MAChCqC,SAAAA,EAAGC,QAAQF,KAAIG,SAAAA,GAAAA,SACbX,EAAD,CAAuBY,MAAOD,EAAIE,KAAlChC,SACG8B,EAAIvC,OADMuC,EAAIE,UAFNJ,EAAGrC,UAQpBiC,MAAMC,QAAQH,GACdA,EAAIK,KAAIG,SACNA,GAAAvB,OAAAA,EAACY,EAAD,CAAuBY,MAAOD,EAAIE,KAAlChC,SACG8B,EAAIvC,OADMuC,EAAIE,SAIQ,MCpBpBC,SAAoB,YAC/B5C,IAAAA,EAAAA,EAAAA,UACAoB,EAMwByB,EANxBzB,eACAoB,EAAAA,EAAAA,QACAE,EAIwBG,EAJxBH,MACAvC,IAAAA,MACAE,EAAAA,EAAAA,SACAyC,EACwBD,EADxBC,SAEMtB,EAAWuB,EAAAA,QAAAA,SAAQ,WACvB,OAAID,EACMrB,SAAAA,UACNL,EAAee,MAAMC,QAAQX,GAAKA,EAAEuB,KAAK,KAAkCvB,aAEvEA,GAAD,OAAeL,EAAeK,MACpC,CAACL,EAAgB0B,IAEdG,EAAMH,EACRX,MAAMC,QAAQM,GACeA,EAC3BA,MAAAA,OAAAA,EAAAA,EAAOQ,MAAM,KACfR,EAKF,SAAA,OAAA,CAAMvC,MAAAA,EAAcH,UAAAA,EAClBW,WAACiB,EACKuB,EAAAA,EAAAA,GALML,EAAW,CAAEM,KAAM,YAAwB,QAMrDC,0BAA0B,EAC1BhD,SAAAA,EACAqC,MAAOO,EACPzB,SAAAA,EACCQ,SAAAA,EAAUQ,WAMnBI,EAAkBhC,YAAc,2BCtCD,SAAA0C,GAC7BC,IAAAA,EAAAA,EAAAA,EAAAA,UACAC,EAUsBF,EAVtBE,SACAd,IAAAA,MACAtB,EAAAA,EAAAA,eACAjB,EAOsBmD,EAPtBnD,MACAH,IAAAA,UACAQ,EAAAA,EAAAA,KACAiD,EAIsBH,EAJtBG,UACAC,IAAAA,OACArD,EAAAA,EAAAA,SACGsD,EACmBC,EAAAN,EAAAO,GAYlBL,GAXJM,EAAAA,QAAAA,WAAU,WAEQ,WAAdL,IACC,CAAC,UAAW,aAAc,KAAM,SAASM,SAASP,IAClC,iBAAVd,GACPA,EAAMqB,SAAS,MAEf3C,EAAe,MAEhB,CAACqC,EAAWD,EAAUd,EAAOtB,IAEf,SAAboC,GAAoC,YAAbA,EAClB,OAAA,KAGHQ,IAAAA,UAAkBT,EAAAA,MAAAA,OAAlBS,EAAkBT,EAAWU,2BAAe,GAC5CC,EACJ,CAAC,UAAW,aAAc,KAAM,SAASH,SAASP,KAGjD,CAAC,OAAQ,kBAAkBO,mBAAYN,IACpC,OACAA,GAAa,OAEXjD,OAAAA,GACD,IAAA,SACA,IAAA,cAED,SAACoC,SACKe,OACJ3D,UAAAA,EACAoB,eAAAA,EACAoB,QAASkB,EACThB,MAAAA,EACAvC,MAAAA,EACAE,SAAAA,EACAyC,SAAmB,gBAATtC,KAIX,IAAA,WAED,OAAAU,EAACiD,EAAMC,SAAP,CACE1B,MAAAA,EACAvC,MAAAA,EACAH,UAAAA,EACAK,SAAAA,EACA4D,YAAaD,EACbxC,SAAUd,SAAAA,UAAKU,EAAeV,EAAE2D,OAAO3B,UAIxC,IAAA,SACH,SACGnB,EAAD,CACED,UAAWoB,EACXvC,MAAAA,EACAH,UAAAA,EACAK,SAAAA,EACAmB,SAAUC,SAAKL,GAALK,OAAKL,EAAeK,MAI/B,IAAA,WAED,SAAA,OAAA,CAAMtB,MAAAA,EAAcH,UAAAA,EAApBW,WACG2D,EAAD,CACE9D,KAAK,WACLH,SAAAA,EACAmB,SAAUd,SAAAA,GAAAA,OAAKU,EAAeV,EAAE2D,OAAO/C,UACvCA,UAAWoB,MAKd,IAAA,QAED,SAAA,OAAA,CAAM1C,UAAAA,EAAsBG,MAAAA,EAA5BQ,SACG+C,EAAQpB,KAAIb,SAAAA,YACV8C,EAAD,CAEE7B,MAAOjB,EAAEkB,KACTrB,QAASoB,IAAUjB,EAAEkB,KACrBtC,SAAAA,EACAmB,SAAUd,SAAAA,GAAAA,OAAKU,EAAeV,EAAE2D,OAAO3B,QALzC/B,SAMGc,EAAEvB,OALEuB,EAAEkB,WAYXuB,OAAAA,GACD,IAAA,OACA,IAAA,iBACIV,MAAa,YAAbA,GAAuC,eAAbA,EAC/BtC,EAACsD,EAAWC,YAAZ,CACE/B,MACmB,iBAAVA,GAAsB,gBAAgBgC,KAAKhC,GAC7CA,EAAMQ,MAAM,KAAKZ,KAAIb,mBAAKkD,EAAOlD,WAClCmD,EAENC,SAA+B,mBAArBX,EACVlE,UAAAA,EACAK,SAAAA,EACA4D,YAAa,CAACD,EAAiBA,GAC/BxC,SAAUsD,SAAAA,GAAAA,OACR1D,EAAe0D,MAAAA,SAAAA,EAAOxC,KAAIyC,SAAKA,GAAAA,OAAAA,MAAAA,SAAAA,EAAGC,OAAOL,EAAOM,UAAUC,SAAOlC,KAAK,SAI1E9B,EAACsD,EAAD,CACE9B,MAAOA,EAAQiC,EAAOjC,GAAS,KAC/BmC,SAA+B,mBAArBX,EACVlE,UAAAA,EACAK,SAAAA,EACA4D,YAAaD,EACbxC,SAAU,SAAC2D,EAAIC,GAAL,OAAoBhE,EAAegE,MAI9C,IAAA,OACH,SACGC,EAAD,CACE3C,MAAOA,EAAQiC,EAAOjC,EAAO,SAAW,KACxC1C,UAAAA,EACAK,SAAAA,EACA4D,YAAaD,EACbxC,SAAUuD,SAAK3D,GAAAA,IAAAA,EAAAA,OAAAA,UAAe2D,EAAAA,MAAAA,OAAf3D,EAAe2D,EAAGC,OAAO,wBAAY,OAK5D,SACGb,EAAD,CACE3D,KAAM0D,EACNxB,MAAAA,EACAvC,MAAAA,EACAH,UAAAA,EACAK,SAAAA,EACA4D,YAAaD,EACbxC,SAAUd,SAAAA,GAAKU,OAAAA,EAAeV,EAAE2D,OAAO3B,aAK7B9B,YAAc"}