{"version":3,"file":"AntDValueEditor.c50695d2.js","sources":["../../../antd/src/AntDActionElement.tsx","../../../antd/src/AntDDragHandle.tsx","../../../antd/src/AntDNotToggle.tsx","../../../antd/src/utils.tsx","../../../antd/src/AntDValueSelector.tsx","../../../antd/src/AntDValueEditor.tsx"],"sourcesContent":["import { Button } from 'antd';\nimport type { ActionProps } from 'react-querybuilder';\n\nexport const AntDActionElement = ({\n  className,\n  handleOnClick,\n  label,\n  title,\n  disabled,\n  disabledTranslation,\n}: ActionProps) => (\n  <Button\n    type=\"primary\"\n    className={className}\n    title={disabledTranslation && disabled ? disabledTranslation.title : title}\n    onClick={e => handleOnClick(e)}\n    disabled={disabled && !disabledTranslation}>\n    {disabledTranslation && disabled ? disabledTranslation.label : label}\n  </Button>\n);\n\nAntDActionElement.displayName = 'AntDActionElement';\n","import { HolderOutlined } from '@ant-design/icons';\nimport { forwardRef } from 'react';\nimport type { DragHandleProps } from 'react-querybuilder';\n\nexport const AntDDragHandle = forwardRef<HTMLSpanElement, DragHandleProps>(\n  ({ className, title }, dragRef) => (\n    <span ref={dragRef} className={className} title={title}>\n      <HolderOutlined />\n    </span>\n  )\n);\n\nAntDDragHandle.displayName = 'AntDDragHandle';\n","import { Switch } from 'antd';\nimport type { NotToggleProps } from 'react-querybuilder';\n\nexport const AntDNotToggle = ({\n  className,\n  handleOnChange,\n  label,\n  checked,\n  title,\n  disabled,\n}: NotToggleProps) => (\n  <Switch\n    title={title}\n    className={className}\n    onChange={v => handleOnChange(v)}\n    checked={!!checked}\n    disabled={disabled}\n    checkedChildren={label}\n    unCheckedChildren=\"=\"\n  />\n);\n\nAntDNotToggle.displayName = 'AntDNotToggle';\n","import { Select } from 'antd';\nimport type { Field, NameLabelPair, OptionGroup } from 'react-querybuilder';\n\nconst { OptGroup, Option } = Select;\n\nexport const isOptionGroupArray = (arr: Field['values']): arr is OptionGroup[] =>\n  Array.isArray(arr) && arr.length > 0 && 'options' in arr[0];\n\nexport const toOptions = (arr?: NameLabelPair[] | OptionGroup[]) =>\n  isOptionGroupArray(arr)\n    ? arr.map(og => (\n        <OptGroup key={og.label} label={og.label}>\n          {og.options.map(opt => (\n            <Option key={opt.name} value={opt.name}>\n              {opt.label}\n            </Option>\n          ))}\n        </OptGroup>\n      ))\n    : Array.isArray(arr)\n    ? arr.map(opt => (\n        <Option key={opt.name} value={opt.name}>\n          {opt.label}\n        </Option>\n      ))\n    : /* istanbul ignore next */ null;\n","import { Select } from 'antd';\nimport { useMemo } from 'react';\nimport type { ValueSelectorProps } from 'react-querybuilder';\nimport { toOptions } from './utils';\n\nexport const AntDValueSelector = ({\n  className,\n  handleOnChange,\n  options,\n  value,\n  title,\n  disabled,\n  multiple,\n}: ValueSelectorProps) => {\n  const onChange = useMemo(() => {\n    if (multiple) {\n      return (v: string | string[]) =>\n        handleOnChange(Array.isArray(v) ? v.join(',') : /* istanbul ignore next */ v);\n    }\n    return (v: string) => handleOnChange(v);\n  }, [handleOnChange, multiple]);\n\n  const val = multiple\n    ? Array.isArray(value)\n      ? /* istanbul ignore next */ value\n      : value?.split(',')\n    : value;\n\n  const modeObj = multiple ? { mode: 'multiple' as const } : {};\n\n  return (\n    <span title={title} className={className}>\n      <Select\n        {...modeObj}\n        dropdownMatchSelectWidth={false}\n        disabled={disabled}\n        value={val as any}\n        onChange={onChange}>\n        {toOptions(options)}\n      </Select>\n    </span>\n  );\n};\n\nAntDValueSelector.displayName = 'AntDValueSelector';\n","import { Checkbox, DatePicker, Input, Radio, Switch, TimePicker } from 'antd';\nimport moment from 'moment';\nimport { useEffect } from 'react';\nimport type { ValueEditorProps } from 'react-querybuilder';\nimport { AntDValueSelector } from './AntDValueSelector';\n\nexport const AntDValueEditor = ({\n  fieldData,\n  operator,\n  value,\n  handleOnChange,\n  title,\n  className,\n  type,\n  inputType,\n  values,\n  disabled,\n  ...props\n}: ValueEditorProps) => {\n  useEffect(() => {\n    if (\n      inputType === 'number' &&\n      !['between', 'notBetween', 'in', 'notIn'].includes(operator) &&\n      typeof value === 'string' &&\n      value.includes(',')\n    ) {\n      handleOnChange('');\n    }\n  }, [inputType, operator, value, handleOnChange]);\n\n  if (operator === 'null' || operator === 'notNull') {\n    return null;\n  }\n\n  const placeHolderText = fieldData?.placeholder ?? '';\n  const inputTypeCoerced =\n    ['between', 'notBetween', 'in', 'notIn'].includes(operator) &&\n    // This next line is not in the default ValueEditor -- we can use\n    // antd's RangePicker to handle \"between\" and \"notBetween\".\n    !['date', 'datetime-local'].includes(`${inputType}`)\n      ? 'text'\n      : inputType || 'text';\n\n  switch (type) {\n    case 'select':\n    case 'multiselect':\n      return (\n        <AntDValueSelector\n          {...props}\n          className={className}\n          handleOnChange={handleOnChange}\n          options={values!}\n          value={value}\n          title={title}\n          disabled={disabled}\n          multiple={type === 'multiselect'}\n        />\n      );\n\n    case 'textarea':\n      return (\n        <Input.TextArea\n          value={value}\n          title={title}\n          className={className}\n          disabled={disabled}\n          placeholder={placeHolderText}\n          onChange={e => handleOnChange(e.target.value)}\n        />\n      );\n\n    case 'switch':\n      return (\n        <Switch\n          checked={!!value}\n          title={title}\n          className={className}\n          disabled={disabled}\n          onChange={v => handleOnChange(v)}\n        />\n      );\n\n    case 'checkbox':\n      return (\n        <span title={title} className={className}>\n          <Checkbox\n            type=\"checkbox\"\n            disabled={disabled}\n            onChange={e => handleOnChange(e.target.checked)}\n            checked={!!value}\n          />\n        </span>\n      );\n\n    case 'radio':\n      return (\n        <span className={className} title={title}>\n          {values!.map(v => (\n            <Radio\n              key={v.name}\n              value={v.name}\n              checked={value === v.name}\n              disabled={disabled}\n              onChange={e => handleOnChange(e.target.value)}>\n              {v.label}\n            </Radio>\n          ))}\n        </span>\n      );\n  }\n\n  switch (inputTypeCoerced) {\n    case 'date':\n    case 'datetime-local':\n      return operator === 'between' || operator === 'notBetween' ? (\n        <DatePicker.RangePicker\n          value={\n            typeof value === 'string' && /^[^,]+,[^,]+$/.test(value)\n              ? (value.split(',').map(v => moment(v)) as [moment.Moment, moment.Moment])\n              : undefined\n          }\n          showTime={inputTypeCoerced === 'datetime-local'}\n          className={className}\n          disabled={disabled}\n          placeholder={[placeHolderText, placeHolderText]}\n          onChange={dates =>\n            handleOnChange(dates?.map(d => d?.format(moment.HTML5_FMT.DATE)).join(','))\n          }\n        />\n      ) : (\n        <DatePicker\n          value={value ? moment(value) : null}\n          showTime={inputTypeCoerced === 'datetime-local'}\n          className={className}\n          disabled={disabled}\n          placeholder={placeHolderText}\n          onChange={(_d, dateString) => handleOnChange(dateString)}\n        />\n      );\n\n    case 'time':\n      return (\n        <TimePicker\n          value={value ? moment(value, 'HH:mm') : null}\n          className={className}\n          disabled={disabled}\n          placeholder={placeHolderText}\n          onChange={d => handleOnChange(d?.format('HH:mm') ?? '')}\n        />\n      );\n  }\n\n  return (\n    <Input\n      type={inputTypeCoerced}\n      value={value}\n      title={title}\n      className={className}\n      disabled={disabled}\n      placeholder={placeHolderText}\n      onChange={e => handleOnChange(e.target.value)}\n    />\n  );\n};\n\nAntDValueEditor.displayName = 'AntDValueEditor';\n"],"names":["AntDActionElement","className","handleOnClick","label","title","disabled","disabledTranslation","e","displayName","AntDDragHandle","forwardRef","dragRef","_jsx","AntDNotToggle","handleOnChange","checked","v","OptGroup","Option","Select","isOptionGroupArray","arr","Array","isArray","length","toOptions","map","og","options","opt","name","AntDValueSelector","value","multiple","onChange","useMemo","join","val","split","mode","AntDValueEditor","fieldData","operator","type","inputType","values","props","useEffect","includes","placeHolderText","placeholder","inputTypeCoerced","target","test","moment","undefined","dates","d","format","HTML5_FMT","DATE","_d","dateString"],"mappings":"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"}